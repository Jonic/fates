%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (nevetsokyeron) ()%%Title: (fates-case-v1.8-razorlab-ponoko.eps)%%CreationDate: 8/30/19 6:19 PM%%Canvassize: 16383%%BoundingBox: 123 -706 1160 -336%%HiResBoundingBox: 123.3267 -705.665 1159.832 -336.2129%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_screens_AI5 1.0 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%RGBProcessColor: 0.356863 0.356863 0.356863 (AutoCAD Color)%%+ 0.678431 0.678431 0.678431 (AutoCAD Color 1)%%+ 0 0 0 (AutoCAD Color 2)%%+ 0.2 0.8 0 (AutoCAD Color 4)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 648.248 -864.248 648.248 -864.248%AI3_TileBox: 360 -1220 936 -486%AI3_DocumentPreview: Header%AI5_ArtSize: 1088.5039 1088.5039%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -126.252 -162.748 1 1426 1034 18 1 0 43 152 0 0%AI5_OpenViewLayers: 7%%PageOrigin:342 -1260%AI7_GridSettings: 28.3465 10 28.3465 10 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 25 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 25 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Green, Yellow, Orange)(Green, Yellow, Orange) 0 7 Bd[<000102030405060708090A0C0D0E1011121415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F5051525354555758595A5C5D5E5F616263646667696A6B6C6E6F707273747778797A7C7E7F808283848687888A8B8C8E8F909294959697999A9B9C9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBEBFC0C1C1C2C3C4C4C5C6C7C7C8C8C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D5D5D5D5D6D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6><BEBEBEBDBDBDBDBCBCBCBBBABAB9B9B8B7B7B6B5B4B4B4B2B2B1B1AFAFAFAEACACABABA9A8A8A7A6A5A5A4A2A2A1A19F9E9E9D9B9A9A9997969695939291918E8E8D8C8A898888858484838180807F7D7C7C7B797877777474737270706F6F6C6B6B6A68686767656464636160605F5D5D5C5C5A5A595957575656555353535250504F4F4D4D4D4C4B4A4A4A484847474646454544434343414140403F3E3E3E3C3C3C3C3A3A3A3A38383838373636363434343432323232303030302F2E2E2E2D2D2D2C2B2B2B2B2929292928282828262626262424242422222222202020201F1F1F1F1D1D1D1D1B1B1B1B1A1A1A1A181818><FCFCFDFCFCFDFDFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFCFBFCFBFBFBFAFAFAFAFAFBF9F9FAFAFAF9F9FAFAFAFBF9F9FAFAFAFAF9FAFAFAFAFBF9F9F9FAFAFAF8F8F8F8F8F9F7F7F7F9F9F9F7F8F8F8F8F9F7F7F7F9F9FAF8F9FAFAFAFCFAFBFBFDFEFCFCFDFEFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFE><000000000000000000000001010101010101010202020203030304040404050505060607080809090A0A0B0B0C0D0D0E0E0F1010111212131414151516161717181819191A1B1B1C1C1D1D1D1E1E1F1F1F20202021212222222223222323232323242423242424242424242424242423232323222222222121222222212121211F1F1F1F1E1E1E1E1D1D1D1C1B1B1B1B1A1A1A1A1918181817171717151515151414141412121212111111111010100F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0A0A090909090808080807070707060606060505050505050505040404040404040403030303030303030303030302020202020202><F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F6F6F6F707070707171717172727272737373737474747475757575767676767777777778787878797979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808080818181818282828283838383838484848485858585868686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C8D8D8D8D8E8E8E8E8F8F8F8F909090909191919192929292939393939494949495959595969696969797979798989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0A1A1A1><2222222323232323232424242424242525252525252626262626262727272727272828282828282929292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F30303030303031313131313132323232323233333333333334343434343435353535353536363636363737373737373838383838383939393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3C3D3D3D3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F40404040404041414141414242424242424343434343434444444444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A4B4B4B>4 %_Br<04040404040504040404040303030404030303020202020203030303030303030304040303030302020203030303020202020202020201010101010100010101010100000000000000000000000000000000000000000000010000000000000000010101000000000000000000000000000000000001010100><1618191B1C1D1F202223252628292A2B2C2E2F313234353738393B3D3E404143454547484A4B4D4E50515253545657595A5C5D5E5F616263656668696B6D6F707173747677797A7B7D7E808182848687898B8D8E90919294959698999A9C9D9FA0A1A3A4A5A7A8A9ABACADAEB0B1B3B4B5B6B7B9BABABCBDBE><F7F7F7F7F7F8F8F8F8F7F7F7F7F6F7F7F7F6F6F7F7F7F7F7F8F7F8F8F8F8F9F9FAFBFBFBFBFCFCFCFDFDFEFFFEFDFDFDFCFCFCFCFDFDFDFDFDFDFCFCFBFCFBFCFCFCFCFBFBFBFCFBFBFBFBFCFCFCFCFDFDFEFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFCFCFCFBFBFBFBFBFBFAFBFBFBFBFC><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2F2><DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665><171717171717181818181818181818181819191919191919191919191A1A1A1A1A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F1F1F1F20202020202020202020202121212121212121212121222222222222>4 %_Br<D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0CFCFCECECECECDCDCDCCCBCBCBCBCACAC9C9C8C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0BFBFBEBEBDBDBCBBBBBABAB9B8B8B7B6B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A9A8A7A6A5A5A4A3A2A1A19F9E9E9D9C9B9A9998979696959493929291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7A797877767574737271706F6E6D6C6B6A6968666564636261605F5E5D5C5B5A5857565554535251504F4E4D4C4B4A4948474645444241403F3E3D3B3A39373635333231302F2E2D2C2A2928272625242322201F1E1D1C1B1A19171615141312100F0E0D0C0B0A0907060504><181818161616161515151513131313121212121111111110101010100E0E0E0F0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0A09090A0A0809090908080808070707080606070706060606060505060605050505040505050404050504040405050404040504040404030304040203030302020303020203030302030303020303030203030302030404030404050504050505040505050505050605050606050606060506060707060708080708080908080909080809090909090A0A0A0A0B0B0A0B0B0C0B0B0C0C0B0C0C0D0C0D0D0E0D0D0E0E0F0D0E0E0F0E0E0F0F0E0F10100F10111110111112121112121312121313121313141314141514151516151616><FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFDFDFDFCFCFCFBFCFBFBFBFBFBFAFAFAFAFAFAFAF9FAFAF9F9F9F9F9F8F8F8F8F8F7><02020202020202010101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A7A8A8A8A8A9A9A9A9AAAAAAAAABABABABACACACACACADADADADAEAEAEAEAFAFAFAFB0B0B0B0B1B1B1B1B2B2B2B2B2B3B3B3B3B4B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBBBCBCBCBCBDBDBDBDBDBEBEBEBEBFBFBFBFC0C0C0C0C1C1C1C1C2C2C2C2C2C3C3C3C3C4C4C4C4C5C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C8C9C9C9C9CACACACACBCBCBCBCCCCCCCCCDCDCDCDCDCECECECECFCFCFCFD0D0D0D0D1D1D1D1D2D2D2D2D3D3D3D3D3D4D4D4D4D5D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADBDBDBDBDCDCDCDCDDDDDDDDDEDEDE><4B4B4B4A4A4A4A4A494949494948484848484747474747464646464545454545444444444443434343434242424242414141414140404040403F3F3F3F3F3E3E3E3E3E3D3D3D3D3D3C3C3C3C3C3B3B3B3B3A3A3A3A3A393939393938383838383737373737363636363635353535353434343434333333333332323232323131313130303030302F2F2F2F2F2E2E2E2E2E2D2D2D2D2D2C2C2C2C2C2B2B2B2B2B2A2A2A2A2A292929292928282828282727272726262626262525252525242424242423232323232222222222212121212120202020201F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1C1C1C1C1B1B1B1B1B1A1A1A1A1A19191919191818181818171717>4 %_Br<000102030405060708090A0C0D0E1011121415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F5051525354555758595A5C5D5E5F616263646667696A6B6C6E6F707273747778797A7C7E7F808283848687888A8B8C8E8F909294959697999A9B9C9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBEBFC0C1C1C2C3C4C4C5C6C7C7C8C8C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D5D5D5D5D6D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6><BEBEBEBDBDBDBDBCBCBCBBBABAB9B9B8B7B7B6B5B4B4B4B2B2B1B1AFAFAFAEACACABABA9A8A8A7A6A5A5A4A2A2A1A19F9E9E9D9B9A9A9997969695939291918E8E8D8C8A898888858484838180807F7D7C7C7B797877777474737270706F6F6C6B6B6A68686767656464636160605F5D5D5C5C5A5A595957575656555353535250504F4F4D4D4D4C4B4A4A4A484847474646454544434343414140403F3E3E3E3C3C3C3C3A3A3A3A38383838373636363434343432323232303030302F2E2E2E2D2D2D2C2B2B2B2B2929292928282828262626262424242422222222202020201F1F1F1F1D1D1D1D1B1B1B1B1A1A1A1A181818><FCFCFDFCFCFDFDFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFCFBFCFBFBFBFAFAFAFAFAFBF9F9FAFAFAF9F9FAFAFAFBF9F9FAFAFAFAF9FAFAFAFAFBF9F9F9FAFAFAF8F8F8F8F8F9F7F7F7F9F9F9F7F8F8F8F8F9F7F7F7F9F9FAF8F9FAFAFAFCFAFBFBFDFEFCFCFDFEFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFE><000000000000000000000001010101010101010202020203030304040404050505060607080809090A0A0B0B0C0D0D0E0E0F1010111212131414151516161717181819191A1B1B1C1C1D1D1D1E1E1F1F1F20202021212222222223222323232323242423242424242424242424242423232323222222222121222222212121211F1F1F1F1E1E1E1E1D1D1D1C1B1B1B1B1A1A1A1A1918181817171717151515151414141412121212111111111010100F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0A0A090909090808080807070707060606060505050505050505040404040404040403030303030303030303030302020202020202><F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F6F6F6F707070707171717172727272737373737474747475757575767676767777777778787878797979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808080818181818282828283838383838484848485858585868686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C8D8D8D8D8E8E8E8E8F8F8F8F909090909191919192929292939393939494949495959595969696969797979798989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0A1A1A1><2222222323232323232424242424242525252525252626262626262727272727272828282828282929292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F30303030303031313131313132323232323233333333333334343434343435353535353536363636363737373737373838383838383939393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3C3D3D3D3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F40404040404041414141414242424242424343434343434444444444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A4B4B4B>4 %_Br<04040404040504040404040303030404030303020202020203030303030303030304040303030302020203030303020202020202020201010101010100010101010100000000000000000000000000000000000000000000010000000000000000010101000000000000000000000000000000000001010100><1618191B1C1D1F202223252628292A2B2C2E2F313234353738393B3D3E404143454547484A4B4D4E50515253545657595A5C5D5E5F616263656668696B6D6F707173747677797A7B7D7E808182848687898B8D8E90919294959698999A9C9D9FA0A1A3A4A5A7A8A9ABACADAEB0B1B3B4B5B6B7B9BABABCBDBE><F7F7F7F7F7F8F8F8F8F7F7F7F7F6F7F7F7F6F6F7F7F7F7F7F8F7F8F8F8F8F9F9FAFBFBFBFBFCFCFCFDFDFEFFFEFDFDFDFCFCFCFCFDFDFDFDFDFDFCFCFBFCFBFCFCFCFCFBFBFBFCFBFBFBFBFCFCFCFCFDFDFEFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFCFCFCFBFBFBFBFBFBFAFBFBFBFBFC><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2F2><DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665><171717171717181818181818181818181819191919191919191919191A1A1A1A1A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F1F1F1F20202020202020202020202121212121212121212121222222222222>4 %_Br<D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D2D1D1D1D1D0D0D0CFCFCECECECECDCDCDCCCBCBCBCBCBCACAC9C9C8C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0BFBFBFBEBEBDBDBCBBBBBBBABAB9B8B8B8B7B6B6B5B5B5B4B3B2B2B2B1B0AFAEAEAEADACABABABAAA9A9A9A8A7A6A6A5A5A4A4A3A2A1A1A19F9E9E9E9D9C9C9B9A99999897969696959594939292929191908F8E8E8D8C8C8B8A8A8988888786868584848382828180807F7E7E7D7C7C7B7A7A7A79797878777676757474737372717170706F6E6E6D6D6C6B6B6A6A696968666665656464636262616160605F5F5E5D5D5C5C5B5B595A58585757565655555454535252515150504F4F4F4E4E4D4D4C4C4B4B4A4A49494848474746464645454444424241414140403F3F3E3E3E3D3D3B3B3A3A3A39393737373636353535333332323231313130302F2F2F2E2E2E2D2D2D2C2C2A2A2A29292928282827272726262625252524242424232323222222202020201F1F1F1E1E1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191917171717161616161515151515141414141313131313121212121210101010100F0F0F0F0F0F0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0A0A0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909090707070707070707070707060606060606060606060606050505050505050505050505050505050505050504040404040404040404040404040404040404040404040404040404><181818161616161515151513131313121212121211111111101010100E0E0E0E0F0D0D0D0D0C0C0C0C0C0B0B0B0B0A0A0A0A0A0909090A0A080909090908080808070707070806060707070606060606050505060605050505050405050505040405050504040404050504040404050404040404040303040404020303030303020203030302020303030302020303030302020303030302030303030302030304040403040404050504040405050505040405050505050505050506060505050606060605060606060607050606060707070606070708080807070808080809090808080909090908080808090909090909090909090A0A0A0A0A0A0A0B0B0B0B0A0A0A0B0B0B0B0C0C0B0B0B0B0C0C0C0C0C0B0B0C0C0C0C0D0D0D0C0C0D0D0D0D0D0E0E0F0D0D0D0D0E0E0E0E0E0F0D0D0D0D0E0E0E0E0E0F0F0D0E0E0E0E0E0F0F0F0F0F0E0E0E0F0F0F101010101010110F0F1010101111111111111112101011111111111111121212121211111211111212121212121212131311111212121212121212131313131313131312121212121313131313131313131314141414141313131313131414141414141414141414141515151515151616141414141415151515151515151515151515151515151616161616161616161616171717171515151515151515161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616><FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFBFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFAFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9FAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7><02020202020202010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242526262728292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F40414243444545464748494A4A4B4C4D4E4F4F5051525353545556575858595A5B5C5C5D5E5F5F606162636364656666676869696A6B6C6C6D6E6F6F707172727374757576777778797A7A7B7C7C7D7E7F7F8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919293939495959696979898999A9A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A5A6A7A7A8A8A9A9AAABABACACADADAEAEAFB0B0B1B1B2B2B3B3B4B4B5B5B6B6B7B7B8B8B9BABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D2D3D3D4D4D4D5D5D6D6D6D7D7D7D8D8D9D9D9DADADADBDBDBDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E8E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F0F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F7F7F8F8F8F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A5A6A6A6A6A7A7A7A7A8A8A8A8A8A9A9A9A9AAAAAAAAAAABABABABACACACACACADADADADADAEAEAEAEAEAFAFAFAFB0B0B0B0B0B1B1B1B1B1B2B2B2B2B2B3B3B3B3B3B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B7B7B7B7B7B7B8B8B8B8B8B9B9B9B9B9B9BABABABABABBBBBBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBEBFBFBFBFBFBFC0C0C0C0C0C0C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C4C4C4C4C4C4C5C5C5C5C5C5C5C6C6C6C6C6C6C6C7C7C7C7C7C7C7C8C8C8C8C8C8C8C9C9C9C9C9C9C9CACACACACACACACACBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCECECECECECECECECFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D4D4D4D5D5D5D5D5D5D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8D8D8D8D8D8D8D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9DADADADADADADADADADADADADADADADADADADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDE><4B4B4B4A4A4A4A4A494949494948484848484747474747464646464645454545454444444444444343434343424242424241414141414140404040403F3F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3C3C3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A393939393939393838383838383737373737373636363636363535353535353534343434343434333333333333323232323232323131313131313130303030303030302F2F2F2F2F2F2F2E2E2E2E2E2E2E2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2929292929292929292828282828282828282727272727272727272626262626262626262525252525252525252524242424242424242424232323232323232323232322222222222222222222222121212121212121212121212020202020202020202020201F1F1F1F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1919191919191919191919191919191919191919191919191919191818181818181818181818181818181818181818181818181818181818181818181818181818181818171717171717171717171717171717171717171717171717171717171717171717171717171717171717171717171717171717171717171717171717>4 %_Br[0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 100 %_BS%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 100 Bs0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 80.117 %_BS%_0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 80.117 Bs0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 64 %_BS%_0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 64 Bs0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 47 %_BS%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 47 Bs0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 30 %_BS%_0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 30 Bs0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 15 %_BS%_0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 15 Bs0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 28 0 %_BS%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 28 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple Radial)(Purple Radial) 1 2 Bd[<0000000102020303030404040506050606070808090A0A0B0C0B0C0C0D0E0E0F101011111213131313141515161617181819191A1A1B1C1C1D1D1E1E1F20202122232324252526262727282829292A2B2B2C2C2D2D2E2E2F2F3030313132323333353436353737383839393A3A3B3B3C3C3D3E3F3F414141434344444545464647474748484A4A4B4B4C4C4C4E4E4F4F50505051515252525353545454565657575758585A5A5A5B5B5D5D5D5E5E5E5F5F6160606262626363636565656666666767676969696A6A6A6B6C6C6D6D6D6E6E6E707070707171717373737474747476767676787878797979797B7B7B7B7C7C7D7C7E7E7E7E808080808181818182838383838485858585868686868688888888888989898A8A8B8B8B8B8B8B8D8D8D8D8D8D8E8E8E8E8E8E8E9090909090909091919191919191919393939393939393939494949494949495959594949696969696969696969696969696969698989898989898989898989898989898989898989898><00000001020303040506070809090B0B0D0E0F111213131314161618191A1B1C1C1E1F201F20212224242527282929292B2C2D2E2F30303132343536373738393B3C3D3D3D3F4041424243444547464748494B4A4C4D4E4F4F50515252535556575758595B5B5C5D5D5E5F60606163646465676668696B6B6C6E6D6F7070717272737574767777797A7A7B7D7C7E7F7F81818283838486868787888A8A8B8B8C8E8E8F8F9092929393959596979799999B9A9C9C9D9D9FA0A0A2A1A3A3A4A4A6A6A7A7A8A8AAAAABABACACAEAEAFAFAFB1B1B2B2B4B4B5B5B7B7B7B8B8B9B9BBBBBBBCBCBDBDBDBEBFC0C0C0C1C1C2C2C2C4C4C3C5C5C6C6C6C7C7C7C9C9C9CACACACCCCCCCDCDCDCFCECED0D0D0D0D1D1D1D2D2D2D2D4D4D4D5D5D5D5D6D6D6D6D8D8D8D8D9D9D9D9D9DADADADADCDCDCDCDCDDDDDDDDDDDDDEDEDEDEDEDEDFDFDFDFDFDFE1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E3E3E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5>0<00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><FFFEFEFDFCFCFBFAFAF9F8F8F7F6F6F5F5F4F3F3F2F1F1F0EFEFEEEEEDECECEBEAEAE9E9E8E7E7E6E6E5E4E4E3E3E2E1E1E0E0DFDFDEDDDDDCDCDBDBDAD9D9D8D8D7D7D6D5D5D4D4D3D3D2D2D1D1D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0B0AFAFAEAEAEADADACACACABABAAAAAAA9A9A8A8A8A7A7A6A6A6A5A5A5A4A4A3A3A3A2A2A2A1A1A1A0A0A09F9F9F9E9E9E9D9D9D9C9C9C9B9B9B9A9A9A9999999898989897979796969695959595949494949393939292929291919191909090908F8F8F8F8E8E8E8E8D8D8D8D8D8C8C8C8C8B8B8B8B8B8A8A8A8A8A8989898989888888888887878787878786868686868685858585858585848484848484848383838383838383828282828282828282818181818181818181818181808080808080808080808080808080807F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E2E1E0DFDEDDDDDCDBDAD9D8D7D6D5D4D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C7C6C5C4C3C2C2C1C0BFBEBDBDBCBBBAB9B9B8B7B6B5B5B4B3B2B1B1B0AFAEAEADACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A09F9F9E9D9D9C9B9A9A9998989796969594949392929190908F8E8E8D8C8C8B8A8A898988878786858584848382828181807F7F7E7E7D7C7C7B7B7A7A7978787777767675757474737272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767676666656564646363626262616160605F5F5F5E5E5D5D5D5C5C5B5B5B5A5A59595958585857575656565555555454545353535252525151515050504F4F4F4F4E4E4E4D4D4D4D4C4C4C4B4B4B4B4A4A4A4A4949494948484848484747474746464646464545454545454444444444444343434343434242424242424242414141414141414141404040404040404040404040403F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F><FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E3E2E2E1E1E0E0DFDFDEDEDEDDDDDCDCDBDBDADADAD9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C8C7C7C6C6C6C5C5C5C4C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B7B7B7B7B6B6B6B5B5B5B4B4B4B4B3B3B3B3B2B2B2B1B1B1B1B0B0B0B0AFAFAFAEAEAEAEADADADADACACACACACABABABABAAAAAAAAA9A9A9A9A9A8A8A8A8A7A7A7A7A7A6A6A6A6A6A5A5A5A5A5A4A4A4A4A4A3A3A3A3A3A3A2A2A2A2A2A1A1A1A1A1A1A0A0A0A0A0A0A09F9F9F9F9F9F9F9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9A9A9A99999999999999999999999999999999999999989898989898989898989898989898989898989898989898>4 %_Br[0 0 0 0 1 1 1 2 30 63.1579 %_BS%_0 0 0 0 1 1 1 2 30 63.1579 Bs0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 2 50 100 %_BS%_0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Super Soft Black Vignette)(Super Soft Black Vignette) 1 3 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 56.0729 57.4443 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 56.0729 57.4443 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 79.7713 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 79.7713 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Laguna)(Laguna) 0 3.1914 84.1563 84.791 [%AI3_Tile(0 O 0 R 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 30.3906 m12.2227 12.8779 9.0488 12.4082 V7.2871 14.1709 0 30.3906 Y13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 Cf42.0781 57.5908 m12.2227 40.0781 9.0488 39.6094 V7.2871 41.3711 0 57.5908 Y13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 Cf42.0781 84.791 m12.2227 67.2773 9.0488 66.8096 V7.2871 68.5703 0 84.791 Y13.1641 74.918 29.1484 77.7402 42.0781 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR84.1563 30.3906 m54.3008 12.8779 51.127 12.4082 V49.3652 14.1709 42.0781 30.3906 Y55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 Cf84.1563 57.5908 m54.3008 40.0781 51.127 39.6094 V49.3652 41.3711 42.0781 57.5908 Y55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 Cf84.1563 84.791 m54.3008 67.2773 51.127 66.8096 V49.3652 68.5703 42.0781 84.791 Y55.2422 74.918 71.2266 77.7402 84.1563 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa 0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR21.0391 33.582 m19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c24.2285 32.1523 22.8008 33.582 21.0391 33.582 cf21.0391 6.3818 m19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c17.8477 1.4287 19.2773 0 21.0391 0 c22.8008 0 24.2285 1.4287 24.2285 3.1914 c24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 cf21.0391 60.7822 m19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 cf21.0391 87.9824 m19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 cf63.1172 33.582 m61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c66.3066 32.1523 64.8789 33.582 63.1172 33.582 cf63.1172 6.3818 m61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c59.9258 1.4287 61.3555 0 63.1172 0 c64.8789 0 66.3066 1.4287 66.3066 3.1914 c66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 cf63.1172 60.7822 m61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 cf63.1172 87.9824 m61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 cf%AI6_EndPatternLayer) &(0 O 0 R 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR0 3.1914 m29.8535 20.7041 33.0273 21.1738 V34.79 19.4111 42.0781 3.1914 Y28.9141 13.0645 12.9277 10.2422 0 3.1914 Cf0 30.3906 m29.8535 47.9033 33.0273 48.374 V34.79 46.6104 42.0781 30.3906 Y28.9141 40.2646 12.9277 37.4434 0 30.3906 Cf0 57.5908 m29.8535 75.1035 33.0273 75.5752 V34.79 73.8105 42.0781 57.5908 Y28.9141 67.4648 12.9277 64.6436 0 57.5908 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 3.1914 m71.9316 20.7041 75.1055 21.1738 V76.8691 19.4111 84.1563 3.1914 Y70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 Cf42.0781 30.3906 m71.9316 47.9033 75.1055 48.374 V76.8691 46.6104 84.1563 30.3906 Y70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 Cf42.0781 57.5908 m71.9316 75.1035 75.1055 75.5752 V76.8691 73.8105 84.1563 57.5908 Y70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7543 7327 m-7543 7268.0254 L-7527.4902 7268.0254 L-7527.4902 7327 L-7543 7327 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa10 M-7543 7278.0581 m-7543 7277.5742 L-7527.4878 7277.5742 L-7527.4878 7278.0581 L-7543 7278.0581 Lf-7543 7295.3838 m-7543 7294.8965 L-7527.4878 7294.8965 L-7527.4878 7295.3838 L-7543 7295.3838 Lf-7542.9995 7280.3677 m-7542.9995 7279.6494 L-7527.4878 7279.6494 L-7527.4878 7280.3677 L-7542.9995 7280.3677 Lf-7542.9995 7290.6328 m-7542.9995 7289.9116 L-7527.4878 7289.9116 L-7527.4878 7290.6328 L-7542.9995 7290.6328 Lf-7542.9995 7288.4951 m-7542.9995 7287.4141 L-7527.4878 7287.4141 L-7527.4878 7288.4951 L-7542.9995 7288.4951 Lf-7542.9995 7282.9395 m-7542.9995 7281.8589 L-7527.4878 7281.8589 L-7527.4878 7282.9395 L-7542.9995 7282.9395 Lf-7542.9995 7285.9854 m-7542.9995 7284.334 L-7527.4878 7284.334 L-7527.4878 7285.9854 L-7542.9995 7285.9854 Lf*u1 D-7527.4888 7294.1455 m-7542.9995 7294.1455 L-7542.9995 7293.6816 L-7542.6514 7293.6816 L-7542.6514 7292.4844 L-7542.9995 7292.4844 L-7542.9995 7292.0215 L-7527.4888 7292.0215 L-7527.4888 7292.4844 L-7527.8408 7292.4844 L-7527.8408 7293.6846 L-7527.4888 7293.6846 L-7527.4888 7294.1455 Lf0 D-7539.1255 7293.6846 m-7538.4199 7293.6846 L-7538.4199 7292.4844 L-7539.1255 7292.4844 L-7539.1255 7293.6846 Lf-7539.8306 7292.4844 m-7540.5361 7292.4844 L-7540.5361 7293.6846 L-7539.8306 7293.6846 L-7539.8306 7292.4844 Lf-7537.7144 7293.6846 m-7537.0098 7293.6846 L-7537.0098 7292.4844 L-7537.7144 7292.4844 L-7537.7144 7293.6846 Lf-7536.3042 7293.6846 m-7535.5986 7293.6846 L-7535.5986 7292.4844 L-7536.3042 7292.4844 L-7536.3042 7293.6846 Lf-7534.8936 7293.6846 m-7534.1885 7293.6846 L-7534.1885 7292.4844 L-7534.8936 7292.4844 L-7534.8936 7293.6846 Lf-7533.4834 7293.6846 m-7532.7778 7293.6846 L-7532.7778 7292.4844 L-7533.4834 7292.4844 L-7533.4834 7293.6846 Lf-7532.0718 7293.6846 m-7531.3672 7293.6846 L-7531.3672 7292.4844 L-7532.0718 7292.4844 L-7532.0718 7293.6846 Lf-7530.6616 7293.6846 m-7529.9575 7293.6846 L-7529.9575 7292.4844 L-7530.6616 7292.4844 L-7530.6616 7293.6846 Lf-7529.2515 7293.6846 m-7528.5454 7293.6846 L-7528.5454 7292.4844 L-7529.2515 7292.4844 L-7529.2515 7293.6846 Lf-7541.9463 7293.6846 m-7541.2407 7293.6846 L-7541.2407 7292.4844 L-7541.9463 7292.4844 L-7541.9463 7293.6846 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7543 7326.998 m-7543 7268.0225 L-7484.0254 7268.0225 L-7484.0254 7326.998 L-7543 7326.998 Ln*u1 D0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa10 M-7516.4902 7286.4453 m-7514.9678 7287.9678 -7515.5166 7290.9829 -7517.7153 7293.1836 c-7519.9146 7295.3809 -7522.9302 7295.9292 -7524.4526 7294.4077 c-7525.9751 7292.8853 -7525.4263 7289.8677 -7523.2271 7287.6709 c-7521.0288 7285.4717 -7518.0127 7284.9238 -7516.4902 7286.4453 cf0 D-7517.1519 7287.0781 m-7518.5728 7285.6582 -7521.2241 7286.0054 -7523.0728 7287.8545 c-7524.9214 7289.7031 -7525.2695 7292.3545 -7523.8486 7293.7749 c-7522.4282 7295.1948 -7519.7769 7294.8486 -7517.9282 7293 c-7516.0786 7291.1504 -7515.7314 7288.5 -7517.1519 7287.0781 cf*U-7534.5327 7277.2607 m-7533.7969 7277.1309 l-7533.71 7276.4385 l-7528.9458 7281.9814 l-7534.5327 7277.2607 lf-7523.9409 7274.3145 m-7524.1235 7272.7261 L-7523.7002 7272.4512 -7523.3184 7272.1309 -7522.9346 7271.8145 C-7522.6841 7274.9189 L-7522.3535 7274.9453 L-7522.4678 7271.4395 L-7522.0503 7271.1157 -7521.6089 7270.8213 -7521.0913 7270.6152 C-7521.1235 7275.7261 L-7520.9063 7275.7734 L-7520.5938 7270.4517 L-7520.2007 7270.3521 -7519.7632 7270.3008 -7519.2642 7270.3213 C-7520.0376 7279.4463 L-7518.7666 7270.3589 L-7518.3359 7270.4063 -7517.96 7270.4741 -7517.6289 7270.5625 C-7518.4551 7277.334 L-7518.2998 7277.2109 L-7517.1465 7270.7148 L-7516.7471 7270.8623 -7516.4238 7271.0444 -7516.1528 7271.25 C-7516.7334 7276.0757 L-7516.4688 7275.9414 L-7515.7114 7271.6421 L-7515.2256 7272.1494 -7514.9194 7272.7344 -7514.5127 7273.2822 C-7515.0713 7275.3496 L-7514.6001 7275.1709 L-7514.1338 7273.7383 L-7513.8096 7274.082 -7513.4063 7274.3945 -7512.8394 7274.6406 c-7512.8506 7274.6357 -7511.7393 7274.6821 -7511.7466 7274.6533 c-7511.7959 7274.4375 -7512.6655 7274.2998 -7512.6455 7274.3101 c-7515.2974 7272.8965 -7514.3232 7270.3301 -7518.8735 7269.8735 c-7522.4072 7269.5176 -7523.2515 7272.75 -7526.0962 7273.0615 c-7526.1152 7273.0625 -7526.7632 7273.3174 -7526.8442 7273.4502 C-7526.8486 7273.6255 -7526.4595 7273.5181 -7526.2417 7273.4766 c-7525.6001 7273.3477 -7525.0498 7273.2397 -7524.5728 7272.9912 C-7524.4023 7274.1909 L-7523.9409 7274.3145 Lf-7536.6626 7286.9463 m-7538.2495 7286.7637 L-7538.5254 7287.1865 -7538.8462 7287.5693 -7539.1626 7287.9517 C-7536.0576 7288.2031 L-7536.0322 7288.5352 L-7539.5376 7288.4189 L-7539.8608 7288.8364 -7540.1558 7289.2783 -7540.3618 7289.7959 C-7535.2505 7289.7637 L-7535.2031 7289.9814 L-7540.5249 7290.2935 L-7540.6265 7290.6865 -7540.6758 7291.1255 -7540.6558 7291.623 C-7531.5298 7290.8496 L-7540.6177 7292.1196 L-7540.5713 7292.5493 -7540.5024 7292.9277 -7540.4146 7293.2573 C-7533.6426 7292.4316 L-7533.7656 7292.5869 L-7540.2622 7293.7397 L-7540.1138 7294.1406 -7539.9312 7294.4629 -7539.7271 7294.7344 C-7534.9014 7294.1533 L-7535.0352 7294.4185 L-7539.3335 7295.1768 L-7538.8271 7295.6621 -7538.2417 7295.9688 -7537.6943 7296.375 C-7535.6274 7295.8145 L-7535.8066 7296.2871 L-7537.2383 7296.752 L-7536.8945 7297.0757 -7536.5825 7297.4814 -7536.3359 7298.0479 c-7536.3408 7298.0352 -7536.2935 7299.1484 -7536.3242 7299.1416 c-7536.54 7299.0908 -7536.6768 7298.2222 -7536.6675 7298.2412 c-7538.0806 7295.5894 -7540.6475 7296.5645 -7541.1045 7292.0127 c-7541.4595 7288.4805 -7538.2271 7287.6367 -7537.9165 7284.791 c-7537.9136 7284.7725 -7537.6602 7284.1255 -7537.5273 7284.043 C-7537.3535 7284.0381 -7537.4575 7284.4277 -7537.5015 7284.6455 c-7537.6294 7285.2871 -7537.7368 7285.8364 -7537.9858 7286.3145 C-7536.7842 7286.4854 L-7536.6626 7286.9463 Lf-7507.0127 7285.2285 m-7502.2495 7286.6353 -7500.9502 7288.9199 -7500.9746 7290.5654 C-7500.5366 7287.459 -7498.6558 7289.8652 -7498.1313 7291.0029 C-7499.0498 7287.4165 -7496.4463 7290.5439 -7496.2715 7290.8496 C-7497.2593 7287.4063 -7504.3955 7284.9404 -7507.0127 7285.2285 Cf-7512.9775 7284.2197 m-7516.3242 7278.1733 -7513.4233 7276.5703 -7512.7354 7276.3774 c-7512.9233 7276.4287 -7513.3135 7277.2949 -7513.2026 7277.6367 C-7512.9482 7277.0928 -7512.4111 7276.8188 -7511.8994 7276.6094 C-7513.1626 7277.6094 -7513.6943 7280.4111 -7512.9082 7283.9512 c-7512.9775 7284.2197 lf-7515.2222 7284.5254 m-7517.6035 7282.1016 -7519.0474 7281.2773 -7517.1035 7278.6685 c-7517.2202 7278.8262 -7517.3838 7279.7168 -7517.1758 7280.0117 C-7517.0942 7279.4185 -7516.6626 7278.998 -7516.2358 7278.6455 C-7517.9395 7282.0732 -7515.2222 7284.5254 yf-7507.6577 7283.4199 m-7507.9897 7281.5615 -7506.4922 7280.4688 -7504.8662 7279.8496 C-7505.4194 7279.8662 -7506.0176 7279.9302 -7506.4482 7280.3496 C-7506.4302 7279.9893 -7505.7598 7279.3184 -7505.5654 7279.3359 c-7506.2778 7279.2744 -7508.4951 7278.8447 -7507.8408 7283.6191 c-7507.6577 7283.4199 lf-7504.5576 7284.1133 m-7504.1538 7282.7261 -7501.9502 7282.459 V-7502.5342 7282.2871 -7503.2314 7282.3662 -7503.6626 7282.7856 C-7503.6455 7282.4253 -7502.8408 7281.7173 -7502.6479 7281.7568 c-7504.3921 7281.4141 -7504.6782 7283.9072 y-7504.5576 7284.1133 lf-7501.1152 7285.3213 m-7500.8408 7284.627 -7500.0942 7284.1196 -7499.2646 7284 C-7499.6475 7283.8975 -7500.0854 7283.9868 -7500.4297 7284.3237 C-7500.4175 7284.0352 -7499.7744 7283.4863 -7499.6182 7283.5024 c-7501.2729 7283.3496 -7501.1152 7285.3213 Yf-7510.5562 7283.4629 m-7510.6504 7280.1309 -7509.4175 7278.4541 -7507.9761 7277.6509 C-7508.5264 7277.7148 -7509.1162 7277.8271 -7509.5103 7278.2783 C-7509.5249 7277.9189 -7508.9087 7277.1948 -7508.7134 7277.1973 c-7509.4287 7277.1943 -7512.0034 7277.0894 -7510.7866 7283.7109 c-7510.5562 7283.4629 lf-7525.7944 7304.0127 m-7524.3882 7308.7749 -7522.1006 7310.0757 -7520.4575 7310.0518 C-7523.5635 7310.4893 -7521.1567 7312.3701 -7520.0195 7312.8945 C-7523.6074 7311.9766 -7520.4795 7314.5791 -7520.1729 7314.7549 C-7523.6162 7313.7676 -7526.0825 7306.6309 -7525.7944 7304.0127 Cf-7526.8022 7298.0488 m-7532.8481 7294.6997 -7534.4521 7297.6021 -7534.6465 7298.291 c-7534.5938 7298.1021 -7533.7295 7297.7119 -7533.3857 7297.8237 C-7533.9297 7298.0781 -7534.2017 7298.6152 -7534.4126 7299.127 C-7533.4126 7297.8623 -7530.6113 7297.334 -7527.0703 7298.1182 c-7526.8022 7298.0488 lf-7526.4966 7295.8037 m-7528.9214 7293.4229 -7529.7446 7291.9805 -7532.3535 7293.9229 c-7532.1968 7293.8062 -7531.3057 7293.6421 -7531.0112 7293.8496 C-7531.6064 7293.9302 -7532.0239 7294.3628 -7532.3774 7294.79 C-7528.9487 7293.0879 -7526.4966 7295.8037 yf-7527.6025 7303.3677 m-7529.4614 7303.0352 -7530.5537 7304.5342 -7531.1729 7306.1597 C-7531.1558 7305.6069 -7531.0918 7305.0093 -7530.6719 7304.5791 C-7531.0327 7304.5957 -7531.7041 7305.2656 -7531.6865 7305.4604 c-7531.7485 7304.75 -7532.1777 7302.5313 -7527.4038 7303.1846 c-7527.6025 7303.3677 lf-7526.9087 7306.4688 m-7528.2959 7306.8735 -7528.5649 7309.0757 V-7528.7354 7308.4917 -7528.6558 7307.7949 -7528.2368 7307.3628 C-7528.5967 7307.3809 -7529.3042 7308.1865 -7529.2666 7308.3789 c-7529.6079 7306.6353 -7527.1152 7306.3477 y-7526.9087 7306.4688 lf-7525.7007 7309.9111 m-7526.3955 7310.1846 -7526.9009 7310.9302 -7527.0234 7311.7612 C-7527.1265 7311.3789 -7527.0337 7310.9404 -7526.6982 7310.5967 C-7526.9873 7310.6104 -7527.5361 7311.2524 -7527.5215 7311.4077 c-7527.6729 7309.752 -7525.7007 7309.9111 Yf-7527.5591 7300.4688 m-7530.8921 7300.3774 -7532.5679 7301.6094 -7533.3696 7303.0508 C-7533.3081 7302.5024 -7533.1953 7301.9102 -7532.7422 7301.5142 C-7533.1035 7301.5029 -7533.8262 7302.1157 -7533.8257 7302.3135 c-7533.8286 7301.5967 -7533.9321 7299.0229 -7527.3115 7300.2397 c-7527.5591 7300.4688 lfuu-7537.0234 7276.7095 m-7537.2856 7276.1948 -7537.0479 7275.6685 -7535.2905 7275.6504 C-7536.0322 7274.9077 L-7537.9927 7274.9941 -7538.3423 7276.1772 -7538.1665 7276.7573 c-7537.9736 7277.3901 -7537.5488 7277.9023 -7537.2085 7278.25 C-7538.2031 7278.6108 -7538.2505 7279.3916 -7538.0479 7279.79 c-7537.7729 7280.334 -7537.2998 7280.752 -7536.9487 7281.0176 C-7537.9448 7281.3774 -7537.8623 7282.1133 -7537.6074 7282.4575 c-7537.2856 7282.8901 -7536.8174 7283.2031 -7536.4751 7283.4023 C-7537.4585 7283.8301 -7537.3022 7284.5229 -7537.0239 7284.8149 c-7536.6929 7285.166 -7536.2466 7285.3916 -7535.9199 7285.5317 C-7536.7695 7286.0225 -7536.5537 7286.6318 -7536.2715 7286.8623 c-7535.9458 7287.1318 -7535.5342 7287.2837 -7535.23 7287.3774 C-7535.9395 7287.9077 -7535.6802 7288.4287 -7535.4014 7288.6069 c-7535.0698 7288.8174 -7534.6714 7288.9077 -7534.3857 7288.9541 C-7534.9673 7289.5093 -7534.6768 7289.9478 -7534.4097 7290.0757 c-7533.9326 7290.3037 -7533.3511 7290.2769 -7533.1768 7290.2813 c-7532.6343 7290.2959 -7531.8838 7290.1255 -7531.4272 7290.0703 c-7530.3442 7289.9429 -7526.5718 7289.2749 -7524.9023 7289.4385 C-7525.1704 7289.2285 -7525.1714 7289.2285 v-7527.1304 7289.0415 -7530.0479 7289.4678 -7531.1294 7289.5957 c-7531.9839 7289.6943 -7533.1182 7289.9951 -7533.9951 7289.7295 c-7534.2593 7289.6494 -7534.3696 7289.4453 -7533.8906 7289.0215 C-7533.3135 7289.0732 -7532.5737 7289.0024 -7532.1118 7289.0039 c-7530.9009 7289.0093 -7526.6504 7288.7832 -7524.8311 7289.1895 C-7525.0986 7288.9199 l-7527.2344 7288.4492 -7530.5098 7288.5254 -7531.7202 7288.5181 c-7532.6758 7288.5132 -7533.9673 7288.6909 -7534.8984 7288.2783 c-7535.1777 7288.1558 -7535.2729 7287.9185 -7534.6953 7287.5166 C-7534.0615 7287.6597 -7533.2153 7287.6816 -7532.6968 7287.7471 c-7531.3623 7287.9185 -7526.6431 7288.2437 -7524.6929 7288.9375 C-7524.9502 7288.6064 -7524.9512 7288.6064 v-7527.2422 7287.7964 -7530.8647 7287.4375 -7532.1992 7287.2656 c-7533.2529 7287.1309 -7534.7007 7287.1504 -7535.6719 7286.5703 c-7535.9624 7286.3975 -7536.0352 7286.123 -7535.3481 7285.7573 C-7534.6704 7285.998 -7533.7578 7286.1328 -7533.2026 7286.2749 c-7531.7534 7286.6445 -7526.5938 7287.6421 -7524.5361 7288.6685 C-7524.7754 7288.2695 -7524.7759 7288.2695 v-7527.1934 7287.0664 -7531.1392 7286.1797 -7532.5879 7285.8101 c-7533.7314 7285.5181 -7535.3311 7285.3452 -7536.3242 7284.5718 c-7536.6182 7284.3452 -7536.6626 7284.0352 -7535.8745 7283.73 C-7535.1606 7284.082 -7534.1802 7284.3535 -7533.5889 7284.5845 c-7532.0415 7285.1865 -7526.4863 7286.9863 -7524.3564 7288.3984 C-7524.5654 7287.9253 -7524.5674 7287.9248 v-7527.0698 7286.2695 -7531.3018 7284.7573 -7532.8486 7284.1543 c-7534.0703 7283.6768 -7535.8115 7283.2695 -7536.8018 7282.2837 c-7537.0786 7282.0093 -7537.1006 7281.6846 -7536.3384 7281.4551 C-7535.5942 7281.9404 -7534.5234 7282.3584 -7533.8926 7282.6895 c-7532.2446 7283.5518 -7526.2441 7286.2246 -7524.1055 7288.0957 C-7524.2407 7287.5181 -7524.2417 7287.5181 v-7526.7559 7285.3276 -7531.2954 7283.127 -7532.9438 7282.2607 c-7534.2456 7281.5791 -7536.1602 7280.9248 -7537.0815 7279.6709 c-7537.3135 7279.3555 -7537.2974 7279.0127 -7536.6118 7278.8101 C-7535.8594 7279.4668 -7534.6641 7280.0757 -7533.9888 7280.5317 c-7532.27 7281.6943 -7525.9126 7285.3774 -7523.8442 7287.7637 C-7524.1377 7286.9902 -7524.1382 7286.9893 v-7526.5718 7284.1934 -7531.0825 7281.2837 -7532.8018 7280.1221 c-7534.1582 7279.2031 -7536.2295 7278.2607 -7537.0234 7276.7095 cfUu-7534.2329 7273.9185 m-7534.7446 7273.6543 -7535.2715 7273.8926 -7535.2905 7275.6504 C-7536.0313 7274.9077 L-7535.9473 7272.9468 -7534.7622 7272.5977 -7534.1826 7272.7749 c-7533.5503 7272.9653 -7533.0386 7273.3916 -7532.6919 7273.7324 C-7532.3306 7272.7373 -7531.5498 7272.6904 -7531.1504 7272.8901 c-7530.6064 7273.1685 -7530.1895 7273.6406 -7529.9224 7273.9917 C-7529.5649 7272.9951 -7528.8281 7273.0781 -7528.4834 7273.334 c-7528.0498 7273.6543 -7527.7368 7274.123 -7527.5376 7274.4648 C-7527.1113 7273.4824 -7526.4175 7273.6382 -7526.1255 7273.9185 c-7525.7759 7274.2485 -7525.5488 7274.6943 -7525.4082 7275.0215 C-7524.9185 7274.1719 -7524.3086 7274.3877 -7524.0767 7274.6685 c-7523.8086 7274.9951 -7523.6553 7275.4053 -7523.5649 7275.7109 C-7523.0327 7275.0024 -7522.5103 7275.2607 -7522.3345 7275.5391 c-7522.1235 7275.8701 -7522.0322 7276.2695 -7521.9858 7276.5532 C-7521.4312 7275.9727 -7520.9912 7276.2637 -7520.8638 7276.5313 c-7520.6367 7277.0078 -7520.6655 7277.5894 -7520.6592 7277.7637 c-7520.6431 7278.3062 -7520.8159 7279.0566 -7520.8696 7279.5132 c-7520.9966 7280.5957 -7521.6655 7284.3677 -7521.5034 7286.0381 C-7521.7129 7285.7695 l-7521.8999 7283.8101 -7521.4727 7280.8926 -7521.3457 7279.8101 c-7521.2446 7278.9575 -7520.9458 7277.8223 -7521.2114 7276.9453 c-7521.2915 7276.6816 -7521.4946 7276.5703 -7521.9199 7277.0508 C-7521.8682 7277.6279 -7521.9395 7278.3662 -7521.9375 7278.8271 c-7521.9302 7280.04 -7522.1567 7284.29 -7521.7524 7286.1094 C-7522.0195 7285.8428 -7522.0195 7285.8413 v-7522.4922 7283.7061 -7522.4155 7280.4316 -7522.4214 7279.2207 c-7522.4272 7278.2646 -7522.25 7276.9736 -7522.6616 7276.043 c-7522.7847 7275.7637 -7523.0234 7275.6685 -7523.4238 7276.2461 C-7523.2798 7276.8789 -7523.2593 7277.7246 -7523.1929 7278.2437 c-7523.0225 7279.5781 -7522.6958 7284.2959 -7522.0034 7286.2485 C-7522.3345 7285.9902 -7522.3354 7285.9893 v-7523.1455 7283.6982 -7523.5039 7280.0757 -7523.6753 7278.7397 c-7523.8096 7277.6885 -7523.79 7276.2397 -7524.3706 7275.2695 c-7524.5435 7274.9785 -7524.8174 7274.9053 -7525.1816 7275.5933 C-7524.9434 7276.2695 -7524.8081 7277.1836 -7524.6665 7277.7383 c-7524.2969 7279.1865 -7523.2993 7284.3477 -7522.27 7286.4053 C-7522.6704 7286.166 -7522.6714 7286.166 v-7523.8745 7283.7471 -7524.7607 7279.8008 -7525.1294 7278.3535 c-7525.4214 7277.2095 -7525.5962 7275.6094 -7526.3662 7274.6172 c-7526.5962 7274.3232 -7526.9058 7274.2783 -7527.2114 7275.0664 C-7526.8594 7275.7788 -7526.5874 7276.7612 -7526.3574 7277.3521 c-7525.7534 7278.8984 -7523.9546 7284.4541 -7522.5415 7286.5854 C-7523.0161 7286.375 l-7524.6704 7283.8711 -7526.1826 7279.6382 -7526.7866 7278.0918 c-7527.2622 7276.8701 -7527.6714 7275.1279 -7528.6558 7274.1382 c-7528.9312 7273.8623 -7529.2559 7273.8398 -7529.4858 7274.6016 C-7529.0015 7275.3452 -7528.5825 7276.4185 -7528.2529 7277.0469 c-7527.3887 7278.6943 -7524.7158 7284.6973 -7522.8447 7286.8359 C-7523.4209 7286.6992 -7523.4214 7286.6992 v-7525.6128 7284.1846 -7527.8145 7279.6455 -7528.6782 7277.9951 c-7529.3599 7276.6943 -7530.0161 7274.7788 -7531.2695 7273.8589 c-7531.5854 7273.627 -7531.9272 7273.6421 -7532.1313 7274.3276 C-7531.4736 7275.082 -7530.8638 7276.2769 -7530.4072 7276.9512 c-7529.2441 7278.6709 -7525.5635 7285.0269 -7523.1768 7287.0967 C-7523.9502 7286.8037 -7523.9512 7286.8013 v-7526.7471 7284.3677 -7529.6558 7279.8584 -7530.8184 7278.1382 c-7531.7368 7276.7822 -7532.6802 7274.7119 -7534.2329 7273.9185 cfUU*u1 D-7484.0264 7278.0566 m-7490.5264 7278.0566 L-7490.1826 7278.4189 -7489.7622 7278.7573 -7489.1777 7279.0332 c-7489.1978 7279.0229 -7488.3994 7279.1558 -7488.2622 7279.3325 c-7488.0967 7279.5415 -7489.7886 7279.582 -7490.6929 7278.5342 C-7491.3486 7281.7095 L-7491.8135 7282.0269 L-7491.0918 7278.0977 L-7491.5249 7277.5703 -7491.8594 7277.0024 -7492.3687 7276.5181 C-7493.0337 7282.6284 L-7493.29 7282.7749 L-7492.8286 7276.1475 L-7493.1104 7275.9575 -7493.4424 7275.791 -7493.8486 7275.6621 C-7494.7119 7283.0225 L-7494.9482 7283.0078 L-7494.3369 7275.5317 L-7494.6729 7275.4604 -7495.0518 7275.4111 -7495.4834 7275.3853 C-7496.0303 7282.9541 L-7496.1992 7282.9517 L-7495.9814 7275.3711 L-7496.4814 7275.3774 -7496.9175 7275.4463 -7497.3042 7275.5669 C-7497.4155 7282.7061 L-7497.6338 7282.6685 L-7497.7935 7275.7549 L-7498.2998 7275.9863 -7498.7266 7276.3013 -7499.1279 7276.6455 C-7499.0454 7282.2412 L-7499.3774 7282.0269 L-7499.5752 7277.043 L-7499.9434 7277.3774 -7500.3096 7277.7168 -7500.7178 7278.0127 C-7500.7217 7281.3389 L-7501.1455 7281.0645 L-7501.1553 7278.2988 L-7501.6191 7278.5693 -7502.5854 7279.0093 -7503.4014 7278.8672 C-7502.1714 7278.543 -7501.7925 7278.3301 -7501.5034 7278.0566 C-7504.7295 7278.0566 L-7500.8955 7282.4512 -7494.3394 7286.6865 -7489.3018 7280.0225 C-7489.1807 7279.8838 -7488.8174 7279.5625 -7488.1255 7279.6475 C-7484.0264 7279.6475 L-7484.0264 7280.3672 L-7487.4834 7280.3672 L-7487.1318 7280.6768 -7486.8223 7281.4863 -7487.0386 7281.8574 C-7484.0264 7281.8574 L-7484.0264 7282.9385 L-7487.1689 7282.9385 L-7487.2935 7283.4492 -7487.5439 7283.8853 -7487.8218 7284.3311 C-7484.0264 7284.3311 L-7484.0264 7285.9868 L-7488.7354 7285.9868 L-7488.9424 7286.4453 -7489.1016 7286.9077 -7489.1768 7287.4111 C-7484.0264 7287.4111 L-7484.0264 7288.4917 L-7489.1714 7288.4917 L-7489.1074 7288.9829 -7488.9614 7289.4668 -7488.7378 7289.9111 C-7484.0264 7289.9111 L-7484.0264 7290.6309 L-7488.2744 7290.6309 L-7487.9375 7291.0039 -7486.8535 7291.5933 -7486.9375 7292.0225 C-7484.0239 7292.0225 L-7484.0239 7292.4824 L-7484.3721 7292.4824 L-7484.3721 7293.6821 L-7484.0239 7293.6821 L-7484.0239 7294.1421 L-7491.9736 7294.1421 L-7492.4082 7294.4375 -7493.2192 7294.4517 -7493.9897 7294.1421 C-7497.8564 7294.1421 L-7498.1162 7294.4604 -7499.1807 7294.5693 -7499.6846 7294.1421 C-7500.8232 7294.1421 L-7501.0439 7294.3989 -7501.3174 7294.6382 -7501.6782 7294.8975 C-7484.0264 7294.8975 L-7484.0264 7295.3809 L-7502.8394 7295.3809 L-7503.1982 7295.5615 -7504.2417 7295.8389 -7505.3774 7295.3809 C-7515.6406 7295.3809 L-7515.6406 7305.6494 L-7515.1826 7306.7861 -7515.4614 7307.8271 -7515.6455 7308.1895 C-7515.6455 7327 L-7516.1279 7327 L-7516.1279 7309.3477 L-7516.3838 7309.7095 -7516.6235 7309.9824 -7516.8794 7310.2031 C-7516.8794 7311.3413 L-7516.4536 7311.8447 -7516.5615 7312.9077 -7516.8794 7313.1685 C-7516.8794 7317.0352 L-7516.5698 7317.8076 -7516.5854 7318.6182 -7516.8833 7319.0518 C-7516.8833 7326.998 L-7517.3394 7326.998 L-7517.3394 7326.6543 L-7518.5435 7326.6543 L-7518.5435 7326.998 L-7519.0039 7326.998 L-7519.0039 7324.0879 L-7519.4287 7324.1733 -7520.0186 7323.0894 -7520.3955 7322.752 C-7520.3955 7326.9951 L-7521.1113 7326.9951 L-7521.1113 7322.2886 L-7521.5552 7322.0654 -7522.0376 7321.9189 -7522.5298 7321.8555 C-7522.5298 7326.9951 L-7523.6138 7326.9951 L-7523.6138 7321.8496 L-7524.1143 7321.9248 -7524.5767 7322.0854 -7525.0391 7322.29 C-7525.0391 7326.9951 L-7526.6958 7326.9951 L-7526.6958 7323.2031 L-7527.1362 7323.4824 -7527.5728 7323.7324 -7528.0854 7323.8555 C-7528.0854 7326.9951 L-7529.1689 7326.9951 L-7529.1689 7323.9893 L-7529.5552 7324.1279 -7530.3486 7323.8945 -7530.6543 7323.543 C-7530.6543 7326.9951 L-7531.3794 7326.9951 L-7531.3794 7322.9014 L-7531.4634 7322.2095 -7531.1382 7321.8447 -7531.0015 7321.7222 C-7524.3359 7316.6885 -7528.5713 7310.1309 -7532.9658 7306.2959 C-7532.9658 7309.5244 L-7532.6919 7309.2344 -7532.48 7308.8555 -7532.1558 7307.6255 C-7532.0127 7308.4414 -7532.4526 7309.4077 -7532.7246 7309.8711 C-7529.9575 7309.8828 L-7529.6831 7310.3047 L-7533.0103 7310.3062 L-7533.3066 7310.7168 -7533.6455 7311.0845 -7533.98 7311.4512 C-7528.9951 7311.6475 L-7528.7817 7311.9814 L-7534.3774 7311.8984 L-7534.7202 7312.2998 -7535.0361 7312.7261 -7535.2681 7313.2314 C-7528.3535 7313.3926 L-7528.3169 7313.6108 L-7535.4546 7313.7222 L-7535.5742 7314.1094 -7535.6465 7314.5439 -7535.6514 7315.0444 C-7528.0688 7314.8262 L-7528.0688 7314.9951 L-7535.6362 7315.543 L-7535.6113 7315.9741 -7535.5615 7316.3545 -7535.4888 7316.6895 C-7528.0142 7316.0781 L-7527.9995 7316.3145 L-7535.3599 7317.1772 L-7535.2314 7317.5854 -7535.0654 7317.9165 -7534.8755 7318.1973 C-7528.2485 7317.7349 L-7528.3945 7317.9937 L-7534.5034 7318.6572 L-7534.0215 7319.1685 -7533.4521 7319.5024 -7532.9238 7319.9336 C-7528.9946 7319.2134 L-7529.3135 7319.6768 L-7532.4878 7320.334 L-7531.4409 7321.2373 -7531.4814 7322.9292 -7531.6914 7322.7637 c-7531.8657 7322.627 -7531.9985 7321.8271 -7531.9897 7321.8486 c-7532.2656 7321.2637 -7532.6035 7320.8438 -7532.9697 7320.5024 C-7532.9697 7327 L-7533.4536 7327 L-7533.4536 7320.0854 L-7534.6582 7319.1372 -7535.9551 7318.5669 -7536.1167 7315.4111 c-7536.25 7312.8311 -7534.5562 7311.7656 -7533.4497 7310.2871 C-7533.4497 7305.7437 L-7534.5767 7304.4185 -7535.5225 7302.9912 -7535.9614 7301.1455 C-7536.8809 7296.3662 -7533.7568 7290.8545 -7528.7959 7290.4863 C-7528.7183 7290.6133 L-7533.1494 7291.5352 -7535.8442 7296.6636 -7534.9814 7301.1455 C-7534.0635 7305.0029 -7530.9395 7307.0229 -7528.5503 7310.1475 C-7526.8975 7312.5356 -7526.3457 7315.1094 -7527.0806 7317.8652 c-7527.8545 7320.6133 -7530.25 7321.5977 -7530.5649 7322.5303 c-7530.8506 7323.375 -7529.6689 7323.6997 -7528.6968 7323.6353 C-7526.5454 7323.4395 -7525.1602 7320.4917 -7521.3184 7321.7559 c-7520.2222 7322.1157 -7519.5913 7322.9375 -7519.3042 7323.5469 c-7519.1104 7323.9575 -7517.7241 7323.4395 -7518.9165 7321.2207 C-7521.8774 7321.0879 -7521.4521 7319.0645 -7521.2026 7319.2109 c-7519.5015 7320.2095 -7518.1826 7318.3047 -7519.1055 7317.2959 c-7521.2129 7314.9902 -7522.8481 7315.2861 -7524.9248 7311.3174 c-7527.2095 7306.9517 -7528.2695 7301.0718 -7525.7959 7296.9077 C-7525.7954 7296.1382 L-7526.0479 7295.5439 -7526.0249 7295.0854 -7526.2134 7294.1685 c-7526.3818 7293.3535 -7526.6689 7293.0854 -7526.9575 7292.9116 C-7527.1304 7292.7964 -7527.5015 7292.9053 -7527.5054 7293.1445 c-7527.52 7293.7461 -7526.7842 7293.5225 -7526.8271 7293.5845 c-7527.1895 7294.0869 -7527.7329 7293.7295 -7527.8345 7293.3774 c-7527.9648 7292.9287 -7527.6606 7292.5757 -7527.3145 7292.4902 C-7526.6655 7292.3589 -7526.1968 7292.9277 -7525.9575 7293.4575 c-7525.4365 7294.6069 -7525.4746 7296.2524 -7524.2607 7296.8574 c-7523.4385 7297.2471 -7522.5537 7296.9277 -7521.7271 7296.6328 c-7518.8296 7295.6016 -7515.3096 7292.082 -7514.2783 7289.1836 c-7513.9834 7288.3574 -7513.6641 7287.4727 -7514.0537 7286.6494 c-7514.6606 7285.4375 -7516.3042 7285.4741 -7517.4546 7284.9541 c-7517.9834 7284.7148 -7518.5513 7284.2461 -7518.4214 7283.5967 C-7518.3345 7283.25 -7517.9824 7282.9468 -7517.5327 7283.0757 c-7517.1826 7283.1797 -7516.8242 7283.7222 -7517.3281 7284.0845 c-7517.3882 7284.127 -7517.1655 7283.3901 -7517.7681 7283.4053 c-7518.0054 7283.4111 -7518.1143 7283.7813 -7517.9995 7283.9541 C-7517.8257 7284.2422 -7517.5591 7284.5293 -7516.7422 7284.6973 c-7515.7085 7284.9102 -7515.2578 7284.8535 -7514.5386 7285.2261 C-7514.1167 7285.2261 L-7509.9546 7282.752 -7504.0674 7283.8008 -7499.7095 7286.0977 c-7499.0527 7286.4551 -7498.4834 7286.8008 -7497.9126 7287.1475 c-7496.5488 7287.9766 -7494.5542 7290.8853 Y-7494.1782 7291.3325 -7493.9521 7291.7974 -7493.5225 7292.0625 c-7492.3569 7292.7783 -7490.8184 7291.5215 -7491.8154 7289.8188 c-7491.9614 7289.5703 -7489.9385 7289.1455 -7489.8057 7292.1064 C-7487.5874 7293.2988 -7487.0698 7291.9116 -7487.4795 7291.7173 c-7488.0889 7291.4316 -7488.9087 7290.7998 -7489.2705 7289.7036 c-7490.5342 7285.8623 -7487.3599 7284.0229 -7487.4463 7282.3262 C-7487.3008 7281.5317 -7487.6514 7280.1719 -7488.4961 7280.459 c-7489.4282 7280.7725 -7490.4126 7283.1685 -7493.1606 7283.9414 c-7495.9175 7284.6768 -7498.4897 7284.1255 -7500.8774 7282.4717 C-7504.0034 7280.0845 -7506.0234 7276.959 -7509.8818 7276.0415 C-7514.3623 7275.1772 -7519.4902 7277.8735 -7520.4126 7282.3037 C-7520.5391 7282.2261 L-7520.1729 7277.2656 -7514.6592 7274.1421 -7509.8818 7275.0615 C-7508.0361 7275.5024 -7506.6104 7276.4453 -7505.2822 7277.5718 C-7500.7393 7277.5718 L-7499.2607 7276.4668 -7498.1943 7274.7725 -7495.6143 7274.9053 c-7492.4585 7275.0664 -7491.8882 7276.3628 -7490.9409 7277.5718 C-7484.0264 7277.5718 L-7484.0264 7278.0566 Lf0 D-7513.1362 7287.4111 m-7505.5166 7287.4111 L-7506.5635 7286.8301 -7507.5435 7286.3184 -7508.8057 7285.9868 C-7513.6079 7285.9868 L-7513.2998 7286.3809 -7513.1055 7286.8701 -7513.1362 7287.4111 Cf-7514.0591 7289.9111 m-7502.5254 7289.9111 L-7502.6338 7289.6191 -7503.0063 7288.9404 -7503.8042 7288.4917 C-7513.4321 7288.4917 L-7513.6118 7288.9727 -7513.8232 7289.4463 -7514.0591 7289.9111 Cf-7502.8096 7292.0225 m-7502.3174 7291.4395 -7502.2568 7291.2207 -7502.3857 7290.6309 C-7514.4521 7290.6309 L-7514.7295 7291.1069 -7515.0322 7291.5718 -7515.3599 7292.0225 C-7507.2568 7292.0225 L-7506.9111 7291.2031 -7506.1665 7291.3711 -7505.8218 7292.0225 C-7502.8096 7292.0225 Lf-7504.1201 7292.4824 m-7504.1201 7292.8237 L-7503.5664 7292.7861 -7503.4995 7292.752 -7503.1982 7292.4824 C-7504.1201 7292.4824 Lf-7505.4863 7292.4824 m-7505.3311 7292.6719 -7505.0264 7292.8149 -7504.8257 7292.8447 C-7504.8257 7292.4824 L-7505.4863 7292.4824 Lf-7508.3535 7292.4824 m-7508.3535 7293.6821 L-7507.6465 7293.6821 L-7507.6465 7292.4824 L-7508.3535 7292.4824 Lf-7509.7622 7292.4824 m-7509.7622 7293.6821 L-7509.0576 7293.6821 L-7509.0576 7292.4824 L-7509.7622 7292.4824 Lf-7511.1729 7292.4824 m-7511.1729 7293.6821 L-7510.4678 7293.6821 L-7510.4678 7292.4824 L-7511.1729 7292.4824 Lf-7512.5835 7292.4824 m-7512.5835 7293.6821 L-7511.8774 7293.6821 L-7511.8774 7292.4824 L-7512.5835 7292.4824 Lf-7513.9946 7292.4824 m-7513.9946 7293.6821 L-7513.2886 7293.6821 L-7513.2886 7292.4824 L-7513.9946 7292.4824 Lf-7519 7303.7695 m-7519 7295.6504 L-7519.4497 7295.9756 -7519.9146 7296.2749 -7520.3911 7296.5439 C-7520.3911 7308.6406 L-7519.8018 7308.7695 -7519.5825 7308.7095 -7519 7308.2158 C-7519 7305.2031 L-7519.6514 7304.8613 -7519.8169 7304.1152 -7519 7303.7695 Cf-7518.5391 7303.3799 m-7517.3394 7303.3799 L-7517.3394 7302.6748 L-7518.5391 7302.6748 L-7518.5391 7303.3799 Lf-7517.3394 7301.9688 m-7517.3394 7301.2637 L-7518.5391 7301.2637 L-7518.5391 7301.9688 L-7517.3394 7301.9688 Lf-7517.3394 7300.5581 m-7517.3394 7299.8535 L-7518.5391 7299.8535 L-7518.5391 7300.5581 L-7517.3394 7300.5581 Lf-7517.3394 7299.1484 m-7517.3394 7298.4429 L-7518.5391 7298.4429 L-7518.5391 7299.1484 L-7517.3394 7299.1484 Lf-7517.3394 7297.7373 m-7517.3394 7297.0313 L-7518.5391 7297.0313 L-7518.5391 7297.7373 L-7517.3394 7297.7373 Lf-7517.3394 7296.3262 m-7517.3394 7295.6191 L-7518.5391 7295.6191 L-7518.5391 7296.3262 L-7517.3394 7296.3262 Lf-7517.3394 7294.9185 m-7517.3394 7294.2725 L-7517.5728 7294.4941 -7517.8135 7294.7095 -7518.0591 7294.9185 C-7517.3394 7294.9185 Lf-7515.4058 7293.6821 m-7514.6992 7293.6821 L-7514.6992 7292.4824 L-7515.4058 7292.4824 L-7515.4058 7293.6821 Lf-7516.7495 7293.6821 m-7516.1094 7293.6821 L-7516.1094 7292.9741 L-7516.3159 7293.2158 -7516.5288 7293.4517 -7516.7495 7293.6821 Cf-7522.5298 7297.5269 m-7522.5298 7307.2222 L-7522.0815 7308.0181 -7521.4014 7308.3926 -7521.1113 7308.5024 C-7521.1113 7296.9253 L-7521.5762 7297.1558 -7522.0488 7297.3564 -7522.5298 7297.5269 Cf-7525.0352 7297.2095 m-7525.0352 7302.2207 L-7524.7041 7303.4844 -7524.1929 7304.4629 -7523.6094 7305.5093 C-7523.6094 7297.7725 L-7524.1606 7297.77 -7524.6494 7297.5439 -7525.0352 7297.2095 Cf-7517.3394 7325.2437 m-7518.5391 7325.2437 L-7518.5391 7325.9478 L-7517.3394 7325.9478 L-7517.3394 7325.2437 Lf-7517.3394 7323.834 m-7518.3896 7323.834 L-7518.4375 7323.8838 -7518.4878 7323.9292 -7518.5391 7323.9678 C-7518.5391 7324.5381 L-7517.3394 7324.5381 L-7517.3394 7323.834 Lf-7517.3394 7322.4204 m-7518.0039 7322.4204 L-7517.9702 7322.6475 -7517.9595 7322.9116 -7518.0137 7323.1279 C-7517.3394 7323.1279 L-7517.3394 7322.4204 Lf-7517.3394 7321.0117 m-7518.5015 7321.0117 L-7518.3872 7321.2461 -7518.2798 7321.4814 -7518.1919 7321.7168 C-7517.3394 7321.7168 L-7517.3394 7321.0117 Lf-7517.3394 7319.9023 m-7517.4614 7320.0625 -7517.5938 7320.2197 -7517.6753 7320.3062 C-7517.3394 7320.3062 L-7517.3394 7319.9023 Lf-7517.4399 7304.4395 m-7517.6968 7304.2886 -7519.0845 7303.8135 -7519.0737 7304.5381 c-7519.0674 7304.9502 -7518.4512 7305.2412 -7518.2495 7305.4463 c-7517.6338 7306.0703 -7517.1885 7307.5254 -7518.2974 7308.4238 c-7520.6328 7310.3145 -7522.1865 7308.5879 Y-7526.1118 7304.7324 -7526.1104 7299.1104 Y-7527.2295 7303.334 -7525.9663 7308.3936 -7524.4048 7311.1421 c-7521.8818 7315.5845 -7520.9575 7314.0566 -7518.6113 7316.9478 c-7517.8047 7317.9429 -7518.1294 7320.3813 -7520.9546 7319.75 c-7521.2026 7319.6934 -7520.7759 7320.2949 -7520.2681 7320.5493 c-7518.1104 7321.6406 -7516.8618 7319.1631 -7517.1338 7317.8589 c-7517.4761 7316.2109 -7518.0986 7315.3662 -7520.1616 7314.2246 C-7519.8311 7314.2373 -7518.2134 7314.5415 -7517.2295 7313.0088 c-7517.0195 7312.6821 -7516.8745 7311.7573 -7517.3042 7311.8774 c-7517.3906 7311.9023 -7517.6416 7312.1973 -7517.9414 7312.3613 c-7519.9321 7313.3945 -7520.7075 7311.0127 Y-7518.4165 7310.8413 -7517.7515 7310.7637 -7516.2559 7308.7637 c-7516.0542 7308.4941 -7515.1162 7305.8047 -7517.4399 7304.4395 cf-7518.5391 7311.1367 m-7518.5391 7312.0225 L-7518.2993 7311.998 -7517.9302 7311.9575 -7517.3394 7311.4028 C-7517.3394 7311.1367 L-7518.5391 7311.1367 Lf-7519.9946 7311.23 m-7519.8042 7311.7031 -7519.4185 7311.9468 -7519 7312.0127 C-7519 7311.1709 L-7519.3857 7311.2349 -7519.9946 7311.23 Yf-7517.3394 7314.666 m-7517.3394 7313.959 L-7517.6382 7313.959 L-7517.9136 7314.1475 -7518.2246 7314.2935 -7518.5391 7314.3813 C-7518.5391 7314.666 L-7517.3394 7314.666 Lf-7517.9897 7315.3677 m-7517.7935 7315.5342 -7517.5576 7315.7813 -7517.3394 7316.1084 C-7517.3394 7315.3677 L-7517.9897 7315.3677 Lf-7519.2495 7314.4741 m-7519.1914 7314.5269 -7519.1025 7314.5967 -7519 7314.6719 C-7519 7314.4668 L-7519.0835 7314.4741 -7519.1675 7314.4785 -7519.2495 7314.4741 Cf-7518.5391 7306.9063 m-7518.5391 7307.8262 L-7518.2715 7307.5269 -7518.2358 7307.46 -7518.1982 7306.9063 C-7518.5391 7306.9063 Lf-7518.1758 7306.2012 m-7518.2065 7306.0024 -7518.3506 7305.6943 -7518.5391 7305.54 C-7518.5391 7306.2012 L-7518.1758 7306.2012 Lf-7506.1865 7294.8975 m-7506.4233 7294.6943 -7506.6401 7294.4463 -7506.8271 7294.1421 C-7516.8794 7294.1421 L-7516.8794 7304.1992 L-7516.5762 7304.3853 -7516.3271 7304.6021 -7516.1255 7304.8408 C-7516.1265 7294.8975 L-7506.1865 7294.8975 Lf-7499.6226 7293.6821 m-7499.0698 7293.0928 -7499.0298 7292.7222 -7499.0034 7292.4824 C-7499.8887 7292.4824 L-7499.8887 7293.6821 L-7499.6226 7293.6821 Lf-7499.8564 7292.0225 m-7499.0127 7292.0225 L-7499.0791 7291.6045 -7499.3232 7291.2192 -7499.7959 7291.0269 C-7499.7915 7291.6367 -7499.8564 7292.0225 Vf-7496.3623 7292.4824 m-7496.6455 7292.4824 L-7496.7334 7292.7974 -7496.8799 7293.1084 -7497.0674 7293.3838 C-7497.0674 7293.6821 L-7496.3623 7293.6821 L-7496.3623 7292.4824 Lf-7496.3545 7292.0225 m-7496.4302 7291.9199 -7496.4995 7291.8311 -7496.5518 7291.7734 C-7496.5479 7291.8555 -7496.5518 7291.9395 -7496.5601 7292.0225 C-7496.3545 7292.0225 Lf-7494.9185 7293.6821 m-7495.2446 7293.4648 -7495.4912 7293.23 -7495.6577 7293.0332 C-7495.6577 7293.6821 L-7494.9185 7293.6821 Lf-7490.7202 7293.3477 m-7490.8066 7293.4287 -7490.9639 7293.5615 -7491.1226 7293.6821 C-7490.7202 7293.6821 L-7490.7202 7293.3477 Lf-7490.4751 7290.7549 m-7490.7329 7290.2461 -7491.0913 7289.8945 -7491.2778 7290.0688 c-7491.4248 7290.2031 -7490.4424 7291.9429 -7491.9009 7292.7725 c-7492.7158 7293.2349 -7493.8721 7292.8735 -7494.2842 7292.3062 c-7496.5615 7289.1836 -7496.4746 7288.5581 -7499.8848 7286.6172 c-7502.6318 7285.0527 -7507.6943 7283.7935 -7511.9155 7284.9116 C-7506.2935 7284.9102 -7502.4385 7288.8359 V-7500.7119 7290.3901 -7502.6025 7292.7246 v-7503.5015 7293.834 -7504.9551 7293.3887 -7505.5791 7292.7734 c-7505.7842 7292.5703 -7506.0752 7291.9551 -7506.4873 7291.9478 c-7507.2134 7291.9385 -7506.7378 7293.3237 -7506.5874 7293.582 c-7505.2217 7295.9063 -7502.5322 7294.9678 -7502.2622 7294.7656 c-7500.2622 7293.27 -7500.1846 7292.6064 -7500.0127 7290.3145 C-7497.6328 7291.0894 -7498.6655 7293.0796 v-7498.8286 7293.3809 -7499.1245 7293.6318 -7499.1489 7293.7173 c-7499.2695 7294.1475 -7498.3423 7294.0029 -7498.0176 7293.7949 c-7496.4858 7292.8086 -7496.7881 7291.1909 -7496.8018 7290.8613 C-7495.6602 7292.9248 -7494.8154 7293.5469 -7493.1675 7293.8887 c-7491.8633 7294.1597 -7489.3857 7292.9116 -7490.4751 7290.7549 cf-7489.3096 7292.8301 m-7489.5454 7292.7422 -7489.7817 7292.6357 -7490.0142 7292.5215 C-7490.0142 7293.6821 L-7489.3096 7293.6821 L-7489.3096 7292.8301 Lf-7487.8994 7293.0088 m-7488.1143 7293.0625 -7488.3794 7293.0518 -7488.6055 7293.0181 C-7488.6055 7293.6821 L-7487.8994 7293.6821 L-7487.8994 7293.0088 Lf-7485.7822 7293.6821 m-7485.0767 7293.6821 L-7485.0767 7292.4824 L-7485.7822 7292.4824 L-7485.7822 7293.6821 Lf-7487.1934 7293.6821 m-7486.4878 7293.6821 L-7486.4878 7292.4824 L-7487.0586 7292.4824 L-7487.0967 7292.5342 -7487.1426 7292.5854 -7487.1934 7292.6328 C-7487.1934 7293.6821 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed 3)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3670.5 3454.291 m-3571.5696 3454.291 L-3571.5696 3437.9272 L-3670.5 3437.9272 L-3670.5 3454.291 Lnuu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-3574.0071 3443.6096 m-3573.7832 3443.5535 -3573.5879 3443.8643 -3573.6721 3444.0039 C-3573.2161 3443.6272 -3573.2063 3444.0552 -3573.1472 3443.3264 C-3572.8545 3442.9683 -3572.5422 3443.4639 -3572.8752 3443.76 C-3572.0313 3443.3135 L-3572.5359 3443.1995 L-3572.3984 3442.5933 -3571.7295 3443.3806 -3571.5696 3442.6743 C-3572.4832 3442.7334 L-3572.4375 3442.5313 L-3572.6455 3442.749 -3573.0496 3442.6582 -3573.1904 3442.5732 C-3573.1682 3442.4736 -3573.1824 3442.3115 -3573.0212 3442.2935 C-3574.1243 3442.2471 -3573.3184 3443.3542 -3574.2336 3443.5552 C-3574.1763 3443.541 -3574.1052 3443.5491 -3574.0071 3443.6096 Cf-3574.9441 3442.125 m-3575.3289 3442.8853 L-3575.9744 3442.6895 L-3575.9817 3442.9512 -3576.4519 3443.1638 -3576.1335 3443.3955 C-3576.0713 3443.3542 -3575.9482 3443.2759 -3575.8489 3443.2998 C-3575.9209 3443.8672 -3576.7073 3443.583 -3576.5176 3444.1572 C-3576.0071 3444.0063 -3575.9287 3444.1318 -3575.6145 3443.6707 C-3575.1465 3443.7236 -3574.8057 3443.8542 -3574.5872 3444.0615 C-3574.4482 3443.9751 -3574.4287 3443.6272 -3574.2522 3443.5576 C-3574.2913 3443.5664 -3574.3271 3443.5752 -3574.3721 3443.5796 C-3574.3911 3442.7256 L-3574.5383 3442.9063 -3574.6775 3442.821 -3574.8408 3442.8384 C-3574.0852 3441.8423 L-3574.3289 3441.0435 -3575.0713 3441.5127 -3575.3679 3441.1807 C-3575 3441.8982 -3575.6609 3441.5376 -3574.9441 3442.125 Cf-3574.2522 3443.5576 m-3574.2473 3443.5576 -3574.2393 3443.5566 -3574.2336 3443.5552 C-3574.2393 3443.5566 -3574.2473 3443.5566 -3574.2522 3443.5576 Cf-3630.7073 3448.5222 m-3630.8679 3448.5376 -3630.9153 3448.7393 -3630.9385 3448.8408 C-3629.1296 3448.8247 L-3629.1863 3448.6008 -3629.7073 3448.3232 -3629.3591 3448.1895 C-3629.5144 3447.9414 -3629.9873 3448.1531 -3630.0559 3448.4558 C-3629.9248 3448.1143 L-3630.3416 3448.5522 -3630.6262 3447.6919 -3630.3545 3447.4336 C-3630.3896 3447.4382 L-3631.5439 3449.123 L-3631.1201 3449.2212 -3631.2175 3448.5435 -3630.7073 3448.5222 Cf-3667.8567 3447.665 m-3667.6223 3447.5867 -3667.5935 3447.5059 -3667.6201 3447.4224 C-3667.7041 3447.4856 -3667.7839 3447.5576 -3667.8567 3447.665 Cf-3631.8137 3449.5176 m-3632.1753 3450.0454 L-3632.0305 3449.9031 -3631.9033 3449.7139 -3631.8137 3449.5176 Cf-3629.3088 3441.499 m-3629.3081 3441.4712 -3629.3042 3441.4463 -3629.3137 3441.4087 C-3629.4761 3441.6782 L-3629.4736 3441.6782 -3629.4729 3441.6782 -3629.4719 3441.6782 C-3629.4121 3441.6187 -3629.3584 3441.5591 -3629.3088 3441.499 Cf-3640.0212 3451.499 m-3640.0601 3451.5127 -3640.0935 3451.5176 -3640.1399 3451.5352 C-3640.0967 3451.5313 -3640.0576 3451.5176 -3640.0212 3451.499 Cf-3624.4087 3438.4856 m-3625.2129 3438.9927 L-3625.1057 3438.752 -3625.4937 3438.8247 -3625.3242 3438.5447 C-3625.3855 3438.583 -3625.6729 3438.6782 -3625.5945 3438.8013 C-3625.4304 3438.7854 L-3625.8545 3439.4856 -3625.5977 3439.7544 -3626.3008 3440.2871 C-3625.8643 3440.7014 -3625.6729 3440.3223 -3625.4417 3440.0039 C-3625.3633 3439.9551 -3625.2976 3439.9336 -3625.2312 3439.9072 C-3624.5625 3438.9292 L-3624.4087 3438.4856 Lf-3656.6504 3443.6936 m-3656.6416 3443.6392 L-3656.6497 3443.6582 -3656.6511 3443.6763 -3656.6504 3443.6936 Cf-3656.6064 3443.415 m-3656.6416 3443.6392 L-3656.5984 3443.5264 -3656.4329 3443.4199 -3656.6064 3443.415 Cf-3631.6809 3449.0654 m-3631.6919 3449.1951 -3631.7383 3449.3542 -3631.8137 3449.5176 C-3631.5439 3449.123 L-3631.5823 3449.1152 -3631.6328 3449.0879 -3631.6809 3449.0654 Cf-3631.0671 3447.5376 m-3630.3896 3447.4382 L-3630.1399 3447.0752 L-3630.3992 3447.2124 -3630.7024 3447.3064 -3631.0671 3447.5376 Cf-3638.9512 3451.9104 m-3640.3545 3452.0176 -3638.6064 3451.0867 -3639.2512 3450.8887 C-3639.6409 3450.9856 -3639.7783 3451.376 -3640.0212 3451.499 C-3638.9082 3451.165 -3640.1721 3452.7854 -3639.0496 3452.5791 C-3639.2092 3453.2854 -3639.8591 3453.3496 -3640.24 3453.1582 C-3640.6711 3452.4771 -3639.8633 3452.6592 -3639.7656 3451.9912 C-3640.2161 3452.1016 -3640.1367 3452.2256 -3640.3279 3452.6062 C-3641.0352 3452.4482 -3641.7913 3453.4424 -3642.2136 3452.499 C-3642.7256 3452.6494 -3642.6919 3452.9751 -3642.9863 3453.3342 C-3643.0449 3454.0632 -3642.2249 3453.7168 -3642.0352 3454.291 C-3642.0745 3454.2295 -3642.1511 3454.1062 -3642.1289 3454.0039 C-3641.6863 3454.1572 L-3642.1064 3453.9031 -3641.6279 3453.4287 -3641.4033 3453.3716 C-3641.24 3453.356 -3640.9153 3453.3232 -3640.96 3453.5256 C-3641.2073 3453.6814 L-3640.8889 3453.9126 -3640.5049 3453.1504 -3640.1687 3453.5454 C-3640.1511 3453.7092 -3640.2783 3453.7854 -3640.2976 3453.8875 C-3639.9209 3453.3894 -3639.5576 3453.4182 -3639 3453.0664 C-3639.3232 3453.7896 L-3638.8772 3452.9893 -3637.8672 3453.2168 -3637.1672 3453.6392 C-3637.2449 3453.5166 -3637.3848 3453.4307 -3637.3008 3453.291 C-3636.8896 3453.1184 -3636.5791 3453.6143 -3636.7695 3453.9951 C-3636.3679 3453.3955 -3635.2393 3454.5 -3634.6919 3453.7207 C-3632.1753 3450.0454 L-3632.2695 3450.1375 -3632.3704 3450.2124 -3632.4744 3450.2432 C-3632.7031 3449.6096 -3632.8264 3449.6863 -3632.4255 3449.0879 C-3632.8191 3449.4238 -3632.6687 3449.9336 -3633.26 3449.96 C-3633.0281 3449.6406 -3632.9695 3448.9119 -3633.5359 3448.8367 C-3634.9519 3449.4712 -3635.8904 3451.2759 -3637.2129 3452.1982 C-3637.2617 3451.7092 -3638.3 3451.8462 -3638.8047 3451.7312 C-3638.6121 3451.2056 -3638.2375 3451.0566 -3637.8489 3450.9502 C-3638.0928 3450.917 -3638.5127 3450.9031 -3638.8242 3450.8799 C-3638.9512 3451.9104 Lf-3635.6631 3450.2659 m-3635.6985 3450.2227 -3635.7351 3450.1982 -3635.7727 3450.175 C-3635.7527 3450.2158 -3635.72 3450.2471 -3635.6631 3450.2659 Cf-3637.7305 3450.9646 m-3637.7256 3450.9473 -3637.7273 3450.9326 -3637.7256 3450.9126 C-3637.7664 3450.9238 -3637.8071 3450.9382 -3637.8489 3450.9502 C-3637.8071 3450.9539 -3637.76 3450.96 -3637.7305 3450.9646 Cf-3632.0127 3447.96 m-3631.9287 3447.821 -3631.8665 3447.7822 -3631.7825 3447.6416 C-3631.8342 3447.6895 -3631.8992 3447.7271 -3631.9617 3447.7695 C-3632.0212 3447.8352 -3632.0496 3447.9016 -3632.0127 3447.96 Cf-3631.7295 3448.821 m-3631.7744 3449.0222 L-3631.7383 3449.0447 -3631.7129 3449.0491 -3631.6809 3449.0654 C-3631.6711 3448.957 -3631.6816 3448.8662 -3631.7295 3448.821 Cf-3644.3137 3447.4871 m-3644.4482 3447.5933 L-3644.3672 3447.5854 -3644.3323 3447.5422 -3644.3137 3447.4871 Cf-3640.5144 3451.0796 m-3640.0264 3451.0313 -3640.4561 3450.3496 -3639.7656 3450.3462 C-3639.9683 3450.3013 L-3639.4729 3449.9893 -3638.6023 3450.1328 -3638.0137 3450.1062 C-3638.0801 3450.3982 -3637.6567 3450.46 -3637.7256 3450.9126 C-3637.3232 3450.8064 -3636.9248 3450.7056 -3636.7175 3450.2393 C-3636.4683 3450.3928 -3636.0896 3449.9824 -3635.7727 3450.175 C-3635.9065 3449.9019 -3635.3215 3449.2515 -3636.0928 3449.5854 C-3636.0305 3449.5479 -3636.0696 3449.4856 -3636.0081 3449.4473 C-3636.5049 3449.0664 -3636.7041 3449.7124 -3637.1321 3449.7212 C-3637.3879 3449.4512 -3636.7136 3449.2854 -3636.9551 3449.1782 C-3637.4895 3449.4292 -3638.6321 3448.8535 -3638.5967 3449.8672 C-3638.9856 3449.9395 -3639.0393 3449.7158 -3639.1553 3449.5303 C-3639.7705 3450.6104 -3641.4385 3449.0664 -3641.4329 3450.4482 C-3641.2083 3450.3936 -3640.8423 3450.4224 -3640.5127 3450.1272 C-3640.5144 3451.0796 Lf-3632.8323 3448.0313 m-3632.8623 3448.0256 -3632.9023 3448.0303 -3632.9272 3448.0176 C-3632.8992 3448.0256 -3632.8643 3448.0303 -3632.8323 3448.0313 Cf*u1 D-3626.6736 3452.0352 m-3626.8777 3452.9395 L-3628.0398 3453.1553 -3628.46 3452.9016 -3629.4761 3452.9375 C-3629.5537 3452.8135 -3629.4304 3452.7344 -3629.3679 3452.6951 C-3630.0823 3452.7998 -3631.1511 3452.6104 -3631.6711 3453.0256 C-3631.8984 3453.0176 -3632.4951 3452.7312 -3632.2693 3452.4646 C-3632.3799 3452.5454 -3632.5063 3452.623 -3632.6335 3452.5942 C-3632.6672 3452.2695 -3632.3489 3452.5015 -3632.3416 3452.2344 C-3632.4424 3452.2136 -3632.4817 3452.1504 -3632.5049 3452.252 C-3632.3352 3451.9736 -3632.6809 3451.1504 -3631.8896 3451.1719 C-3631.5833 3451.9307 -3632.4385 3451.26 -3632.2576 3452.0967 C-3631.9951 3452.1016 -3632.0256 3451.7783 -3632.0032 3451.6763 C-3631.6687 3451.6951 -3631.6775 3451.9053 -3631.6953 3452.0967 C-3631.5671 3451.8367 -3631.1465 3452.1982 -3630.9695 3451.8035 C-3630.3191 3451.7393 -3631.0049 3452.4326 -3630.5801 3452.4224 C-3630.3352 3451.5752 L-3629.6289 3451.7344 L-3628.6064 3451.4375 -3629.7751 3450.2703 -3628.6064 3449.791 C-3628.76 3450.2334 -3628.2913 3450.9768 -3627.7473 3451.1531 C-3628.0728 3451.1848 -3628.6743 3451.7371 -3629.0945 3451.4856 C-3628.5022 3452.1494 -3629.9097 3451.5654 -3629.6023 3452.3252 C-3629.3096 3451.9646 -3628.8215 3451.917 -3628.4409 3452.1104 C-3628.5657 3452.1895 L-3628.1609 3452.2791 -3627.8545 3451.3928 -3627.2959 3451.7312 C-3627.0183 3451.7039 -3627.0703 3451.9424 -3627.1191 3452.1416 C-3626.8843 3452.0144 -3626.6743 3451.8486 -3626.6736 3452.0352 Cf0 D-3627.2783 3452.2136 m-3627.6497 3452.1294 L-3627.5615 3452.2695 -3627.4231 3452.2646 -3627.2783 3452.2136 Cf*U-3580.1377 3442.2344 m-3580.1008 3442.2571 -3580.0583 3442.2803 -3580.0249 3442.3035 C-3580.0496 3442.2646 -3580.0923 3442.2471 -3580.1377 3442.2344 Cf-3613.0967 3441.9104 m-3612.8816 3441.9382 L-3612.9656 3441.9092 -3613.0344 3441.9053 -3613.0967 3441.9104 Cf-3608.2693 3439.1104 m-3607.9551 3438.9126 L-3608.0791 3438.925 -3608.1763 3439.0039 -3608.2693 3439.1104 Cf-3582.7024 3442.1768 m-3582.7129 3442.1707 L-3582.7305 3442.1848 -3582.7439 3442.2039 -3582.7625 3442.2158 C-3582.7024 3442.1768 Lf-3598.5872 3441.0933 m-3598.5393 3441.165 -3598.4856 3441.23 -3598.4121 3441.2803 C-3598.4209 3441.1963 -3598.4863 3441.1353 -3598.5872 3441.0933 Cf-3608.3271 3439.1475 m-3608.3191 3439.1553 -3608.3145 3439.1572 -3608.3081 3439.1631 C-3608.2959 3439.1455 -3608.2825 3439.1262 -3608.2693 3439.1104 C-3608.3271 3439.1475 Lf-3615.2231 3439.4382 m-3615.2693 3439.4646 -3615.3113 3439.4856 -3615.3608 3439.5222 C-3615.2959 3439.5059 -3615.2561 3439.4739 -3615.2231 3439.4382 Cf-3614.9199 3441.8408 m-3614.9695 3441.8623 -3615.0168 3441.8887 -3615.0537 3441.925 C-3614.9199 3441.8408 Lf-3622.3577 3440.1936 m-3622.6472 3440.3142 L-3622.5049 3440.3013 -3622.4199 3440.2544 -3622.3577 3440.1936 Cf-3615.6863 3441.2854 m-3615.7031 3441.3252 -3615.72 3441.3633 -3615.7312 3441.4016 C-3615.6912 3441.375 -3615.6721 3441.3252 -3615.6863 3441.2854 Cf-3578.2976 3444.7615 m-3578.3042 3444.7615 -3578.3113 3444.7646 -3578.3152 3444.7646 C-3578.3225 3444.8633 L-3578.2976 3444.7615 Lf-3577.5935 3443.5264 m-3577.5105 3443.5015 -3577.4241 3443.479 -3577.3391 3443.457 C-3577.4336 3443.4512 -3577.5256 3443.4783 -3577.5935 3443.5264 Cf-3594.3809 3442.457 m-3594.3042 3442.5796 -3594.1243 3442.7256 -3594.2083 3442.8662 C-3594.0615 3442.6895 -3594.0713 3442.2603 -3594.3809 3442.457 Cf-3579.7092 3450.0664 m-3579.6631 3449.9512 -3579.6057 3449.8643 -3579.5481 3449.7783 C-3579.6553 3449.9019 -3579.7493 3450.0039 -3579.7092 3450.0664 Cf-3579.5481 3449.7783 m-3579.4951 3449.7173 -3579.4385 3449.6531 -3579.3911 3449.5867 C-3579.4463 3449.6416 -3579.4993 3449.7056 -3579.5481 3449.7783 Cf-3596.3313 3449.4912 m-3596.3503 3449.4336 -3596.3799 3449.3853 -3596.4199 3449.3699 C-3596.4082 3449.4856 -3596.3762 3449.5103 -3596.3313 3449.4912 Cf-3577.1335 3443.5928 m-3577.0879 3443.3911 -3575.9817 3442.9512 -3576.9121 3442.8486 C-3576.8762 3442.2192 -3576.3152 3442.5576 -3576.0671 3442.4019 C-3576.2473 3442.2544 -3575.9775 3441.998 -3576.0322 3441.7734 C-3576.1553 3441.8496 -3576.3015 3442.0303 -3576.5049 3441.9856 C-3576.5984 3441.6982 -3576.2898 3441.5022 -3576.0488 3441.6104 C-3576.3457 3441.2783 -3575.6721 3441.1118 -3576.0923 3440.8574 C-3576.9905 3441.0791 -3577.6252 3441.3076 -3578.2568 3442.2256 C-3577.7449 3442.0752 -3577.1721 3441.8875 -3576.7522 3442.1406 C-3576.9287 3442.6848 L-3577.4033 3442.2056 -3577.6963 3442.5632 -3578.1631 3442.5127 C-3577.1145 3442.8013 L-3576.6233 3443.2544 -3576.9519 3443.3584 -3577.3391 3443.457 C-3577.2439 3443.4639 -3577.1577 3443.4968 -3577.1335 3443.5928 Cf-3577.8401 3448.3662 m-3577.8225 3448.3806 L-3577.8071 3448.3623 -3577.7881 3448.3496 -3577.7783 3448.3267 C-3577.8401 3448.3662 Lf-3622.3042 3451.2014 m-3622.3943 3451.4075 L-3622.3191 3451.3142 -3622.2959 3451.2515 -3622.3042 3451.2014 Cf-3578.4656 3445.7312 m-3578.4648 3445.7312 L-3578.4719 3445.7371 -3578.4736 3445.7371 -3578.4656 3445.7312 Cf-3620.0632 3451.2432 m-3620.0664 3451.2583 -3620.0696 3451.2744 -3620.0752 3451.291 C-3620.0671 3451.2744 -3620.0671 3451.2583 -3620.0632 3451.2432 Cf-3619.4641 3439.5144 m-3619.4683 3439.4893 -3619.4695 3439.4646 -3619.4792 3439.4404 C-3619.5271 3439.4712 -3619.5039 3439.4968 -3619.4641 3439.5144 Cf-3620.0615 3451.1936 m-3620.0615 3451.21 -3620.0601 3451.2256 -3620.0632 3451.2432 C-3620.0615 3451.2256 -3620.0576 3451.2092 -3620.0615 3451.1936 Cf-3609.1641 3449.1963 m-3609.1985 3449.1016 -3609.2527 3449.0127 V-3609.2737 3449.0632 -3609.2527 3449.1216 -3609.1641 3449.1963 Cf-3611.3152 3448.3911 m-3611.3152 3448.3911 L-3611.3289 3448.3711 -3611.3369 3448.3535 -3611.3545 3448.3311 C-3611.3152 3448.3911 Lf-3594.8896 3440.0063 m-3594.9961 3439.999 -3595.0759 3440.0127 -3595.1433 3440.0352 C-3595.0657 3440.0491 -3594.9817 3440.0479 -3594.8896 3440.0063 Cf-3620.0752 3451.291 m-3620.0977 3451.3486 -3620.1296 3451.4075 -3620.1824 3451.4814 c-3620.1243 3451.4031 -3620.0935 3451.3433 -3620.0752 3451.291 Cf-3605.8843 3446.4482 m-3605.9072 3446.4692 -3605.9287 3446.4893 -3605.9504 3446.5078 C-3605.9373 3446.5176 -3605.9241 3446.5222 -3605.9111 3446.5352 C-3605.8843 3446.4482 Lf-3604.7617 3446.8486 m-3604.8 3446.9104 -3604.8176 3446.9739 -3604.8391 3447.0303 C-3604.4385 3446.8035 -3603.7024 3447.0491 -3603.6152 3446.4712 C-3603.7512 3446.4856 -3604.4561 3446.1455 -3604.3359 3445.8064 C-3604.6152 3445.9512 -3605.0281 3445.5454 -3605.1785 3445.6406 C-3604.72 3445.957 -3605.1289 3446.1287 -3605.4385 3446.3232 C-3605.72 3446.1553 -3605.3855 3445.8584 -3605.6279 3445.7515 C-3606.2793 3445.8142 L-3605.7119 3445.8916 L-3605.8843 3446.4482 L-3605.8633 3446.4292 -3605.8489 3446.417 -3605.8264 3446.3955 C-3604.8665 3446.1353 -3605.7449 3447.21 -3604.7617 3446.8486 Cf-3604.8391 3447.0303 m-3604.8992 3447.0654 -3604.9519 3447.1079 -3604.9929 3447.167 C-3604.9023 3447.1582 -3604.8672 3447.1016 -3604.8391 3447.0303 Cf-3600.9172 3447.9482 m-3600.8679 3447.9292 -3600.8145 3447.9031 -3600.7473 3447.8599 c-3600.7793 3447.8806 -3600.8535 3447.9075 -3600.9172 3447.9482 Cf-3629.6584 3447.167 m-3629.6416 3447.3311 -3629.0823 3447.668 -3629.0923 3447.2407 C-3629.0923 3447.2407 L-3629.2583 3447.1982 -3629.4255 3447.1531 -3629.5935 3447.1062 C-3629.6584 3447.167 Lf-3590.2336 3445.46 m-3590.2959 3445.4482 -3590.3584 3445.4424 -3590.4209 3445.4502 C-3590.4343 3445.4712 -3590.4473 3445.4951 -3590.4573 3445.5166 C-3590.4192 3445.5796 -3590.2959 3445.5015 -3590.2336 3445.46 Cf-3604.1631 3445.6052 m-3604.2656 3445.6707 -3604.3113 3445.7383 -3604.3359 3445.8064 C-3604.2695 3445.772 -3604.2083 3445.7173 -3604.1631 3445.6052 Cf-3590.1985 3446.4783 m-3590.1191 3446.6008 -3590.0022 3446.7871 -3589.9856 3446.9502 C-3589.8232 3446.9539 -3589.7092 3446.7295 -3589.5439 3446.6494 C-3589.7305 3446.7119 -3589.9463 3446.668 -3590.1985 3446.4783 Cf-3589.5305 3446.6416 m-3589.5352 3446.6455 -3589.5398 3446.6475 -3589.5439 3446.6494 C-3589.5393 3446.6494 -3589.5352 3446.644 -3589.5305 3446.6416 Cf*u1 D-3629.9912 3446.9856 m-3630.0393 3447.0176 -3630.0889 3447.0479 -3630.1399 3447.0752 C-3630.0625 3446.96 L-3630.1912 3446.9182 -3630.3191 3446.8774 -3630.4473 3446.8311 C-3630.4937 3446.8584 -3630.5439 3446.8843 -3630.6057 3446.8982 C-3630.5808 3446.8843 -3630.5615 3446.8384 -3630.5496 3446.792 C-3630.5913 3446.7764 -3630.6321 3446.7593 -3630.6729 3446.7424 C-3630.9792 3447.1851 -3631.7417 3447.5088 -3631.9617 3447.7695 C-3632.2527 3447.9592 -3632.6089 3448.0664 -3632.8323 3448.0313 C-3632.6252 3448.041 -3632.3503 3447.9512 -3632.4329 3447.707 C-3632.8533 3447.4512 -3633.0576 3446.7173 -3633.7832 3447.3486 C-3633.3577 3447.3384 L-3634.3145 3448.2896 L-3634.6497 3447.8955 -3633.8369 3447.8142 -3633.7041 3447.4727 C-3634.4482 3447.9414 -3635.0671 3446.6895 -3635.4121 3447.5127 C-3635.4607 3447.0244 -3635.5422 3446.21 -3636.0305 3446.2583 C-3635.6785 3446.8142 -3636.3232 3446.6155 -3636.0344 3447.2119 C-3636.2031 3447.4912 -3636.5791 3447.0352 -3636.6072 3447.4016 C-3636.5615 3447.1992 L-3637.3953 3446.4263 -3637.6682 3447.6375 -3638.0249 3448.0352 C-3639.0232 3448.2344 -3639.4817 3447.9182 -3640.2959 3448.0015 C-3640.3279 3447.6743 -3640.5496 3446.7744 -3640.8762 3446.8086 C-3641.0281 3447.2515 -3641.7649 3447.4558 -3641.8401 3448.0222 C-3641.2561 3448.26 -3641.3623 3447.5479 -3641.0127 3447.415 C-3640.7217 3448.0093 -3640.9863 3448.0022 -3640.5889 3448.3584 C-3640.9097 3448.1272 -3642.0383 3448.668 -3642.3896 3448.1104 C-3642.2656 3448.0313 L-3642.8264 3447.6936 -3642.9336 3446.291 -3643.8679 3447.1392 C-3644.3137 3447.4871 L-3644.2922 3447.4307 -3644.2898 3447.3643 -3644.2783 3447.3135 C-3645.0081 3447.2544 -3644.8088 3446.6096 -3645.6145 3447.1184 c-3645.5522 3447.0791 -3645.5913 3447.0166 -3645.5281 3446.9783 C-3645.9873 3446.6592 -3646.4504 3447.2998 -3646.7976 3447.4336 C-3647.0095 3446.96 -3646.7473 3446.9683 -3646.6162 3446.6262 C-3647.4241 3446.4424 -3648.2959 3447.2544 -3648.7976 3447.8311 C-3649.3184 3447.5535 L-3649.0095 3447.3584 -3648.6321 3446.8599 -3648.7263 3446.5742 C-3649.0127 3446.668 -3648.9573 3446.8928 -3649.3623 3446.8013 C-3649.2932 3446.499 -3649.1233 3446.2173 -3648.9329 3445.8367 C-3649.7705 3445.3311 -3649.1201 3446.9092 -3649.7063 3445.9814 C-3649.9695 3445.9751 -3650.1223 3446.417 -3650.1511 3446.7822 C-3650.6279 3446.3035 L-3650.6809 3446.7695 -3651.2695 3446.7959 -3651.6553 3446.8662 C-3651.7024 3447.0664 -3651.3447 3447.3623 -3651.1985 3447.1814 C-3651.2273 3447.5479 -3651.6377 3447.7192 -3651.9016 3447.7124 C-3651.9983 3446.7371 -3653.6296 3447.8535 -3653.3176 3446.7039 C-3654.5032 3447.021 -3656.1687 3447.1199 -3656.9512 3447.5264 C-3657.2092 3447.2571 -3657.7351 3447.2432 -3657.4199 3446.7854 C-3658.3743 3446.7822 -3658.8665 3447.7832 -3659.8137 3447.5166 C-3659.8921 3447.394 -3659.3855 3447.5078 -3659.4192 3447.1814 C-3660.0383 3447.5732 -3660.5457 3446.7695 -3661.5063 3447.0303 C-3661.3447 3447.0127 -3661.2976 3446.8115 -3661.2751 3446.71 C-3661.2583 3446.8716 -3661.6687 3447.0454 -3661.9172 3447.2014 C-3662.0569 3447.1184 -3661.7312 3447.0854 -3661.8096 3446.96 C-3663.6653 3446.4871 -3665.0791 3447.8135 -3666.9248 3447.7695 c-3666.3977 3447.7822 -3666.1985 3447.1353 -3666.1929 3446.8716 C-3666.7092 3446.8599 L-3666.9082 3447.1814 -3667.2959 3447.1814 -3667.6201 3447.4224 C-3667.6599 3447.3013 -3667.8176 3447.1707 -3667.6567 3447.0176 C-3668.6768 3446.3643 -3669.25 3448.1982 -3670.5 3447.8623 C-3668.9863 3446.5591 L-3669.3608 3446.1052 L-3668.6953 3445.5127 L-3669.0928 3445.1553 -3669.4385 3445.9814 -3669.4863 3445.4912 C-3669.4023 3445.3535 -3669.2 3445.3975 -3669.1936 3445.1328 C-3669.5752 3444.9414 -3669.6052 3445.3064 -3669.8921 3445.4016 C-3669.1362 3444.4053 -3667.6543 3444.4207 -3666.8567 3444.1768 C-3666.7312 3444.0974 -3666.9641 3444.417 -3666.9863 3444.5176 C-3666.6609 3444.4856 -3666.4656 3444.7959 -3666.0559 3444.623 C-3665.8015 3444.2014 -3666.25 3444.3135 -3666.4519 3444.2695 C-3666.4241 3443.9031 -3666.3225 3443.925 -3666.0977 3443.8699 C-3666.0488 3444.3584 -3664.8633 3444.0435 -3664.5735 3444.6392 C-3663.3721 3444.4856 -3664.7656 3443.375 -3663.5928 3443.5867 C-3663.2424 3444.1455 L-3662.5615 3443.7139 -3661.6809 3443.3311 -3660.9104 3443.4502 C-3661.0728 3443.4683 L-3661.1809 3443.707 -3661.0022 3443.8542 -3660.9231 3443.9768 C-3660.3408 3444.2158 -3659.8176 3443.5376 -3659.4648 3444.0967 C-3658.8008 3443.5022 -3657.6936 3443.0632 -3656.9343 3442.7566 C-3656.7295 3443.4932 -3657.9248 3443.3806 -3658.2407 3443.8411 C-3657.5496 3443.8384 L-3657.9768 3443.8486 -3658.1455 3444.1287 -3658.4016 3444.5479 C-3657.7959 3444.6848 -3657.5967 3444.04 -3657.0225 3443.8535 C-3657.0671 3444.0535 -3656.9905 3444.1768 -3656.7256 3444.1814 C-3656.6504 3443.6936 L-3656.6455 3443.7334 -3656.6162 3443.7703 -3656.5344 3443.8013 C-3655.5127 3443.5022 L-3655.7295 3443.2935 -3655.74 3442.8672 -3656.0039 3442.8623 C-3655.9097 3443.1475 -3656.1335 3443.2039 -3656.3977 3443.1963 C-3656.1663 3442.8774 -3656.6553 3442.9272 -3656.6497 3442.6631 C-3656.1201 3442.6763 -3655.4695 3442.6104 -3655.1223 3442.4768 C-3655.0095 3442.9272 L-3654.5049 3443.041 -3653.9719 3442.7896 -3653.6296 3442.9207 C-3653.7375 3443.1592 L-3653.1321 3443.2979 -3652.5359 3443.0078 -3651.9983 3443.4473 C-3651.4583 3442.9326 -3650.7783 3442.5039 -3650.3369 3441.9646 C-3650.1008 3441.3843 -3648.7522 3442.6951 -3648.1433 3441.8774 C-3648.1023 3441.9395 -3648.5615 3442.3142 -3648.7693 3442.5344 C-3648.3643 3442.6243 -3648.0422 3441.9016 -3647.9153 3442.5132 C-3648.8242 3442.3076 -3647.8665 3443.0015 -3648.2759 3443.175 C-3647.8503 3443.1638 -3647.4016 3443.0535 -3647.1929 3442.8352 C-3647.8816 3442.8398 -3646.9482 3441.9893 -3647.6455 3442.2559 C-3647.1052 3441.7412 -3646.3679 3441.5352 -3645.7241 3441.7344 C-3645.7305 3441.999 -3645.6511 3442.1216 -3645.4111 3442.2312 C-3645.2175 3441.8486 L-3644.9163 3441.9182 -3645.8 3442.3013 -3645.1936 3442.4382 C-3644.5696 3441.7832 -3643.3145 3442.8096 -3643.0413 3441.5974 C-3642.5657 3442.0767 -3643.9463 3442.083 -3643.2295 3442.668 C-3643.6465 3443.1062 -3644.2217 3442.6052 -3644.3591 3443.21 C-3643.9504 3443.0376 -3644.21 3443.7212 -3643.9463 3443.7271 C-3643.4905 3443.3542 L-3643.5913 3443.3311 L-3642.8264 3442.7603 -3641.6145 3443.0344 -3640.6377 3442.9375 C-3639.8103 3442.3279 -3639.2407 3441.4482 -3638.2483 3441.5144 C-3638.5413 3441.8716 -3637.4241 3441.8584 -3638.0488 3442.5132 C-3637.5896 3442.8286 -3637.1362 3442.4551 -3637.1272 3442.1907 C-3637.5313 3442.1008 -3637.2693 3442.1062 -3637.6096 3441.9768 C-3637.3799 3441.6563 -3636.8503 3441.6707 -3636.6328 3441.8799 C-3636.7336 3441.856 -3636.6953 3441.9182 -3636.7175 3442.0176 C-3636.2351 3442.2334 -3636.4863 3441.6995 -3636.1377 3441.5664 C-3636.0271 3442.0144 -3635.3679 3441.6863 -3635.0496 3441.9182 C-3634.5879 3441.2791 L-3634.8416 3441.6992 -3634.1455 3441.4326 -3634.0728 3441.8184 C-3633.7417 3441.5222 -3633.4641 3441.0022 -3632.96 3441.1155 C-3633.1682 3441.3352 -3632.5 3441.4326 -3632.4912 3441.8584 C-3631.6279 3442.2659 -3631.0615 3440.6963 -3630.2439 3441.3064 C-3630.2693 3441.4063 -3630.4343 3441.6863 -3630.1953 3441.7935 C-3630.0071 3441.6743 -3629.6775 3441.7246 -3629.4761 3441.6782 C-3629.4824 3441.6904 L-3629.4785 3441.6863 -3629.4761 3441.6814 -3629.4719 3441.6782 C-3629.3733 3441.6553 -3629.3113 3441.6016 -3629.3088 3441.499 C-3628.9641 3441.0823 -3628.7864 3440.6553 -3628.1079 3440.3013 C-3628.1577 3439.8135 -3628.7305 3440.0022 -3628.9785 3440.1592 C-3629.1929 3440.6416 L-3629.3977 3439.9053 -3629.8047 3440.7695 -3629.9607 3440.521 C-3629.5537 3439.6582 -3628.3816 3439.8699 -3627.6785 3439.3398 C-3628.1072 3438.6592 -3629.0398 3438.5535 -3629.8535 3438.6353 C-3629.4951 3438.9287 L-3629.9209 3438.9382 L-3629.5088 3439.457 L-3629.9121 3439.3662 -3630.2607 3439.499 -3630.6252 3439.4692 C-3630.1985 3439.46 -3630.0322 3440.1328 -3630.2737 3440.0264 C-3630.7493 3439.5479 -3630.7693 3440.3384 -3631.1328 3440.3096 C-3630.9304 3440.3542 -3630.6672 3440.3623 -3630.8369 3440.6416 C-3631.5537 3440.0552 -3631.7473 3440.4375 -3632.3992 3439.8115 C-3632.3184 3440.625 -3633.2136 3439.8928 -3633.3113 3440.5591 C-3633.0088 3440.6272 L-3633.6504 3441.1187 L-3634.2424 3440.4558 -3633.1262 3440.4424 -3634.0271 3439.9739 C-3634.8584 3439.8928 -3634.8369 3440.7471 -3635.4905 3440.8096 C-3635.2751 3440.3286 -3634.7568 3439.915 -3634.2295 3439.9287 C-3634.5488 3439.6963 L-3634.3799 3439.417 -3633.6504 3439.4756 -3633.2864 3439.5044 C-3633.8879 3440.0576 -3633.0049 3439.6743 -3632.7312 3440.1062 C-3632.6809 3439.6406 -3633.0671 3439.7139 -3632.6111 3439.3398 C-3633.0383 3439.3486 -3633.1008 3439.3875 -3633.6443 3439.2119 C-3632.4695 3439.4238 -3632.5879 3437.5933 -3631.5625 3437.9856 C-3632.0352 3438.1963 -3631.3977 3438.6582 -3631.3408 3438.8843 C-3631.1184 3438.8279 -3630.6672 3438.7173 -3630.4817 3438.6008 C-3630.6497 3437.9272 L-3630.0522 3437.6353 -3629.8447 3439.0623 -3629.1553 3438.3672 C-3629.0657 3437.9646 -3629.7617 3438.2312 -3629.6377 3438.1531 C-3628.6943 3437.73 -3628.3545 3438.8142 -3627.5168 3439.3223 C-3627.4695 3439.1199 -3627.4792 3438.6936 -3627.1863 3438.3367 C-3627.2783 3438.7412 -3627.0615 3438.9482 -3627.3911 3439.2432 C-3627.1111 3439.415 -3626.7793 3439.1184 -3626.5322 3438.96 C-3627.1152 3438.7236 -3626.2937 3438.3799 -3626.1863 3438.1375 C-3625.8843 3438.2056 -3626.2783 3438.541 -3626.4641 3438.6582 C-3626.2217 3438.7659 -3625.9336 3439.3623 -3625.7959 3438.7566 C-3625.7864 3439.1814 -3626.4736 3439.8774 -3626.9231 3439.9871 C-3626.6201 3440.0552 L-3626.8289 3440.2734 -3626.8679 3440.2119 -3627.1687 3440.1455 C-3626.8743 3440.4756 -3626.9033 3440.8398 -3626.9719 3441.1431 C-3627.0105 3441.0811 -3626.9504 3441.0422 -3626.9873 3440.9814 C-3627.2295 3440.873 -3627.4153 3440.9893 -3627.3591 3441.2158 C-3627.5769 3441.7876 -3627.0232 3441.5732 -3626.8591 3441.8584 C-3626.7351 3441.821 -3626.6111 3441.7822 -3626.4895 3441.7432 C-3625.2312 3439.9072 L-3624.6936 3439.6936 -3624.4519 3440.1328 -3624.0481 3440.4104 C-3623.9373 3439.9182 L-3623.4695 3439.9692 -3623.0281 3440.125 -3623.3279 3440.7471 C-3623.3447 3440.583 -3623.4065 3440.6216 -3623.5081 3440.5974 C-3623.5215 3440.665 -3623.5449 3440.7124 -3623.5745 3440.7515 C-3623.5842 3440.7803 -3623.5896 3440.8086 -3623.5977 3440.8367 C-3623.0967 3440.6782 -3622.7839 3440.5752 -3622.7551 3440.5566 C-3623.6057 3441.2695 -3622.7976 3441.4482 -3622.9399 3442.3184 C-3622.0808 3442.0352 L-3622.6016 3441.7593 -3622.0903 3441.6096 -3621.9055 3441.4912 C-3621.8545 3441.9814 -3621.2136 3441.4871 -3620.9121 3441.5552 C-3620.9343 3441.6563 L-3620.6553 3441.8264 -3620.1663 3441.7783 -3619.8184 3441.6455 C-3619.8342 3441.4814 -3619.3879 3440.6807 -3619.1736 3440.1982 C-3619.7705 3440.0144 -3619.4163 3439.8184 -3619.4641 3439.5144 C-3619.4023 3439.5422 -3619.2913 3439.5479 -3619.2783 3439.4856 C-3619.1929 3439.3462 -3619.3943 3439.2998 -3619.4111 3439.1375 C-3620.0457 3439.3662 -3620.6985 3439.4307 -3620.9573 3440.1143 C-3620.7625 3440.4238 -3620.6252 3439.8184 -3620.4072 3440.0256 C-3620.7217 3440.4856 -3621.1272 3440.394 -3621.6543 3440.3806 C-3621.8271 3439.9712 L-3622.3577 3440.1936 L-3622.1362 3439.9768 -3622.2695 3439.5479 -3621.7129 3439.4646 C-3621.7839 3439.0791 -3622.2649 3439.5535 -3622.6057 3439.4238 C-3622.78 3439.9683 L-3622.7129 3439.665 -3623.4424 3439.6062 -3622.9241 3439.1924 C-3622.0808 3438.7471 L-3622.3152 3438.375 L-3621.6023 3438.2703 L-3621.7705 3438.5522 L-3620.6252 3438.175 -3621.4329 3439.6353 -3620.28 3438.9927 C-3619.9192 3438.333 -3619.5313 3438.2622 -3618.8247 3438.4224 C-3619.3359 3438.5703 -3618.8772 3438.8875 -3619.0696 3439.2695 C-3618.5481 3439.5447 -3618.3721 3439.0015 -3618.1016 3438.7432 C-3617.9688 3439.0923 -3617.8743 3439.3774 -3618.3401 3439.3264 C-3618.3984 3440.0552 -3617.7273 3439.1995 -3617.6848 3439.9512 C-3616.1416 3439.9287 -3616.4482 3437.5256 -3614.6443 3438.4639 C-3614.7119 3438.7659 L-3613.5664 3438.3894 -3612.9055 3438.7515 -3611.8447 3438.5127 C-3611.0095 3439.2832 L-3611.1963 3439.4016 -3611.6985 3439.9771 -3611.4641 3440.3486 C-3611.8704 3439.5686 -3612.3015 3439.8411 -3612.7393 3439.4238 C-3612.7839 3439.6262 -3612.6057 3439.772 -3612.5281 3439.8975 C-3612.7922 3439.8894 -3612.9248 3439.541 -3613.2737 3439.6763 C-3613.2568 3439.8367 -3612.8762 3440.0303 -3613.1631 3440.125 C-3613.6377 3439.6455 L-3614.2727 3439.8743 -3613.9504 3440.7935 -3614.6963 3440.5732 C-3614.5576 3440.1455 -3614.2744 3439.5264 -3613.9856 3439.4238 C-3614.3264 3439.3311 -3613.5313 3439.165 -3613.8423 3438.9092 C-3614.3333 3439.5435 -3614.5703 3439.041 -3615.2231 3439.4382 C-3615.1465 3439.3496 -3615.1262 3439.2256 -3614.9656 3439.1863 C-3615.9128 3438.9182 L-3615.6785 3439.2896 -3616.6953 3439.3264 -3616.6072 3439.8774 C-3615.5977 3440.1052 -3615.8943 3439.772 -3614.7439 3440.0854 C-3615.0696 3440.21 -3615.4895 3440.7703 -3615.6863 3441.2854 C-3615.6963 3441.2646 -3615.7129 3441.2471 -3615.7483 3441.2371 C-3615.9241 3441.7822 -3615.7449 3441.9287 -3615.7483 3442.8806 C-3615.2231 3442.2039 -3614.8721 3442.7615 -3614.2527 3442.3716 C-3614.1362 3441.8496 -3614.6121 3441.7056 -3614.9199 3441.8408 C-3614.3743 3441.4951 L-3614.4817 3441.7344 L-3613.0967 3441.9104 L-3613.3591 3441.9382 -3613.4482 3442.2407 -3613.5852 3442.4688 C-3613.4065 3442.4893 -3613.2295 3442.6272 -3613.0413 3442.7783 C-3613.0808 3442.2803 -3613.0559 3441.9287 -3612.8816 3441.9382 C-3611.9905 3442.0566 -3611.4951 3442.5039 -3611.1663 3443.0728 C-3611.1321 3443.0615 -3611.0935 3443.0491 -3611.0625 3443.0376 C-3611.2119 3442.5264 -3610.4297 3442.1199 -3610.1536 3441.5974 C-3610.1672 3442.1262 -3609.6943 3441.915 -3609.4375 3442.1848 C-3609.3008 3441.5791 -3609.4832 3440.7432 -3609.7959 3440.248 C-3610.3984 3440.8013 -3610.1335 3440.8064 -3610.4182 3441.5923 C-3611.3848 3442.1155 L-3611.1687 3441.6328 L-3611.6511 3441.4199 -3612.1145 3442.0576 -3612.0791 3441.4292 C-3611.8242 3441.0103 -3611.4033 3441.2646 -3611.1504 3440.8442 C-3611.4695 3440.6143 L-3610.9065 3439.9968 -3611.1809 3441.2092 -3610.4993 3440.7783 C-3610.75 3440.2432 -3610.4375 3440.7393 -3610.1455 3440.3806 C-3610.3799 3440.0093 -3611.3457 3440.5344 -3611.1409 3439.6262 C-3610.7864 3439.2295 -3609.9482 3440.6904 -3609.4792 3439.7876 C-3609.5022 3439.8894 L-3608.8103 3440.0078 -3608.5671 3439.4893 -3608.3081 3439.1631 C-3608.0137 3439.457 -3607.6072 3439.0435 -3607.2881 3439.0103 C-3607.2959 3439.2744 L-3606.8457 3439.1638 L-3607.0601 3439.6455 -3607.3733 3439.1504 -3607.76 3439.2212 C-3607.7119 3439.7119 L-3608.1577 3439.1294 -3608.4551 3440.0144 -3608.8008 3440.4375 C-3608.2976 3440.0127 -3607.3799 3440.5576 -3607.2617 3439.5974 C-3606.9504 3440.0942 L-3606.8015 3439.915 L-3606.5696 3440.2871 -3606.8064 3440.8699 -3607.2561 3440.9814 C-3607.3342 3440.8574 -3607.3733 3440.7959 -3607.3496 3440.6936 C-3607.5583 3440.9126 -3607.75 3441.2935 -3608.2551 3441.1807 C-3607.9856 3440.9207 L-3608.6145 3440.8853 -3609.1863 3441.0752 -3609.4016 3441.5576 C-3608.4937 3441.7622 -3607.6008 3441.8054 -3606.7483 3441.7832 C-3606.4968 3440.6743 -3606.1985 3440.0522 -3606.0703 3439.021 C-3605.4983 3438.8311 -3604.7217 3438.6895 -3604.2249 3439.0664 C-3604.2705 3439.2695 L-3604.0281 3439.375 -3603.8047 3439.3184 -3603.6184 3439.2014 C-3603.3623 3439.4727 -3603.7937 3439.7471 -3603.6152 3439.8936 C-3602.7959 3439.5479 L-3602.8464 3440.0144 -3603.5359 3440.0166 -3603.8633 3440.0491 C-3603.8015 3440.0103 -3603.6768 3439.9326 -3603.7168 3439.8699 C-3604.0977 3439.6782 -3604.8071 3440.4727 -3604.9736 3439.7979 C-3605.1592 3439.915 -3604.5967 3439.2998 -3605.2249 3439.2646 C-3605.6455 3439.0103 -3605.7825 3439.6155 -3605.8264 3439.8184 C-3605.8333 3440.083 -3605.1663 3440.1807 -3605.3977 3440.499 C-3605.0703 3440.4646 -3604.9399 3440.125 -3604.5212 3440.3799 C-3604.8457 3440.4119 -3605.2864 3440.9482 -3605.4592 3440.5376 C-3606.1008 3441.0303 -3606.0088 3442.2703 -3605.7063 3442.3384 C-3605.7783 3441.9502 -3604.5359 3441.8599 -3605.3772 3441.3535 C-3604.9993 3440.8535 -3604.3088 3440.8496 -3603.8145 3440.5376 C-3603.8369 3440.6375 L-3603.2231 3440.5127 L-3603.3096 3440.6504 -3603.4951 3440.7695 -3603.5012 3441.0313 C-3602.6511 3440.3232 L-3603.1296 3440.7998 -3602.3545 3440.6543 -3602.1367 3440.8643 C-3602.0457 3440.46 -3601.7136 3440.1638 -3602.0322 3439.9326 C-3602.3904 3439.6392 -3602.2407 3440.1504 -3602.5664 3440.1814 C-3602.1052 3439.5447 L-3602.0657 3439.6062 L-3601.7881 3439.0854 L-3601.1599 3439.1216 -3602.0625 3440.2979 -3601.2576 3439.7876 C-3601.3623 3439.0767 L-3600.4304 3439.1814 -3599.2336 3439.9814 -3598.5752 3439.6531 C-3598.7568 3440.0576 -3598.8369 3440.7083 -3598.5872 3441.0933 C-3598.8711 3440.9712 -3599.4417 3440.9968 -3599.8489 3441.0632 C-3599.9272 3440.9382 -3599.3401 3440.2227 -3598.8977 3440.376 C-3599.1121 3439.2119 -3600.0105 3441.0791 -3600.0625 3439.8982 C-3601.1897 3439.4871 -3600.9033 3441.0352 -3601.8601 3440.3433 C-3601.8733 3440.8699 -3602.1321 3440.6008 -3602.1824 3441.0654 C-3601.8992 3441.925 -3600.9033 3441.0352 -3600.2825 3441.3367 C-3600.3433 3441.375 -3600.4656 3441.4539 -3600.4895 3441.5535 C-3600.0457 3441.7083 -3599.8623 3441.5908 -3599.5522 3441.3955 C-3599.5913 3441.333 L-3599.0496 3440.8184 -3599.2561 3441.7256 -3598.9373 3441.9583 C-3598.8137 3441.8799 -3598.3704 3442.0313 -3598.4417 3441.6455 C-3597.8643 3442.1462 L-3597.8921 3441.5576 L-3597.5664 3441.5222 -3597.4951 3441.9119 -3597.2 3441.5535 C-3597.1863 3441.0264 L-3597.9951 3440.8442 L-3597.5852 3440.6719 -3597.8809 3440.3398 -3597.4304 3440.2295 C-3597.9336 3440.8054 -3597.0745 3440.5215 -3597.0249 3441.0103 C-3596.6936 3440.7139 L-3596.7783 3440.8542 L-3596.5183 3441.125 -3596.4688 3440.6582 -3596.1653 3440.7271 C-3596.5232 3440.4336 -3596.7576 3440.0632 -3597.2136 3440.4375 C-3596.8816 3440.1416 -3596.2231 3439.8135 -3596.0615 3439.7959 C-3595.7129 3439.5752 -3595.4695 3439.9768 -3595.1433 3440.0352 C-3595.7693 3440.2471 -3594.9241 3441.6328 -3596.1785 3441.2544 C-3596.1553 3441.1531 -3596.0537 3441.1763 -3596.0144 3441.2383 C-3596.1816 3440.5654 -3596.7664 3441.2803 -3597.0383 3441.5376 C-3596.9683 3441.925 -3597.2527 3442.021 -3596.7705 3442.2344 C-3596.9287 3441.9871 -3596.3643 3441.3716 -3595.9055 3441.6895 C-3595.9863 3442.5176 L-3595.3184 3442.6155 L-3595.3809 3442.6553 L-3595.1296 3443.1895 -3594.6682 3442.5522 -3594.2083 3442.8662 C-3593.8762 3442.5703 -3592.6023 3442.8054 -3593.1504 3441.9382 C-3592.7375 3442.457 -3592.3752 3441.7959 -3591.9248 3441.6848 C-3592.4863 3441.3462 L-3591.8225 3440.752 -3592.0137 3441.1353 -3591.4824 3440.1924 C-3591.4287 3440.4182 -3591.3103 3440.6052 -3591.4182 3440.8442 C-3590.5264 3440.8875 -3589.2527 3441.1216 -3588.7295 3440.4424 C-3588.1008 3440.479 -3588.0022 3441.4558 -3587.1201 3441.0728 C-3586.9343 3440.9558 -3587.2649 3440.2979 -3586.6809 3440.5352 C-3586.6416 3440.5974 -3587.2432 3441.1504 -3586.5928 3441.0854 C-3586.1296 3440.4473 -3585.5049 3441.4375 -3584.9023 3440.8843 C-3584.5842 3441.1143 -3584.0322 3441.0264 -3584.1472 3441.5313 C-3584.6511 3441.417 -3585.3643 3441.5222 -3585.4729 3441.7646 C-3585.4033 3441.46 -3585.8313 3441.4692 -3585.46 3441.2344 C-3586.2217 3440.8535 -3585.9543 3441.5479 -3586.6377 3441.2871 C-3586.6848 3441.4893 -3586.2864 3441.8455 -3586.1399 3441.665 C-3586.1367 3442.3542 -3587.4873 3441.998 -3586.8799 3442.8247 C-3586.1497 3442.8843 -3585.9329 3441.4473 -3585.3 3442.1726 C-3585.5537 3442.5923 -3585.9504 3442.2371 -3586.2727 3442.96 C-3585.7527 3443.2383 L-3585.3752 3442.7393 L-3585.3977 3442.8411 L-3584.4792 3443.4727 -3584.5481 3442.1318 -3583.7263 3441.7854 C-3584.2024 3441.3076 -3583.6162 3440.5908 -3583.9744 3440.2979 C-3583.4248 3440.21 -3583.0212 3440.3013 -3583.0176 3440.9912 C-3584.0457 3441.5535 -3583.0759 3441.7207 -3584.0264 3442.4075 C-3583.8704 3442.6553 -3584.2527 3443.417 -3583.6863 3443.4932 C-3583.0481 3443.0015 -3583.8772 3442.9182 -3583.2407 3442.6907 C-3583.2031 3442.752 -3583.1641 3442.8142 -3583.1863 3442.9163 C-3582.8936 3442.5576 -3582.8447 3443.0454 -3582.4905 3442.6494 C-3582.5745 3442.7876 L-3582.1377 3443.2056 -3582.0967 3442.3135 -3581.7207 3442.7695 C-3581.8711 3442.2571 -3581.4683 3442.3496 -3581.2351 3442.0303 C-3581.6162 3441.8367 -3581.8225 3441.1016 -3582.5745 3441.1431 C-3582.6653 3441.5479 -3582.6104 3441.772 -3582.9192 3441.9683 C-3582.4304 3441.9182 L-3582.5359 3441.9856 -3582.6162 3442.0896 -3582.7129 3442.1707 C-3583.1824 3441.96 L-3582.5872 3441.6719 -3582.8601 3441.2393 -3582.6072 3440.8184 C-3582.0625 3440.9951 -3582.1577 3440.707 -3581.8152 3440.8384 C-3581.8496 3441.4326 -3580.7649 3441.8535 -3580.1377 3442.2344 C-3580.2351 3442.2119 -3580.3608 3442.2271 -3580.4287 3442.2119 C-3580.8843 3442.5867 -3580.1152 3442.707 -3580.0984 3442.8699 C-3579.7664 3442.5732 L-3579.8289 3442.6143 -3579.9153 3442.752 -3579.7737 3442.8367 C-3579.3242 3442.7256 -3579.3503 3442.1375 -3578.9016 3442.0264 C-3578.8679 3442.3535 -3579.2473 3442.8496 -3578.9683 3443.021 C-3578.8721 3443.3064 -3578.5657 3444.0654 -3577.9695 3443.7764 C-3577.9272 3443.6504 -3577.7727 3443.5811 -3577.5935 3443.5264 C-3577.6184 3443.5447 -3577.6497 3443.5576 -3577.6609 3443.5811 C-3577.2649 3443.9375 L-3577.6023 3444.4951 -3577.9473 3443.6743 -3578.2864 3444.2344 C-3578.3152 3444.7646 L-3578.5791 3444.7659 -3578.9375 3444.9956 -3579.1023 3445.2703 C-3578.7 3445.3604 -3578.6152 3445.2212 -3578.1653 3445.1104 C-3578.1023 3445.4463 -3578.4192 3445.6951 -3578.4648 3445.7312 C-3578.3977 3445.4292 L-3578.9343 3444.9902 -3579.2 3445.9375 -3579.8679 3445.8384 C-3579.9688 3445.8176 -3579.9072 3445.7783 -3579.8848 3445.6772 C-3580.4255 3446.1907 -3580.9561 3445.4871 -3581.4817 3446.165 C-3581.3103 3445.8853 L-3581.6682 3446.1104 -3582.3679 3446.6328 -3583.0671 3447.1375 C-3583.0728 3447.3442 L-3582.9951 3447.4683 -3583.2576 3447.46 -3583.3984 3447.3774 C-3583.3977 3447.3743 L-3583.7483 3447.6262 -3584.0852 3447.8584 -3584.3608 3448.0313 C-3584.2727 3448.1592 -3584.1599 3448.2659 -3584.0305 3448.2959 C-3583.9209 3448.0535 -3583.2783 3448.252 -3583.3665 3447.7014 C-3583.0696 3448.0344 -3582.5913 3447.5576 -3582.3733 3447.7659 C-3582.7705 3447.4126 -3582.0967 3447.2471 -3582.0271 3446.9424 C-3581.8936 3447.291 -3581.4385 3446.917 -3581.4905 3447.3843 C-3581.4121 3447.5059 -3581.6855 3447.0742 -3581.8545 3447.3542 C-3582.2705 3447.7896 -3581.0928 3447.7371 -3581.6111 3448.1504 C-3580.9519 3447.8232 -3580.0833 3447.9646 -3579.4033 3447.5352 C-3579.7839 3447.3442 L-3579.4817 3447.4126 -3578.7664 3447.3086 -3578.7129 3447.5344 C-3578.9375 3447.5886 -3579.2 3447.583 -3579.4873 3447.6768 C-3579.5012 3448.2039 -3578.7969 3447.6726 -3578.7649 3447.999 C-3577.9304 3447.1262 L-3578.2959 3447.0967 L-3578.0657 3446.7764 -3577.3015 3447.1631 -3576.7351 3447.2371 C-3577.0601 3447.9592 -3577.5896 3447.2559 -3578.1855 3447.5454 C-3578.6184 3447.8184 -3577.9182 3448.2424 -3578.3279 3448.415 C-3578.2217 3448.583 -3577.9543 3448.5632 -3577.8225 3448.3806 C-3577.6609 3448.5127 L-3578.0264 3449.168 -3578.8457 3449.0222 -3579.3911 3449.5867 C-3579.3433 3449.5166 -3579.3015 3449.4424 -3579.2864 3449.3662 C-3579.7063 3449.1118 -3580.1328 3449.1216 -3580.5422 3449.2959 C-3580.3257 3449.5022 -3580.24 3449.3623 -3580.1162 3449.2854 C-3580.1008 3449.4482 -3580.4873 3449.5176 -3580.6335 3449.6982 C-3580.2527 3449.8894 -3580.5625 3450.0854 -3580.3215 3450.1936 C-3580.5696 3450.3496 -3580.7705 3450.3035 -3581.0728 3450.2344 C-3581.2295 3449.9871 -3580.9431 3449.8936 -3580.9751 3449.5686 C-3581.2864 3449.7646 -3581.4287 3448.9871 -3581.8843 3449.3623 C-3581.2783 3449.499 -3582.0439 3450.0686 -3582.2527 3450.2876 C-3582.1511 3450.3096 L-3582.3433 3450.6907 -3582.5063 3450.707 -3582.6392 3450.3584 C-3582.3911 3450.2014 -3582.1511 3450.3096 -3582.2217 3449.9224 C-3582.3855 3449.9395 -3582.5488 3449.9558 -3582.7344 3450.0728 C-3582.5657 3449.7935 L-3583.3799 3449.8743 L-3583.5088 3450.2158 -3583.7241 3450.6982 -3583.8369 3451.2014 C-3584.0322 3450.8928 -3584.3042 3451.1504 -3584.4895 3451.2695 C-3584.4033 3451.1272 L-3584.7625 3450.8352 -3585.5615 3451.0791 -3585.6289 3451.3806 C-3585.8855 3451.1118 -3583.8152 3449.457 -3585.6289 3449.7371 C-3586.3184 3449.7393 -3586.0583 3450.7014 -3586.4519 3451.0352 C-3586.4297 3450.9375 -3586.4688 3450.8743 V-3586.7705 3450.8035 -3586.8008 3451.1707 -3587.0488 3451.3264 C-3586.8679 3451.4727 -3586.6057 3451.479 -3586.5212 3451.3398 C-3586.6121 3451.7432 -3587.1497 3451.3035 -3587.3809 3451.6216 C-3587.0808 3451 -3587.9641 3451.3848 -3587.7312 3451.0654 C-3588.3313 3450.665 -3588.9729 3451.1572 -3589.2881 3451.6155 C-3589.6953 3450.8352 -3590.0022 3451.7192 -3590.6631 3451.3584 C-3590.5615 3451.3806 -3590.3772 3451.2646 -3590.2351 3451.3486 C-3589.8584 3450.8535 -3590.9199 3451.0886 -3590.3401 3450.6353 C-3590.4641 3450.7139 -3590.3489 3450.8982 -3590.2217 3450.821 C-3589.9993 3450.7656 -3589.7898 3450.5479 -3589.8457 3450.3223 C-3590.3843 3449.8843 L-3590.1963 3449.7646 L-3591.0137 3449.1582 L-3591.0359 3449.2571 -3590.9592 3449.3806 -3590.9199 3449.4424 C-3591.8679 3449.1768 -3592.9519 3449.5144 -3593.7825 3449.4336 C-3593.9385 3450.8311 -3595.8271 3450.0313 -3596.4983 3450.8894 C-3596.3184 3450.4893 -3596.22 3449.7822 -3596.3313 3449.4912 C-3596.1816 3449.4326 -3595.8752 3448.8672 -3595.5359 3448.9856 C-3595.4817 3449.21 -3595.0625 3449.4639 -3595.3323 3449.7207 C-3594.3943 3449.5615 -3595.4592 3449.1079 -3595.1824 3448.5879 C-3596.2217 3448.7236 -3596.8313 3449.5422 -3597.4873 3449.8711 C-3597.5039 3449.7056 L-3597.9993 3450.0176 L-3597.5945 3450.1104 -3597.6145 3450.9031 -3598.1362 3450.6262 C-3598.0728 3450.5867 L-3598.3704 3450.2544 -3598.9895 3450.6455 -3599.4543 3450.5942 C-3599.7695 3451.0522 L-3600.2351 3451 -3600.2551 3450.1475 -3600.4065 3449.6367 C-3601.1362 3449.5767 -3601.5576 3450.2759 -3602.0759 3450.6907 C-3602.3103 3450.3184 -3603.4033 3450.2312 -3602.8242 3449.7803 C-3603.4824 3450.1079 -3603.3496 3452.1008 -3604.4785 3450.9968 C-3604.1855 3450.6375 L-3605.2649 3450.7124 -3606.8042 3451.4263 -3607.3015 3451.0488 C-3606.9033 3449.76 -3608.6497 3449.7371 -3608.8416 3448.4736 c-3608.7881 3448.7622 -3609.1936 3448.8584 -3609.2527 3449.0127 C-3609.3416 3448.8643 -3609.4895 3448.7207 -3609.6465 3448.9814 C-3609.2256 3449.2344 -3609.9424 3450.2935 -3609.1377 3449.7832 C-3609.5449 3450.6494 -3610.0696 3451.3264 -3610.9617 3451.2832 C-3610.9482 3450.7559 L-3610.2424 3450.9163 L-3610.3137 3450.5264 -3609.9504 3450.5566 -3609.8015 3450.3774 C-3611.1145 3450.0811 -3609.6296 3449.1431 -3610.9719 3449.2119 C-3611.1016 3449.5535 -3611.0176 3449.4126 -3611.3665 3449.5479 C-3611.2024 3449.5303 -3611.1729 3449.167 -3611.4373 3449.1592 C-3611.6912 3449.5811 L-3612.1599 3448.7014 -3610.9153 3449.0088 -3611.3152 3448.3911 C-3610.7969 3447.9771 -3609.8992 3447.7559 -3610.0664 3447.083 C-3610.9128 3446.8384 -3610.8279 3448.3433 -3611.7129 3448.0376 C-3611.8071 3447.7515 L-3612.1184 3447.9463 -3612.1687 3448.4104 -3612.3391 3448.6904 C-3612.3545 3448.5264 -3612.4336 3448.4053 -3612.6335 3448.3584 C-3613.1592 3449.0352 -3613.5081 3449.168 -3613.9929 3449.9075 C-3612.7024 3449.3535 -3612.8896 3450.4224 -3611.5576 3449.9287 C-3611.7664 3450.1475 -3612.7041 3450.3076 -3612.7617 3451.0352 C-3612.7493 3450.5078 L-3613.1824 3450.7822 -3613.6152 3451.0535 -3614.1592 3450.8799 C-3613.8271 3450.583 L-3614.5481 3450.9502 -3615.0256 3449.7822 -3615.5945 3450.6592 C-3615.3936 3450.707 -3615.2305 3450.6907 -3615.1064 3450.6104 c-3615.4775 3450.8462 -3615.9431 3450.7935 -3616.3464 3450.7039 C-3617.1809 3451.5752 L-3617.1736 3451.3135 -3617.7024 3451.2979 -3617.4473 3450.8799 C-3618.0481 3450.4783 -3618.3313 3451.2646 -3618.6785 3451.3955 C-3619.2937 3450.8352 -3618.1455 3451.1455 -3618.0852 3450.417 C-3618.9329 3450.1726 -3619.8313 3450.3936 -3620.3096 3450.8672 C-3620.1367 3450.9739 -3620.0527 3451.0654 -3620.0615 3451.1936 C-3620.0872 3451.0264 -3620.4287 3451.0703 -3620.6191 3451.0654 C-3620.75 3451.4075 L-3621.0671 3451.1763 -3621.0225 3450.9739 -3620.7527 3450.7158 C-3621.0559 3450.6494 -3621.4172 3451.3086 -3621.7295 3450.8142 C-3621.2119 3450.4016 -3620.5522 3450.7615 -3620.2825 3450.5044 C-3621.3643 3450.8423 -3621.3711 3449.46 -3622.7424 3449.8955 C-3622.7593 3449.7312 -3622.5271 3449.4126 -3622.7913 3449.4075 C-3623.4033 3449.5344 -3622.9512 3450.1143 -3623.1423 3450.4951 C-3622.6711 3450.2822 -3622.4519 3450.4912 -3622.1785 3450.9238 C-3622.3042 3451.2014 L-3622.3232 3451.0576 -3622.6191 3451.0491 -3622.7063 3450.9104 C-3622.7825 3451.4771 L-3622.7473 3450.8496 -3623.2207 3450.3716 -3623.5928 3450.6062 C-3623.2168 3451.0615 -3623.3184 3451.0376 -3623.2161 3451.752 C-3623.7393 3452.4292 -3623.8064 3451.0867 -3624.3928 3451.8035 C-3624.3489 3451.6016 -3623.8369 3451.4512 -3624.2793 3451.2979 C-3624.6455 3451.2703 -3624.5967 3451.7593 -3624.8423 3451.915 C-3624.5657 3451.3928 -3624.6367 3451.0044 -3624.3369 3450.3843 C-3623.6863 3450.3184 -3624.0745 3450.3911 -3623.4385 3450.1631 C-3623.9768 3449.7212 L-3623.4255 3449.6353 -3623.5759 3449.123 -3623.5305 3448.9224 C-3624.4719 3448.3911 -3624.24 3449.7168 -3624.8457 3449.5796 C-3625.1377 3449.9382 -3624.2783 3449.6553 -3624.7351 3450.0303 C-3625.3015 3449.9539 -3624.8643 3450.3716 -3625.5 3450.5974 C-3625.3936 3450.3584 L-3625.5879 3450.0479 -3625.78 3450.4307 -3626.0049 3450.4827 C-3626.2522 3450.6416 -3625.7249 3452.2998 -3626.7417 3452.3352 C-3626.6919 3452.1895 -3626.6736 3452.0967 -3626.6736 3452.0352 C-3625.6816 3447.6455 L-3626.7119 3447.6563 -3627.8992 3447.5344 -3629.0923 3447.2393 C-3629.3733 3446.3806 -3628.2407 3446.5313 -3628.3137 3446.1455 C-3627.7695 3446.321 L-3627.8 3446.6851 -3628.9097 3446.4336 -3628.4182 3447.0767 C-3627.4573 3446.8142 -3627.0212 3447.2334 -3626.1096 3446.4827 C-3626.3928 3445.623 -3627.3103 3446.6353 -3627.9033 3445.9712 C-3627.6543 3446.0264 -3627.4441 3445.9326 -3627.24 3445.8096 C-3627.7969 3445.6995 -3628.3928 3445.5811 -3629.0264 3445.4482 C-3629.1687 3445.6563 L-3628.7417 3445.752 -3628.4463 3445.8264 -3628.4082 3445.8574 C-3628.9744 3445.7822 -3629.4519 3446.2583 -3629.4895 3446.8875 C-3629.3889 3446.9104 L-3629.5935 3447.1062 L-3629.7263 3447.0664 -3629.8591 3447.0264 -3629.9912 3446.9856 Cf-3666.6936 3446.8367 m-3666.6592 3446.7764 -3666.6321 3446.7056 -3666.6121 3446.6184 c-3666.6328 3446.71 -3666.6096 3446.7695 -3666.6936 3446.8367 Cf0 D-3618.9033 3444.875 m-3619.6584 3444.7832 -3620.4199 3444.6118 -3621.1455 3444.5352 C-3619.8359 3445.7791 -3618.9153 3446.7207 -3621.1008 3446.6963 C-3621.2439 3446.7854 L-3620.9583 3446.9382 -3620.4656 3446.957 -3620.0022 3446.8672 C-3619.6272 3446.4263 -3618.4172 3444.8064 -3618.4304 3444.6631 C-3618.5632 3444.3142 -3618.7568 3444.6951 -3618.9983 3444.5886 C-3618.9033 3444.875 Lf-3618.3665 3446.9583 m-3617.9385 3447.0967 -3618.0359 3446.821 -3617.9695 3446.5732 C-3618.1201 3446.6052 -3618.2705 3446.6375 -3618.4192 3446.667 C-3618.3623 3446.7295 -3618.3342 3446.8176 -3618.3665 3446.9583 Cf1 D-3617.9951 3446.3252 m-3618.0432 3446.3184 -3618.0842 3446.3076 -3618.1057 3446.2744 C-3617.9951 3446.3252 Lf0 D-3626.3191 3446.0103 m-3626.3 3446.0044 -3626.2932 3445.999 -3626.2751 3445.9951 C-3626.3762 3445.9751 -3626.4775 3445.957 -3626.5833 3445.9375 C-3626.5422 3445.9771 -3626.4641 3446.0078 -3626.3191 3446.0103 Cf-3625.4504 3446.6184 m-3625.3489 3446.1638 L-3625.4431 3446.1475 -3625.5393 3446.1294 -3625.6377 3446.1118 C-3625.6052 3446.3176 -3625.5713 3446.4968 -3625.4504 3446.6184 Cf-3622.6584 3448.1118 m-3622.4824 3447.5664 -3621.8928 3447.5422 -3621.8567 3446.9126 C-3621.8191 3446.7515 -3621.9431 3446.6895 -3622.0823 3446.6375 C-3622.2375 3446.623 -3622.4033 3446.6055 -3622.5791 3446.5854 C-3622.5852 3446.6768 -3622.6201 3446.7622 -3622.6785 3446.8442 C-3622.5049 3446.9224 -3622.3889 3447.0791 -3622.4592 3447.4646 C-3622.9055 3446.623 -3622.8591 3448.0654 -3623.3416 3447.8496 C-3623.4951 3448.2935 -3622.8047 3448.2896 -3622.6584 3448.1118 Cf1 D-3585.5752 3446.4727 m-3585.5615 3446.5264 -3585.5144 3446.668 -3585.4482 3446.8442 C-3585.7881 3447.1553 L-3586.3943 3447.0176 -3586.8799 3446.1143 -3587.4255 3446.8916 C-3587.6809 3446.6963 -3587.8176 3446.2832 -3587.9482 3445.9424 C-3587.8232 3445.9683 -3587.7063 3446.0015 -3587.6089 3446.0535 C-3586.0791 3444.915 -3586.8113 3447.2544 -3585.5752 3446.4727 Cf0 D-3592.5449 3445.3643 m-3592.4824 3445.3252 -3592.46 3445.2227 Y-3593.8145 3446.3774 -3594.9297 3446.7119 -3595.6599 3446.667 C-3595.5183 3447.125 -3594.8633 3447.479 -3594.5522 3447.668 C-3594.8279 3448.1904 L-3595 3447.7803 L-3595.4785 3448.2544 L-3595.3447 3448.6052 -3594.9583 3448.5313 -3594.7 3448.8013 C-3594.6775 3448.7014 -3593.8503 3448.0933 -3593.6191 3447.772 C-3594.28 3447.4119 L-3594.1016 3447.5576 -3593.2249 3447.4375 -3592.8772 3447.3035 C-3592.8704 3447.0422 -3593.4695 3446.6392 -3593.5449 3447.207 C-3593.6162 3446.8184 -3592.9255 3446.8142 -3593.3623 3446.3982 C-3592.8447 3445.9856 -3592.0212 3446.3311 -3591.6392 3446.5222 C-3591.5745 3447.175 L-3591.1553 3447.4287 -3591.2913 3446.3894 -3590.7932 3446.7659 C-3591.4055 3446.8936 -3590.6897 3447.4814 -3591.1768 3447.5303 C-3591.0212 3447.7764 -3591.1736 3448.2192 -3590.6855 3448.1707 C-3590.2793 3447.3076 -3590.1711 3448.7119 -3589.7871 3447.9502 C-3589.5305 3448.2192 -3590.0632 3448.4692 -3589.5583 3448.5854 C-3588.9792 3448.1318 -3589.0127 3447.8064 -3588.9768 3447.1782 C-3589.5183 3447.0022 -3589.5852 3447.9951 -3590.0281 3447.8423 C-3589.1472 3446.7659 L-3589.3096 3446.6143 -3589.4297 3446.5974 -3589.5305 3446.6416 C-3589.3535 3446.5791 -3589.2031 3446.4199 -3589.0745 3446.1995 c-3589.0012 3446.0767 -3588.9336 3445.9712 -3588.8711 3445.8806 C-3589.3704 3445.875 -3589.8137 3445.8599 -3589.8921 3445.5923 C-3589.8232 3445.2876 L-3590 3445.0078 -3590.2881 3445.2271 -3590.4209 3445.4502 C-3590.8679 3445.4827 -3591.3145 3445.9075 -3591.4121 3445.5132 C-3591.2424 3445.2344 L-3591.7922 3445.3223 -3591.8535 3445.3604 -3592.5449 3445.3643 Cf-3610.5625 3444.6707 m-3610.2295 3445.7876 -3609.8623 3446.7744 -3608.3081 3446.5791 C-3608.4304 3446.6563 L-3607.6472 3447.3574 -3606.9033 3445.7295 -3605.9504 3446.5078 C-3606.4128 3446.9287 -3606.3879 3446.8894 -3606.8984 3447.8535 C-3606.4023 3447.5376 L-3606.5398 3448.1455 -3606.0449 3447.8311 -3605.6809 3447.8599 C-3606.0022 3448.583 L-3606.2207 3448.375 -3606.7871 3448.2998 -3606.7705 3448.4646 C-3606.6465 3448.3848 -3607.5183 3447.5522 -3607.9919 3447.7622 C-3607.9431 3448.252 -3606.9431 3448.0535 -3607.3896 3448.8542 C-3606.9961 3448.5176 -3606.9473 3449.0063 -3606.5359 3448.8352 C-3606.9304 3449.1707 -3606.6335 3449.5022 -3606.9272 3449.8599 C-3606.2527 3449.6936 L-3606.2351 3449.856 -3607.2351 3450.0552 -3606.6824 3450.6582 C-3606.4121 3450.4016 -3605.6904 3450.7236 -3605.6775 3450.1963 C-3605.6609 3450.3584 L-3605.1553 3450.4727 -3605.4385 3449.6118 -3604.8176 3449.9126 C-3604.8103 3449.6475 -3604.9287 3449.4639 -3605.1511 3449.5176 C-3605.3391 3449.6353 -3605.3679 3449.999 -3605.7551 3450.0728 C-3605.9287 3449.6592 -3605.2881 3450.1243 -3605.5569 3449.4263 c-3605.6904 3449.0791 -3606.5791 3449.7256 -3606.2959 3448.9424 C-3605.7913 3449.0552 L-3605.7783 3448.5264 -3605.4128 3448.5576 -3605.4231 3448.1318 C-3605.1145 3447.9375 -3604.8232 3448.5313 -3604.5081 3448.0728 C-3604.3772 3447.7312 -3604.6057 3447.0967 -3604.0842 3447.373 C-3603.6768 3448.1543 -3602.4761 3448.0022 -3602.0264 3447.8894 C-3601.6328 3447.5535 L-3601.6663 3447.2295 -3602.3848 3447.5974 -3602.1321 3447.1768 C-3601.5183 3447.0491 L-3601.5657 3447.252 L-3601.3623 3447.2979 -3601.1543 3447.0796 -3600.9688 3446.9639 C-3601.1599 3447.3442 -3601.6023 3447.1907 -3601.5144 3447.7412 C-3601.2263 3447.8496 -3601.1824 3448.0535 -3600.9172 3447.9482 C-3600.9751 3447.9871 -3601.0249 3448.041 -3601.0176 3448.1184 C-3600.4343 3448.356 -3600.4543 3447.5022 -3600.3081 3447.3232 c-3599.7217 3446.6084 -3600.8992 3446.6592 -3600.8242 3446.0933 C-3599.1121 3445.791 L-3599.2583 3445.9692 -3599.4055 3446.1475 -3599.3503 3446.373 C-3598.9304 3446.6272 -3599.3408 3446.7998 -3598.7512 3446.7734 C-3598.7932 3446.0215 -3598.0088 3446.3047 -3597.5923 3445.8699 C-3597.3977 3446.1782 -3597.3577 3446.2393 -3597.7832 3446.249 C-3597.7344 3446.7371 -3597.1631 3446.5491 -3596.96 3446.5942 C-3596.8423 3446.4727 -3596.6416 3446.4019 -3596.5144 3446.2935 C-3596.6848 3446.0491 -3596.6121 3445.7432 -3596.2432 3445.5352 C-3596.2217 3445.4336 L-3596.8264 3445.2998 -3597.7664 3444.7659 -3598.1455 3445.2659 C-3598.0383 3445.0244 L-3598.7383 3444.6016 -3599.5615 3445.9016 -3599.8843 3444.979 C-3599.8545 3444.6143 -3600.0249 3444.8955 -3600.0127 3444.3672 C-3600.5281 3444.7803 L-3600.4209 3444.541 L-3601.2976 3444.6592 L-3601.2744 3444.5615 L-3601.6912 3445.0391 -3602.0176 3445.4287 -3602.2783 3445.7471 C-3602.2793 3445.9771 -3602.2522 3446.0479 -3602.3911 3446.2173 C-3602.5305 3446.3311 -3602.6362 3446.3486 -3602.7305 3446.3184 C-3602.7312 3446.3184 -3602.7312 3446.3184 -3602.7312 3446.321 C-3602.7312 3446.3184 -3602.7312 3446.3184 Y-3602.9463 3446.2515 -3603.0896 3445.9207 -3603.3545 3445.7854 C-3602.5393 3445.7295 L-3602.4729 3445.3384 -3602.5422 3444.9336 -3602.9417 3444.6592 C-3602.7783 3444.6455 -3602.71 3444.3408 -3602.9121 3444.2959 C-3602.9343 3444.3975 -3603.4463 3444.5454 -3603.2512 3444.856 C-3604.0256 3444.999 -3605.2793 3443.9736 -3606.4551 3444.7158 C-3605.6104 3444.2695 -3607.1321 3444.1924 -3606.1943 3444.0313 C-3606.8489 3443.4072 -3606.7576 3444.6475 -3607.4248 3444.5491 C-3607.4817 3444.3252 -3607.0615 3444.5791 -3606.9082 3444.1353 C-3608.0176 3443.8853 -3608.78 3445.1455 -3609.8533 3444.9558 C-3609.8992 3444.4688 L-3610.1023 3444.5313 -3610.3279 3444.6008 -3610.5625 3444.6707 Cf-3612.6855 3445.2783 m-3612.8921 3445.333 -3613.1016 3445.3894 -3613.3145 3445.4463 C-3613.2937 3445.4539 -3613.2744 3445.4539 -3613.2527 3445.46 C-3613.8733 3445.8535 L-3613.4919 3446.0435 -3613.2407 3446.5791 -3613.7744 3446.8286 C-3613.7295 3446.6272 -3613.8855 3446.3799 -3613.7 3446.2622 C-3614.0576 3445.9692 -3614.8423 3445.6863 -3614.6377 3446.4224 C-3613.9504 3445.7271 -3614.4775 3447.3604 -3613.9375 3446.8442 C-3614.2273 3447.3232 -3614.5144 3447.1079 -3614.7881 3447.3223 C-3614.5032 3446.9207 -3614.8545 3446.4126 -3615.2825 3446.2212 C-3615.4688 3446.3398 -3615.9729 3446.2256 -3616.2825 3446.4207 C-3616.1721 3446.8711 -3616.4417 3447.1287 -3615.9373 3447.2424 C-3616.1223 3447.3604 -3616.4087 3447.4539 -3616.7295 3447.2227 C-3616.6023 3447.1455 -3616.3799 3447.0896 -3616.3953 3446.9272 C-3616.6023 3446.5127 -3616.8447 3446.5313 -3616.9785 3446.3542 C-3617.0852 3446.3799 -3617.1929 3446.4019 -3617.2976 3446.4263 C-3617.2664 3446.4646 -3617.2393 3446.5166 -3617.22 3446.5811 C-3617.5745 3446.9783 L-3617.1023 3446.7659 -3617.3562 3447.1863 -3617.3623 3447.4502 c-3617.3496 3446.9224 -3617.6663 3447.3806 -3617.8279 3447.3982 C-3617.4768 3447.9558 L-3617.6465 3448.2344 -3618.0759 3447.5535 -3617.9873 3448.1052 C-3617.2424 3448.3264 -3616.9561 3448.2312 -3616.2825 3448.0654 C-3616.5559 3447.6328 L-3615.7959 3447.3267 -3616.0872 3448.375 -3615.2344 3448.3542 C-3614.8799 3447.9592 -3613.9519 3448.3267 -3613.9343 3447.5352 C-3614.0413 3447.7764 -3613.4033 3448.2393 -3613.1111 3447.8806 C-3612.7881 3447.1572 -3611.8113 3447.0596 -3612.1072 3446.7295 C-3612.3711 3446.7207 -3612.7263 3447.1184 -3612.9385 3446.6475 C-3612.4265 3446.4968 L-3612.7625 3446.1016 L-3612.5889 3446.2432 -3612.6057 3445.8584 -3612.6855 3445.2783 Cf1 D-3624.1455 3440.8384 m-3624.1511 3440.8352 -3624.1584 3440.833 -3624.1653 3440.8286 C-3624.1577 3440.8311 -3624.1504 3440.8311 -3624.1433 3440.8311 C-3624.1455 3440.8384 Lf*U0 D-3577.9968 3444.8311 m-3577.8496 3444.6504 -3577.4856 3444.6807 -3577.5569 3444.2935 C-3577.5481 3444.7192 -3578.2073 3444.3584 -3577.9968 3444.8311 Cf-3577.5615 3445.248 m-3577.5359 3445.1462 -3577.5537 3444.9827 -3577.3904 3444.9683 C-3577.8401 3445.0767 L-3577.5615 3445.248 Lf-3577.1052 3448.1592 m-3576.8733 3447.8423 -3576.7263 3447.6631 -3576.3623 3447.6919 C-3576.2256 3448.7312 -3576.9583 3447.9824 -3577.1233 3448.9512 C-3576.4561 3449.0491 -3576.2512 3448.1416 -3575.7024 3448.0535 C-3575.9744 3447.6199 -3577.0852 3447.3699 -3577.1052 3448.1592 Cf-3577.4016 3449.4736 m-3577.0305 3449.2393 L-3577.0671 3449.1782 L-3577.4385 3449.4126 L-3577.4016 3449.4736 Lf-3585.4385 3440.4424 m-3585.4719 3440.1184 -3585.7031 3440.4382 -3585.8271 3440.5166 C-3585.7263 3440.5376 -3585.5852 3440.623 -3585.4385 3440.4424 Cf-3658.3503 3440.1052 m-3661.1809 3440.4182 L-3660.3665 3440.3367 -3659.6145 3440.2959 -3658.3503 3440.1052 Cf-3594.8313 3442.5664 m-3594.0713 3442.2603 -3593.7336 3441.6995 -3592.9592 3441.5576 C-3593.9775 3440.9031 -3594.3042 3442.5796 -3595.1592 3441.9092 C-3594.8313 3442.5664 Lf-3594.5632 3439.9751 m-3594.4373 3440.5867 -3595.1497 3440.6919 -3595.0393 3441.1406 C-3594.5271 3440.9912 -3594.8008 3440.5576 -3594.3359 3440.6104 C-3594.5632 3439.9751 Lf-3591.1191 3450.0886 m-3591.3496 3450.4072 L-3591.1641 3450.291 L-3591.1191 3450.0886 Lf-3598.0271 3440.5176 m-3597.9431 3440.3799 L-3598.3242 3440.1863 L-3598.0271 3440.5176 Lf-3597.8591 3440.2393 m-3597.9431 3440.3799 L-3597.9431 3440.3799 L-3597.8591 3440.2393 Lf-3591.4153 3451.4016 m-3591.0728 3451.5313 L-3590.9033 3451.2515 L-3591.4153 3451.4016 Lf-3594.4385 3448.1187 m-3594.1321 3447.9224 L-3594.1929 3447.96 -3594.6121 3447.7092 -3594.4385 3448.1187 Cf-3600.3545 3440.2583 m-3600.7273 3440.4932 L-3600.6892 3440.5535 L-3600.3176 3440.3184 L-3600.3545 3440.2583 Lf-3596.8369 3449.8054 m-3596.6252 3450.2759 -3597.4482 3449.9326 -3597.0127 3450.3486 C-3596.6252 3450.2759 -3596.7825 3450.0303 -3596.8369 3449.8054 Cf-3601.3352 3446.6155 m-3601.3855 3446.6155 -3601.4385 3446.6328 -3601.4895 3446.6851 C-3601.4287 3446.665 -3601.3777 3446.6406 -3601.3352 3446.6155 Cf-3601.3352 3446.6155 m-3601.1729 3446.6155 -3601.0105 3446.7959 -3600.8992 3446.6592 C-3601.1016 3446.4473 -3601.1753 3446.5264 -3601.3352 3446.6155 Cf-3603.1953 3446.7256 m-3603.0481 3446.7593 L-3603.1985 3446.9912 -3603.1272 3446.957 -3602.9929 3446.7703 C-3602.8369 3446.7544 -3602.8457 3446.6055 -3602.8271 3446.5039 C-3602.7959 3446.4473 -3602.7649 3446.3853 -3602.7312 3446.321 C-3602.7793 3446.3806 -3602.8225 3446.4404 -3602.8591 3446.4912 C-3603.1008 3446.4871 -3603.2483 3446.5103 -3603.1953 3446.7256 Cf-3610.1052 3438.7998 m-3609.5615 3438.9751 -3609.4209 3439.0596 -3609.4504 3439.4248 C-3608.9343 3439.541 -3609.0144 3438.9126 -3608.7031 3438.7659 C-3609.2871 3438.8367 -3609.4065 3438.668 -3610.1052 3438.7998 Cf-3608.7031 3438.7659 m-3608.6377 3438.7593 -3608.5752 3438.7515 -3608.4993 3438.7371 C-3608.5842 3438.7256 -3608.6472 3438.7412 -3608.7031 3438.7659 Cf-3601.0212 3450.7173 m-3601.3591 3451.2759 L-3601.2351 3451.1982 L-3601.0212 3450.7173 Lf-3610.9121 3438.6155 m-3610.8113 3438.6392 -3610.6497 3438.623 -3610.5703 3438.748 C-3610.5413 3438.3806 -3611.0127 3438.5933 -3610.9121 3438.6155 cf-3608.8152 3445.7744 m-3608.76 3445.998 -3608.4121 3445.8643 -3608.2705 3445.9502 C-3608.4736 3445.9031 -3608.6392 3445.23 -3608.8152 3445.7744 Cf-3612.4719 3440.1216 m-3612.3711 3440.1455 -3612.2161 3440.3911 -3612.2832 3440.6936 C-3612.1367 3440.5144 -3611.9385 3439.8699 -3612.4719 3440.1216 Cf-3609.8088 3445.7092 m-3609.7312 3445.833 L-3609.3591 3445.5974 L-3609.8088 3445.7092 Lf-3608.4817 3451.1008 m-3608.0632 3450.665 -3609.1455 3450.0491 -3608.4248 3449.6807 C-3609.3545 3449.2246 -3608.3535 3450.2979 -3609.0393 3450.2271 C-3608.6377 3450.3743 -3608.4409 3450.925 -3608.4817 3451.1008 Cf-3609.0393 3450.2271 m-3609.0977 3450.2039 -3609.1609 3450.1907 -3609.2295 3450.1895 C-3609.1536 3450.21 -3609.0923 3450.2212 -3609.0393 3450.2271 Cf-3614.9287 3447.4692 m-3614.8679 3447.4238 -3614.8264 3447.3743 -3614.7881 3447.3223 C-3614.8359 3447.3584 -3614.8816 3447.4031 -3614.9287 3447.4692 Cf-3611.2295 3450.5867 m-3610.6023 3449.9326 L-3611.0212 3450.3672 -3612.0752 3450.3411 -3612.0095 3450.9927 C-3611.6682 3451.125 -3611.2576 3450.9512 -3611.0889 3450.6707 C-3611.2295 3450.5867 Lf-3618.4287 3438.7764 m-3618.1577 3438.5176 L-3618.4961 3438.4424 L-3618.3992 3438.54 -3618.5745 3439.0176 -3618.4287 3438.7764 Cf-3618.5615 3438.4287 m-3618.4961 3438.4424 L-3618.5105 3438.4263 -3618.5313 3438.4199 -3618.5615 3438.4287 Cf-3613.7424 3447.1543 m-3613.5398 3447.1995 -3613.3777 3447.1814 -3613.1929 3447.0664 C-3613.2695 3446.9424 -3613.7744 3446.8286 -3613.7424 3447.1543 Cf-3620.3369 3439.7236 m-3619.8896 3439.6118 L-3620.3777 3439.6592 L-3620.3369 3439.7236 Lf-3622.4241 3438.6155 m-3622.5012 3438.4932 L-3622.8721 3438.7271 L-3622.7937 3438.8496 L-3622.4241 3438.6155 Lf-3619.6943 3451.4326 m-3619.3911 3451.5022 -3619.1543 3450.917 -3619.2336 3450.7935 C-3619.8215 3450.8184 L-3619.6721 3451.3311 -3619.6584 3450.8035 -3619.3176 3450.9336 C-3619.6943 3451.4326 Lf-3637.9153 3439.5732 m-3637.7839 3439.2312 -3637.1409 3439.4292 -3637.1072 3439.7544 C-3637.1936 3439.8955 -3637.5422 3440.0303 -3637.3232 3440.2371 C-3636.8145 3439.3975 L-3636.1377 3439.9207 -3637.3289 3440.5015 -3637.6631 3440.7979 C-3636.9736 3440.9063 -3636.7693 3440.3542 -3636.0359 3440.3574 C-3636.2522 3440.2822 -3636.3889 3440.0728 -3636.5032 3439.8928 C-3636.5281 3439.3013 -3635.8447 3439.5632 -3635.3562 3439.5166 C-3635.6672 3439.26 -3635.4873 3439.0435 -3635.2607 3438.8115 C-3635.22 3438.7935 -3635.1929 3438.7593 -3635.1736 3438.7192 C-3635.1472 3438.6919 -3635.1223 3438.665 -3635.0967 3438.6367 C-3635.1553 3438.6375 L-3635.1511 3438.571 -3635.1641 3438.4912 -3635.2063 3438.3806 C-3635.6162 3438.5535 -3635.9297 3438.0596 -3636.1936 3438.0522 C-3635.9329 3439.0132 -3637.0923 3438.2744 -3637.4241 3438.5703 C-3637.8071 3438.665 L-3637.9504 3438.667 L-3637.9792 3438.5615 -3637.9385 3438.4292 -3637.72 3438.2393 C-3637.9023 3438.4287 -3638.5105 3438.3623 -3638.4543 3438.6707 C-3639.8423 3438.6848 L-3639.8855 3438.6455 -3639.9287 3438.5967 -3639.9607 3438.5264 C-3640.0088 3438.5879 -3640.0168 3438.6375 -3640.0105 3438.6863 C-3646.0576 3438.748 L-3645.7593 3438.8232 -3645.5012 3439.0435 -3645.1936 3439.1494 C-3645.6553 3439.7876 -3644.6892 3439.2646 -3644.8247 3439.8672 C-3645.0322 3440.0867 -3645.3359 3440.0176 -3645.5168 3439.8716 C-3645.5842 3440.1763 -3645.3264 3440.4463 -3645.3562 3440.8096 C-3644.5935 3441.1936 -3644.4768 3439.7344 -3643.7312 3439.957 C-3643.7607 3440.3223 -3643.9912 3440.6416 -3643.5032 3440.5923 C-3643.6272 3440.6707 L-3642.8457 3440.2622 -3643.0183 3441.4968 -3642.5264 3440.4951 C-3642.5393 3441.0222 L-3642.1848 3440.625 -3641.4951 3440.6216 -3641.1064 3440.5491 C-3641.1296 3440.6504 L-3640.0393 3440.0479 -3640.5176 3440.5222 -3639.2932 3440.2703 C-3639.8567 3440.8853 L-3639.4343 3441.1392 -3639.3391 3440.4712 -3639.0359 3440.54 C-3639.0576 3440.6416 -3638.9873 3441.0264 -3639.2737 3441.123 C-3637.7881 3440.1851 L-3637.4336 3439.7876 -3637.8601 3439.7979 -3637.9153 3439.5732 Cf-3636.0359 3440.3574 m-3635.9573 3440.3853 -3635.8679 3440.3975 -3635.7625 3440.3774 C-3635.8643 3440.3604 -3635.9519 3440.3574 -3636.0359 3440.3574 Cf-3646.4824 3438.752 m-3646.0576 3438.748 L-3646.1892 3438.7158 -3646.3264 3438.7056 -3646.4824 3438.752 Cf-3633.9065 3439.2056 m-3634.1641 3438.9336 -3633.7136 3438.8247 -3633.6687 3438.6216 C-3634.5913 3438.6318 L-3634.5872 3438.8352 -3634.6785 3439.0623 -3634.6599 3439.248 C-3633.9065 3439.2056 Lf-3634.8584 3438.249 m-3634.8896 3438.3894 -3634.9873 3438.5166 -3635.0967 3438.6367 C-3634.5913 3438.6318 L-3634.5945 3438.479 -3634.6511 3438.3408 -3634.8584 3438.249 Cf-3634.7607 3449.0896 m-3634.9241 3449.1079 L-3635.1711 3449.2646 L-3634.7607 3449.0896 Lf-3637.3152 3448.1963 m-3637.1201 3448.5044 -3636.75 3448.2703 -3636.6262 3448.1924 C-3637.0527 3448.2014 -3636.8679 3448.0854 -3637.3152 3448.1963 Cf-3636.7881 3451.4968 m-3637.1992 3451.6707 L-3637.1609 3451.7312 L-3636.7881 3451.4968 Lf-3649.6223 3440.8279 m-3649.6897 3440.8398 -3649.7551 3440.8486 -3649.8232 3440.8623 C-3649.7312 3440.8643 -3649.6711 3440.8496 -3649.6223 3440.8279 Cf-3646.0945 3440.3252 m-3647.0752 3439.7334 -3645.4519 3439.833 -3645.76 3439.0752 C-3646.2937 3439.3264 L-3646.2483 3439.123 L-3646.8992 3439.1895 L-3646.7656 3439.5376 -3646.6653 3439.5591 -3646.6943 3439.9248 C-3647.5632 3439.7822 -3646.9683 3439.4912 -3647.6057 3439.0303 C-3648.5769 3439.0967 L-3648.4983 3438.9871 L-3648.5801 3438.9951 -3648.6162 3439.041 -3648.6443 3439.1008 C-3651.9172 3439.3279 L-3652.5127 3439.6184 -3651.5879 3439.9856 -3652.0271 3440.5222 C-3651.3369 3440.521 -3650.3113 3440.9104 -3650.2527 3440.1814 C-3650.2759 3440.2822 -3650.3215 3440.4827 -3650.1816 3440.5686 C-3649.7825 3439.9692 L-3650.1631 3439.7783 L-3649.7617 3439.1807 -3648.4656 3439.3135 -3648.2312 3439.6848 C-3648.9683 3439.8887 -3648.5984 3440.6084 -3649.6252 3440.2173 C-3649.5791 3440.4019 -3649.3911 3440.7271 -3649.6223 3440.8279 C-3648.4192 3440.6155 -3647.3408 3440.9482 -3646.0945 3440.3252 Cf-3658.1631 3440.6763 m-3658.1536 3440.6104 L-3658.1753 3440.6455 -3658.1824 3440.6719 -3658.1631 3440.6763 Cf-3657.7593 3440.7659 m-3657.1729 3440.0522 L-3658.0872 3440.1096 L-3658.1536 3440.6104 L-3658.0728 3440.4827 -3657.7522 3440.2295 -3657.6279 3440.425 C-3657.7593 3440.7659 Lf-3656.4919 3439.6199 m-3656.9641 3439.833 -3656.9385 3440.4224 -3656.6809 3440.6919 C-3657.1145 3440.9646 -3656.9097 3440.0576 -3657.2083 3440.6807 C-3657.1985 3441.1062 -3656.6641 3440.856 -3656.5413 3440.7783 C-3656.4919 3439.6199 Lf-3653.0081 3439.9307 m-3653.1409 3440.175 L-3652.8137 3440.2393 L-3653.0081 3439.9307 Lf-3653.1409 3440.175 m-3653.4656 3440.1096 L-3653.4431 3440.291 -3653.4209 3440.4683 -3653.3679 3440.5923 C-3653.1409 3440.175 Lf-3654.3176 3439.9395 m-3654.4551 3439.8955 -3654.6072 3439.8623 -3654.7922 3439.8462 C-3654.3176 3439.9395 Lf-3653.9463 3440.0896 m-3653.9573 3440.0127 L-3654.3176 3439.9395 L-3654.1848 3439.9856 -3654.0657 3440.0352 -3653.9463 3440.0896 Cf-3653.4656 3440.1096 m-3653.5183 3439.6963 -3653.5801 3439.2622 -3654.0496 3439.3774 C-3653.9573 3440.0127 L-3653.4656 3440.1096 Lf-3639.7783 3450.8743 m-3640.1497 3451.1079 L-3640.1104 3451.1719 L-3639.7393 3450.9375 L-3639.7783 3450.8743 Lf-3641.9209 3450.4968 m-3642.0127 3450.5686 -3642.0823 3450.6455 -3642.1455 3450.7236 C-3642.0488 3450.6782 -3641.9719 3450.6096 -3641.9209 3450.4968 Cf-3643.5137 3453.3184 m-3643.9504 3452.9031 -3642.9111 3452.7695 -3643.72 3452.5854 C-3643.7913 3452.1982 -3643.4121 3451.6992 -3643.0313 3451.8916 C-3643.0615 3452.2559 -3643.4023 3452.125 -3643.1682 3452.4968 C-3642.9153 3452.0752 -3642.8191 3452.3623 -3642.9072 3451.8135 C-3642.4817 3451.4712 -3642.4343 3451.0811 -3642.1455 3450.7236 C-3642.6599 3450.9646 -3643.74 3450.4019 -3644.3928 3451.1062 C-3644.7527 3451.7659 -3644.5344 3452.667 -3644.5359 3453.6199 C-3644.4817 3453.8442 -3643.5488 3453.9502 -3643.5137 3453.3184 Cf-3642.8264 3454.2703 m-3642.6243 3454.3176 -3642.5625 3454.2791 -3642.4385 3454.1995 C-3642.4719 3453.8743 -3642.6631 3454.2559 -3642.8264 3454.2703 Cf-3647.4719 3447.0942 m-3647.5105 3447.2295 -3647.8762 3447.3975 -3647.7976 3447.6318 C-3647.2432 3447.46 L-3647.3733 3447.4382 -3647.4192 3447.272 -3647.4719 3447.0942 Cf-3647 3447.3875 m-3647.2432 3447.46 L-3647.1824 3447.4727 -3647.1072 3447.4539 -3647 3447.3875 Cf-3647.4983 3447.0093 m-3647.4895 3447.0376 -3647.4817 3447.0664 -3647.4719 3447.0942 C-3647.4641 3447.0654 -3647.4656 3447.0352 -3647.4983 3447.0093 Cf-3655.6631 3439.7014 m-3655.6553 3439.4404 -3655.9023 3439.5967 -3656.0264 3439.6743 C-3655.9255 3439.6963 -3655.7839 3439.7822 -3655.6631 3439.7014 Cf-3664.9641 3440.7312 m-3665.1824 3440.5222 L-3665.1052 3440.6475 -3665.0657 3440.7092 -3664.9641 3440.7312 Cf-3668.3279 3447.876 m-3668.3342 3447.9272 -3668.3503 3447.9692 -3668.3721 3448.0093 C-3668.3503 3447.9771 -3668.3352 3447.9336 -3668.3279 3447.876 cf-3668.3721 3448.0093 m-3668.5212 3448.2271 -3668.9817 3447.8887 -3669.1472 3448.2192 C-3669.1262 3448.1187 L-3669.4343 3448.3142 L-3669.1455 3448.2854 -3668.5393 3448.3267 -3668.3721 3448.0093 CfUUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 40)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7540.4521 7325.5977 m-7148.6909 7325.5977 L-7148.6909 7233.9077 L-7540.4521 7233.9077 L-7540.4521 7325.5977 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-7153.3535 7267.9199 m-7155.1113 7267.9199 -7274.7817 7270.0918 -7350.6519 7271.4717 C-7371.4663 7270.5352 -7392.2529 7269.2222 -7413.0547 7267.5024 C-7415.5327 7267.1509 -7418.3472 7266.7949 -7419.8584 7266.6006 c-7420.7114 7266.4863 -7421.5732 7266.3853 -7422.4375 7266.2935 C-7421.9829 7266.0605 -7421.54 7265.7998 -7421.1167 7265.4941 C-7420.25 7264.7324 -7419.3955 7263.8325 -7418.8735 7262.4541 C-7418.8979 7262.1685 -7418.6997 7261.8188 -7418.6523 7261.5293 c-7418.5532 7260.9116 -7418.6382 7260.1631 -7418.7319 7259.627 c-7418.7939 7259.2725 -7418.9551 7259.0254 -7419.0259 7258.7314 c-7419.0488 7258.6353 -7418.9785 7258.5757 -7419.0059 7258.5024 c-7419.1396 7258.1484 -7419.5313 7257.5518 -7419.7539 7257.2261 c-7419.8579 7257.0757 -7419.9873 7256.9775 -7420.1035 7256.8188 c-7420.1196 7256.7964 -7420.0669 7256.7349 -7420.0928 7256.7061 c-7420.6484 7256.0664 -7421.4312 7255.5415 -7422.3955 7255.0757 c-7422.4546 7255.0508 -7422.4639 7255.1445 -7422.5366 7255.0869 C-7422.8213 7254.9653 -7423.1143 7254.8535 -7423.3945 7254.791 c-7424.8965 7254.4629 -7426.7163 7254.8477 -7427.8027 7255.6328 c-7428.7998 7256.3555 -7429.5308 7257.8623 -7429.4678 7259.0742 c-7429.4126 7260.1094 -7428.6665 7261.2573 -7427.4458 7262.0352 c-7426.3604 7262.7295 -7425.0479 7262.9829 -7424.2373 7262.3589 C-7424.6499 7262.2295 -7424.9688 7262.0332 -7425.0811 7261.752 C-7425.0908 7261.4766 -7425.0967 7261.1992 -7424.8755 7260.8589 C-7424.4517 7260.4863 -7423.7925 7260.2485 -7423.1235 7260.7158 c-7422.1846 7261.3701 -7422.0728 7262.7886 -7423.0342 7263.5356 C-7423.3086 7263.6406 -7423.5586 7263.8789 -7423.75 7263.9829 c-7424.1826 7264.2192 -7424.5586 7264.3853 -7424.9751 7264.543 c-7426.0938 7264.959 -7427.4839 7265.4185 -7428.5327 7265.5977 c-7428.7114 7265.6284 -7428.8989 7265.6475 -7429.0806 7265.6733 C-7432.4038 7265.3789 -7435.54 7265.0693 -7438.1416 7264.5264 C-7438.1138 7264.5229 -7438.0908 7264.5244 -7438.0586 7264.5205 c-7437.2378 7264.4199 -7436.6309 7264.2524 -7435.9043 7264.0127 c-7435.6328 7263.9238 -7435.3184 7263.9116 -7435.0825 7263.8149 c-7434.9985 7263.7856 -7434.9409 7263.6597 -7434.8472 7263.6133 c-7434.5371 7263.4604 -7434.2129 7263.3662 -7433.8999 7263.1597 c-7432.9097 7262.5054 -7431.8774 7261.3359 -7431.7617 7259.8677 C-7431.9463 7258.8262 -7432.3643 7257.8525 -7433.5938 7257.0781 c-7433.7217 7256.9951 -7433.8662 7256.96 -7433.9995 7256.8828 C-7435.8516 7256.2168 -7437.5913 7257.3135 -7437.8066 7259.2061 C-7437.7119 7259.375 -7437.6499 7259.5527 -7437.6616 7259.752 C-7437.2939 7260.4492 -7435.9033 7261.0557 -7435.3057 7260.6143 C-7435.6133 7260.5566 -7435.7495 7260.5254 -7435.8638 7260.2637 C-7435.8892 7259.6069 -7435.0679 7259.4336 -7434.6528 7260.0176 C-7434.4966 7260.7021 -7434.7676 7261.2524 -7435.2939 7261.8101 c-7435.5068 7262.0352 -7435.7837 7262.1685 -7436.0566 7262.3545 c-7436.4199 7262.6016 -7436.7495 7262.8828 -7437.1118 7263.0332 c-7437.4385 7263.1685 -7437.8115 7263.2017 -7438.1445 7263.2886 c-7438.2349 7263.3101 -7438.2969 7263.3613 -7438.3706 7263.3789 c-7438.6274 7263.4336 -7438.8359 7263.5142 -7439.0879 7263.5469 c-7439.4209 7263.5854 -7439.7739 7263.5488 -7440.1528 7263.5854 c-7440.3398 7263.6055 -7440.5195 7263.6943 -7440.7144 7263.7109 c-7440.8413 7263.7207 -7440.9722 7263.7207 -7441.1025 7263.7222 C-7443.8135 7262.8213 -7446.0957 7261.6094 -7447.9814 7259.2783 c-7451.6704 7254.7222 -7446.0415 7250.5566 -7444.9902 7254.5977 C-7446.9668 7256.0352 -7450.5874 7259.1196 -7442.8892 7259.2471 C-7434.6045 7257.7549 -7441.6982 7242.4917 -7451.6509 7246.5576 c-7460.0151 7249.9741 -7456.1328 7258.6382 -7450.4658 7262.2935 c-7441.9902 7267.7559 -7432.5376 7268.4917 -7422.7012 7268.5845 C-7433.3862 7273.0488 -7447.9243 7270.4028 -7455.9897 7262.3809 c-7460.1011 7258.2935 -7464.0435 7251.9912 -7462.8193 7245.8896 c-7461.5742 7239.6816 -7455.1616 7245.4238 -7460.0957 7245.4424 C-7459.8896 7251.0054 -7446.6387 7244.9648 -7452.9307 7236.8271 c-7458.6011 7229.4917 -7468.5698 7237.5225 -7470.3242 7243.9478 c-7476.0239 7264.8359 -7446.3545 7270.7119 -7432.3813 7271.4238 C-7444.1143 7274.7749 -7460.3892 7272.2734 -7471.5547 7267.7856 c-7475.9663 7266.0093 -7480.9707 7262.8926 -7483.5479 7258.7773 c-7487.4619 7252.5264 -7480.4268 7248.2837 -7479.8955 7250.4028 c-7479.4697 7252.0957 -7485.3765 7252.623 -7480.8267 7255.6992 c-7476.8091 7258.4185 -7473.2759 7252.2095 -7472.4619 7249.0781 c-7468.6782 7234.5317 -7490.0601 7236.4604 -7492.3667 7250.1982 c-7497.5103 7280.8271 -7451.3071 7274.4575 -7435.4902 7273.5928 C-7435.7124 7273.7612 -7435.9331 7273.9189 -7436.1543 7274.082 C-7441.4346 7275.5854 -7446.6416 7277.7861 -7451.46 7280.5469 C-7465.9546 7282.2813 -7478.7495 7271.8901 -7494.5913 7266.6152 c-7503.5635 7263.6284 -7514.0933 7267.9277 -7522.2778 7263.3145 c-7526.6235 7260.8545 -7529.6982 7258.2656 -7531.2959 7253.0518 C-7532.9092 7244.1104 -7523.2979 7242.9717 -7525.1396 7247.6416 C-7526.8428 7247.9688 -7526.1772 7246.834 -7527.3354 7246.8413 C-7531.2861 7250.5479 -7523.0244 7255.7314 -7519.1606 7252.4316 c-7512.4497 7246.7031 -7517.2563 7238.3325 -7524.0864 7236.0557 C-7542.5703 7236.25 -7543 7258.8613 -7537.0474 7271.3589 c-7521.2217 7304.5854 -7487.1445 7292.582 -7459.5376 7285.5479 C-7463.2817 7288.0732 -7465.8975 7291.6421 -7468.5747 7295.2158 c-7473.2197 7301.4165 -7475.6694 7310.8545 -7467.0024 7314.8613 C-7466.1616 7318.9829 -7464.6392 7322.8853 -7460.5669 7324.7695 c-7455.7471 7327 -7450.8457 7324.5581 -7449.5508 7319.4512 C-7449.4766 7316.6729 -7450.1968 7314.8262 -7452.5938 7313.3887 c-7454.1733 7312.4414 -7459.5176 7312.5313 -7456.8574 7315.5342 C-7454.9663 7314.0415 -7455.1323 7316.4863 -7456.0112 7317.6006 C-7458.8823 7317.5693 -7459.5771 7315.4863 -7459.5156 7312.5181 c-7459.5151 7312.4956 -7459.5142 7312.4688 -7459.5146 7312.4429 C-7459.3574 7305.1367 -7458.1343 7299.3237 -7456.0718 7294.7285 C-7456.0713 7294.73 -7456.0708 7294.7314 -7456.0698 7294.7324 c-7455.8242 7295.2158 -7455.4819 7295.5 -7455.2485 7295.8945 c-7455.1729 7296.0229 -7455.2495 7296.1382 -7455.1753 7296.2334 c-7454.8262 7296.6855 -7453.9971 7297.3701 -7453.5313 7297.7397 c-7453.3135 7297.9116 -7453.0835 7297.998 -7452.8477 7298.1729 c-7452.8125 7298.1973 -7452.8613 7298.3101 -7452.8115 7298.3413 c-7451.7256 7299.0176 -7450.3638 7299.4277 -7448.7661 7299.6709 C-7448.6699 7299.6816 -7448.6978 7299.543 -7448.5669 7299.5933 C-7448.1035 7299.6406 -7447.6309 7299.6733 -7447.1982 7299.6382 c-7444.8862 7299.4453 -7442.4316 7298.0845 -7441.2129 7296.4668 c-7440.0942 7294.9854 -7439.7095 7292.4854 -7440.3379 7290.7646 c-7440.8774 7289.2949 -7442.4629 7287.9692 -7444.5684 7287.3901 c-7446.4419 7286.8735 -7448.4492 7287.0845 -7449.3408 7288.3477 C-7448.6875 7288.3535 -7448.1406 7288.4941 -7447.8545 7288.8477 C-7447.7178 7289.2422 -7447.5859 7289.6382 -7447.7539 7290.2261 C-7448.2002 7290.9541 -7449.0469 7291.5894 -7450.2178 7291.2124 c-7451.4604 7290.8135 -7452.2119 7289.5781 -7452.0532 7288.3486 C-7446.7505 7282.2031 -7439.0386 7279.6465 -7430.2539 7279.0527 C-7430.2886 7279.0688 -7430.3218 7279.0796 -7430.3604 7279.0977 c-7431.5015 7279.6064 -7432.3027 7280.1143 -7433.2437 7280.7832 c-7433.5957 7281.0332 -7434.0439 7281.1909 -7434.3428 7281.4316 c-7434.4492 7281.5166 -7434.4766 7281.7222 -7434.5913 7281.8301 c-7434.9707 7282.1895 -7435.3975 7282.4688 -7435.7563 7282.9063 c-7436.8945 7284.2886 -7437.8662 7286.4341 -7437.3809 7288.6016 C-7436.6523 7290.0229 -7435.6162 7291.2437 -7433.4995 7291.8145 c-7433.2788 7291.875 -7433.0542 7291.8623 -7432.8276 7291.9185 C-7429.8613 7292.0527 -7427.8369 7289.7021 -7428.3667 7286.875 C-7428.5781 7286.6733 -7428.7471 7286.4429 -7428.8184 7286.1509 C-7429.6582 7285.3101 -7431.9336 7285.0508 -7432.5996 7285.9517 C-7432.1309 7285.9004 -7431.9199 7285.8848 -7431.6387 7286.2109 C-7431.3105 7287.1475 -7432.4189 7287.7612 -7433.2759 7287.1045 C-7433.8052 7286.1865 -7433.6587 7285.2695 -7433.1479 7284.2314 c-7432.9409 7283.8101 -7432.5991 7283.5 -7432.2881 7283.1104 c-7431.8735 7282.5933 -7431.5239 7282.0415 -7431.0669 7281.6621 c-7430.6563 7281.3232 -7430.1318 7281.1094 -7429.6899 7280.8364 c-7429.5708 7280.7646 -7429.5039 7280.6636 -7429.4043 7280.6069 c-7429.0596 7280.4111 -7428.7935 7280.2031 -7428.4438 7280.0469 c-7427.9819 7279.8413 -7427.4561 7279.7373 -7426.9253 7279.5142 c-7426.6636 7279.4063 -7426.4443 7279.1948 -7426.1709 7279.0854 c-7426.0063 7279.0215 -7425.8311 7278.9688 -7425.6592 7278.9141 C-7424.2695 7278.9185 -7422.8613 7278.9575 -7421.4375 7279.0342 c-7419.7285 7279.0796 -7417.4653 7279.0933 -7415.5728 7279.166 C-7383.4688 7275.6533 -7350.98 7274.73 -7318.4746 7274.2822 C-7245.0664 7275.6152 -7154.8774 7277.2485 -7153.3535 7277.2485 c-7150.7773 7277.2485 -7148.6909 7275.1597 -7148.6909 7272.5845 c-7148.6909 7270.0078 -7150.7773 7267.9199 -7153.3535 7267.9199 cfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -(ush Tool/ Decorative Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Chalk - Scribble)(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Stem)(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Decorative Border)(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -(157 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa(Black)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(CMYK Red)Pc0.038819 0 0.932555 0 1 0.94902 0 Xa(CMYK Yellow)Pc0.827542 0.064729 0.957824 0.002594 0 0.65098 0.317647 Xa(CMYK Green)Pc0.693446 0.140078 0 0 0 0.682353 0.937255 Xa(CMYK Cyan)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(CMYK Blue)Pc0.006653 0.990021 0.005615 0 0.92549 0 0.54902 Xa(CMYK Magenta)Pc0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa(C=15 M=100 Y=90 K=10)Pc0 0.897398 0.84744 0 0.937255 0.254902 0.211765 Xa(C=0 M=90 Y=85 K=0)Pc0 0.79855 0.939544 0.000092 0.945098 0.352941 0.160784 Xa(C=0 M=80 Y=95 K=0)Pc0.000732 0.495003 0.984894 0 0.968627 0.580392 0.117647 Xa(C=0 M=50 Y=100 K=0)Pc0 0.349462 0.845243 0 0.984314 0.690196 0.25098 Xa(C=0 M=35 Y=85 K=0)Pc0.05594 0 0.899687 0 0.976471 0.929412 0.196078 Xa(C=5 M=0 Y=90 K=0)Pc0.197513 0.001373 0.983734 0 0.843137 0.87451 0.137255 Xa(C=20 M=0 Y=100 K=0)Pc0.49723 0.00293 0.989471 0 0.552941 0.776471 0.247059 Xa(C=50 M=0 Y=100 K=0)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(C=75 M=0 Y=100 K=0)Pc0.861662 0.165713 1 0.032532 0 0.580392 0.266667 Xa(C=85 M=10 Y=100 K=10)Pc0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa(C=90 M=30 Y=95 K=30)Pc0.750637 0 0.748928 0 0.168627 0.713726 0.45098 Xa(C=75 M=0 Y=75 K=0)Pc0.788235 0.104707 0.45008 0.000885 0 0.654902 0.615686 Xa(C=80 M=10 Y=45 K=0)Pc0.702144 0.15375 0 0 0.152941 0.666667 0.882353 Xa(C=70 M=15 Y=0 K=0)Pc0.848356 0.500084 0 0 0.109804 0.458824 0.737255 Xa(C=85 M=50 Y=0 K=0)Pc0.993927 0.930846 0.059907 0.003601 0.168627 0.223529 0.564706 Xa(C=100 M=95 Y=5 K=0)Pc1 1 0.301427 0.214023 0.14902 0.133333 0.384314 Xa(C=100 M=100 Y=25 K=25)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(C=75 M=100 Y=0 K=0)Pc0.501945 0.992706 0.014649 0.00116 0.572549 0.152941 0.560784 Xa(C=50 M=100 Y=0 K=0)Pc0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa(C=35 M=100 Y=35 K=10)Pc0.092134 0.99704 0.484413 0.004273 0.854902 0.109804 0.360784 Xa(C=10 M=100 Y=50 K=0)Pc0 0.946166 0.204593 0 0.933333 0.164706 0.482353 Xa(C=0 M=95 Y=20 K=0)Pc0.251163 0.245762 0.398383 0 0.760784 0.709804 0.607843 Xa(C=25 M=25 Y=40 K=0)Pc0.391943 0.442054 0.491554 0.061463 0.607843 0.521569 0.47451 Xa(C=40 M=45 Y=50 K=5)Pc0.514702 0.509239 0.616327 0.227451 0.447059 0.4 0.345098 Xa(C=50 M=50 Y=60 K=25)Pc0.549706 0.600061 0.645899 0.398749 0.34902 0.290196 0.258824 Xa(C=55 M=60 Y=65 K=40)Pc0.233463 0.391485 0.638086 0.01416 0.768627 0.603922 0.423529 Xa(C=25 M=40 Y=65 K=0)Pc0.304051 0.497078 0.750851 0.094057 0.662745 0.486275 0.313726 Xa(C=30 M=50 Y=75 K=10)Pc0.358953 0.60058 0.803098 0.236179 0.545098 0.368627 0.235294 Xa(C=35 M=60 Y=80 K=25)Pc0.392248 0.642969 0.886656 0.354772 0.458824 0.298039 0.160784 Xa(C=40 M=65 Y=90 K=35)Pc0.418647 0.692348 0.974792 0.488502 0.376471 0.223529 0.07451 Xa(C=40 M=70 Y=100 K=50)Pc0.516899 0.701045 0.792386 0.691859 0.235294 0.141176 0.082353 Xa(C=50 M=70 Y=80 K=70)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Super Soft Black Vignette)PcBb2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Green, Yellow, Orange)PcBb0 0 0 0 Bh2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Purple Radial)Pc(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Laguna)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 (AutoCAD Color 2) 0 1 Xk(AutoCAD Color 2)Pc0.702632 0 1 0 0.2 0.8 0 (AutoCAD Color 4) 0 1 Xk(AutoCAD Color 4)Pc0.624353 0.544518 0.534173 0.269383 0.356863 0.356863 0.356863 (AutoCAD Color) 0 1 Xk(AutoCAD Color)Pc0.333227 0.267308 0.272038 0 0.678431 0.678431 0.678431 (AutoCAD Color 1) 0 1 Xk(AutoCAD Color 1)Pc0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa(C=0 M=0 Y=0 K=100)Pc0.677577 0.618402 0.58056 0.456641 0.254902 0.25098 0.258824 Xa(C=0 M=0 Y=0 K=90)Pc0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa(C=0 M=0 Y=0 K=80)Pc0.583215 0.494575 0.46363 0.148043 0.427451 0.431373 0.443137 Xa(C=0 M=0 Y=0 K=70)Pc0.522423 0.426978 0.407874 0.062379 0.501961 0.509804 0.521569 Xa(C=0 M=0 Y=0 K=60)Pc0.450904 0.360815 0.34818 0.01294 0.576471 0.584314 0.596078 Xa(C=0 M=0 Y=0 K=50)Pc0.36173 0.282292 0.271336 0 0.654902 0.662745 0.67451 Xa(C=0 M=0 Y=0 K=40)Pc0.264164 0.199466 0.195499 0 0.737255 0.745098 0.752941 Xa(C=0 M=0 Y=0 K=30)Pc0.169863 0.120485 0.123751 0 0.819608 0.827451 0.831373 Xa(C=0 M=0 Y=0 K=20)Pc0.08426 0.057374 0.057435 0 0.901961 0.905882 0.909804 Xa(C=0 M=0 Y=0 K=10)Pc0.040528 0.02359 0.026154 0 0.945098 0.94902 0.94902 Xa(C=0 M=0 Y=0 K=5)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(C=0 M=100 Y=100 K=0)Pc0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 Xa(C=0 M=75 Y=100 K=0)Pc0.017365 0.087495 0.969451 0 1 0.870588 0.090196 Xa(C=0 M=10 Y=95 K=0)Pc0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa(C=85 M=10 Y=100 K=0)Pc0.995392 0.873075 0.030457 0.001434 0.129412 0.25098 0.603922 Xa(C=100 M=90 Y=0 K=0)Pc0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa(C=60 M=90 Y=0 K=0)Pc0.883665 0.769161 0 0 0 0 1 Xa(R=0 G=0 B=255 1)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 7 128 128 128 0 50 Lb(sides) Ln0 A0 R0.883665 0.769161 0 0 0 0 1 XA0 J 0 j 0.028346 w 10 M []0 d0 XR155.0957 -344.9956 m155.0957 -336.2271 L183.4414 -336.2271 L183.4414 -344.9956 L314.6836 -344.9956 L314.6836 -336.2271 L343.0293 -336.2271 L343.0293 -344.9956 L474.2705 -344.9956 L474.2705 -336.2271 L502.6172 -336.2271 L502.6172 -344.9956 L526.0195 -344.9956 L526.0195 -421.0005 L502.6172 -421.0005 L502.6172 -429.77 L474.2705 -429.77 L474.2705 -421.0005 L343.0293 -421.0005 L343.0293 -429.77 L314.6836 -429.77 L314.6836 -421.0005 L183.4414 -421.0005 L183.4414 -429.77 L155.0957 -429.77 L155.0957 -421.0005 L131.9072 -421.0005 L131.9072 -344.9956 L155.0957 -344.9956 Ls1 Ap144.0527 -407.3896 m144.0527 -409.5986 145.8438 -411.3896 148.0527 -411.3896 C294.5459 -411.3896 L296.7549 -411.3896 298.5459 -409.5986 298.5459 -407.3896 C298.5459 -363.0103 L298.5459 -360.8013 296.7549 -359.0103 294.5459 -359.0103 C148.0527 -359.0103 L145.8438 -359.0103 144.0527 -360.8013 144.0527 -363.0103 C144.0527 -407.3896 Ls472.0117 -386.1768 m472.0117 -392.439 477.0879 -397.5151 483.3496 -397.5151 c489.6113 -397.5151 494.6875 -392.439 494.6875 -386.1768 c494.6875 -379.9146 489.6113 -374.8379 483.3496 -374.8379 c477.0879 -374.8379 472.0117 -379.9146 472.0117 -386.1768 cs438.499 -394.1846 m438.499 -400.4468 443.5752 -405.5229 449.8369 -405.5229 c456.0996 -405.5229 461.1758 -400.4468 461.1758 -394.1846 c461.1758 -387.9224 456.0996 -382.8457 449.8369 -382.8457 c443.5752 -382.8457 438.499 -387.9224 438.499 -394.1846 cs407.9443 -394.1846 m407.9443 -400.4468 413.0205 -405.5229 419.2822 -405.5229 c425.5439 -405.5229 430.6201 -400.4468 430.6201 -394.1846 c430.6201 -387.9224 425.5439 -382.8457 419.2822 -382.8457 c413.0205 -382.8457 407.9443 -387.9224 407.9443 -394.1846 cs377.3896 -394.1846 m377.3896 -400.4468 382.4658 -405.5229 388.7275 -405.5229 c394.9893 -405.5229 400.0654 -400.4468 400.0654 -394.1846 c400.0654 -387.9224 394.9893 -382.8457 388.7275 -382.8457 c382.4658 -382.8457 377.3896 -387.9224 377.3896 -394.1846 cs346.835 -394.1846 m346.835 -400.4468 351.9111 -405.5229 358.1729 -405.5229 c364.4346 -405.5229 369.5107 -400.4468 369.5107 -394.1846 c369.5107 -387.9224 364.4346 -382.8457 358.1729 -382.8457 c351.9111 -382.8457 346.835 -387.9224 346.835 -394.1846 cs327.0244 -379.9346 m327.0244 -376.8594 329.563 -374.3667 332.6938 -374.3667 C332.6938 -374.3667 L335.8247 -374.3667 338.3633 -376.8594 338.3633 -379.9346 C338.3633 -402.8149 L338.3633 -405.8901 335.8247 -408.3828 332.6938 -408.3828 C332.6938 -408.3828 L329.563 -408.3828 327.0244 -405.8901 327.0244 -402.8149 C327.0244 -379.9346 Lsu*u0 Ap0 0.993988 1 0 1 0 0 XA318.2285 -365.4355 m318.2285 -364.6919 318.2046 -364.0923 318.1807 -363.5405 c319.1279 -363.5405 L319.1763 -364.5356 L319.2002 -364.5356 L319.6318 -363.8281 320.3154 -363.4087 321.2627 -363.4087 c322.666 -363.4087 323.7217 -364.5957 323.7217 -366.3589 c323.7217 -368.4458 322.4502 -369.4771 321.083 -369.4771 c320.3154 -369.4771 319.6436 -369.1411 319.2959 -368.5654 c319.272 -368.5654 L319.272 -371.7197 L318.2285 -371.7197 L318.2285 -365.4355 ls1 D319.272 -366.9824 m319.272 -367.1387 319.2959 -367.2822 319.3198 -367.4141 c319.5117 -368.146 320.1475 -368.6494 320.9028 -368.6494 c322.0186 -368.6494 322.666 -367.7383 322.666 -366.4067 c322.666 -365.2437 322.0542 -364.248 320.939 -364.248 c320.2192 -364.248 319.5479 -364.7637 319.3438 -365.5552 c319.3081 -365.687 319.272 -365.8433 319.272 -365.9873 C319.272 -366.9824 ls*U*u0 D330.3091 -366.395 m330.3091 -368.5415 328.8223 -369.4771 327.4189 -369.4771 c325.8477 -369.4771 324.6362 -368.3257 324.6362 -366.4907 c324.6362 -364.5479 325.9077 -363.4087 327.5146 -363.4087 c329.1821 -363.4087 330.3091 -364.6196 330.3091 -366.395 cs1 D325.7036 -366.4546 m325.7036 -367.7261 326.4355 -368.6855 327.4668 -368.6855 c328.4741 -368.6855 329.23 -367.7383 329.23 -366.4307 c329.23 -365.4473 328.7383 -364.2002 327.4907 -364.2002 c326.2437 -364.2002 325.7036 -365.3516 325.7036 -366.4546 cs*U*u0 D331.9805 -363.5405 m332.748 -366.4907 L332.916 -367.1387 333.0718 -367.7383 333.1797 -368.3379 c333.2158 -368.3379 L333.3477 -367.75 333.5396 -367.1265 333.7314 -366.5029 c334.6787 -363.5405 L335.5664 -363.5405 L336.4663 -366.4429 L336.6821 -367.1387 336.8501 -367.75 336.9819 -368.3379 c337.0181 -368.3379 L337.1138 -367.75 337.269 -367.1387 337.4614 -366.4546 c338.2881 -363.5405 L339.333 -363.5405 L337.4614 -369.3452 L336.5015 -369.3452 L335.6143 -366.5747 L335.4106 -365.9272 335.2427 -365.3516 335.0986 -364.668 c335.0747 -364.668 L334.9307 -365.3633 334.751 -365.9629 334.5469 -366.5869 c333.6113 -369.3452 L332.6519 -369.3452 L330.9009 -363.5405 L331.9805 -363.5405 ls*U*u340.8604 -366.6348 m340.8838 -368.062 341.7959 -368.6494 342.8506 -368.6494 c343.6064 -368.6494 344.0615 -368.5176 344.458 -368.3496 c344.6377 -369.1055 L344.2666 -369.2734 343.6299 -369.4653 342.708 -369.4653 c340.9209 -369.4653 339.8525 -368.29 339.8525 -366.5386 c339.8525 -364.7876 340.8838 -363.4087 342.5752 -363.4087 c344.4697 -363.4087 344.9736 -365.0757 344.9736 -366.1431 c344.9736 -366.3589 344.9502 -366.5269 344.9385 -366.6348 C340.8604 -366.6348 ls1 D343.9541 -365.8789 m343.9658 -365.2075 343.6787 -364.1641 342.4912 -364.1641 c341.4248 -364.1641 340.9561 -365.1475 340.8721 -365.8789 C343.9541 -365.8789 ls*U*u0 D346.2842 -365.3516 m346.2842 -364.668 346.2725 -364.0801 346.2354 -363.5405 c347.1592 -363.5405 L347.1963 -364.6797 L347.2432 -364.6797 L347.5068 -363.9004 348.1436 -363.4087 348.8506 -363.4087 c348.9717 -363.4087 349.0557 -363.4204 349.1514 -363.4443 c349.1514 -364.4399 L349.042 -364.416 348.9346 -364.4038 348.79 -364.4038 c348.0479 -364.4038 347.5205 -364.9678 347.376 -365.7593 c347.3525 -365.9033 347.3271 -366.0708 347.3271 -366.251 c347.3271 -369.3452 L346.2842 -369.3452 L346.2842 -365.3516 ls*UUu*u362.5674 -362.0771 m362.5791 -362.437 362.3154 -362.7251 361.8955 -362.7251 c361.5244 -362.7251 361.2598 -362.437 361.2598 -362.0771 c361.2598 -361.7056 361.5361 -361.4175 361.9199 -361.4175 c362.3154 -361.4175 362.5674 -361.7056 362.5674 -362.0771 cs361.3926 -369.5132 m361.3926 -363.7085 L362.4473 -363.7085 L362.4473 -369.5132 L361.3926 -369.5132 ls*U*u364.2002 -365.2793 m364.2002 -364.6797 364.1875 -364.188 364.1514 -363.7085 c365.0869 -363.7085 L365.1475 -364.668 L365.1709 -364.668 L365.459 -364.1162 366.1309 -363.5767 367.0898 -363.5767 c367.8936 -363.5767 369.1406 -364.0562 369.1406 -366.0469 c369.1406 -369.5132 L368.0859 -369.5132 L368.0859 -366.167 L368.0859 -365.2314 367.7373 -364.4521 366.7422 -364.4521 c366.0469 -364.4521 365.5068 -364.9438 365.3271 -365.5313 c365.2793 -365.6631 365.2549 -365.8433 365.2549 -366.0229 c365.2549 -369.5132 L364.2002 -369.5132 L364.2002 -365.2793 ls*U*u370.8604 -365.6035 m370.8604 -364.8599 370.8359 -364.2603 370.8115 -363.7085 c371.7598 -363.7085 L371.8076 -364.7036 L371.8311 -364.7036 L372.2627 -363.9961 372.9463 -363.5767 373.8945 -363.5767 c375.2979 -363.5767 376.3525 -364.7637 376.3525 -366.5269 c376.3525 -368.6138 375.082 -369.645 373.7139 -369.645 c372.9463 -369.645 372.2754 -369.3091 371.9277 -368.7334 c371.9033 -368.7334 L371.9033 -371.8877 L370.8604 -371.8877 L370.8604 -365.6035 ls1 D371.9033 -367.1504 m371.9033 -367.3066 371.9277 -367.4502 371.9512 -367.582 c372.1436 -368.314 372.7793 -368.8174 373.5342 -368.8174 c374.6494 -368.8174 375.2979 -367.9063 375.2979 -366.5747 c375.2979 -365.4116 374.6855 -364.416 373.5703 -364.416 c372.8506 -364.416 372.1787 -364.9316 371.9756 -365.7231 c371.9395 -365.855 371.9033 -366.0112 371.9033 -366.1553 C371.9033 -367.1504 ls*U*u0 D382.5449 -367.9302 m382.5449 -368.5298 382.5576 -369.0576 382.5938 -369.5132 c381.6582 -369.5132 L381.5977 -368.5659 L381.5742 -368.5659 L381.2979 -369.0332 380.6865 -369.645 379.6553 -369.645 c378.7432 -369.645 377.6523 -369.1416 377.6523 -367.1025 c377.6523 -363.7085 L378.707 -363.7085 L378.707 -366.9229 L378.707 -368.0259 379.043 -368.7695 380.0029 -368.7695 c380.71 -368.7695 381.2021 -368.2778 381.3936 -367.8101 c381.4541 -367.6543 381.4902 -367.4624 381.4902 -367.2705 c381.4902 -363.7085 L382.5449 -363.7085 L382.5449 -367.9302 ls*U*u385.5703 -362.0415 m385.5703 -363.7085 L387.082 -363.7085 L387.082 -364.5117 L385.5703 -364.5117 L385.5703 -367.6421 L385.5703 -368.3618 385.7744 -368.7695 386.3623 -368.7695 c386.6377 -368.7695 386.8418 -368.7334 386.9736 -368.6978 c387.0215 -369.4893 L386.8184 -369.5732 386.4941 -369.6333 386.0859 -369.6333 c385.5947 -369.6333 385.1992 -369.4771 384.9473 -369.1895 c384.6475 -368.8774 384.5391 -368.3618 384.5391 -367.6782 c384.5391 -364.5117 L383.6396 -364.5117 L383.6396 -363.7085 L384.5391 -363.7085 L384.5391 -362.3174 L385.5703 -362.0415 ls*UUu*u421.6465 -366.563 m421.6465 -368.7095 420.1592 -369.645 418.7559 -369.645 c417.1846 -369.645 415.9736 -368.4937 415.9736 -366.6587 c415.9736 -364.7158 417.2441 -363.5767 418.8516 -363.5767 c420.5186 -363.5767 421.6465 -364.7876 421.6465 -366.563 cs1 D417.041 -366.6226 m417.041 -367.894 417.7725 -368.8535 418.8037 -368.8535 c419.8115 -368.8535 420.5664 -367.9063 420.5664 -366.5986 c420.5664 -365.6152 420.0752 -364.3682 418.8281 -364.3682 c417.5801 -364.3682 417.041 -365.5195 417.041 -366.6226 cs*U*u0 D427.8379 -367.9302 m427.8379 -368.5298 427.8506 -369.0576 427.8867 -369.5132 c426.9512 -369.5132 L426.8906 -368.5659 L426.8672 -368.5659 L426.5908 -369.0337 425.9795 -369.645 424.9482 -369.645 c424.0361 -369.645 422.9453 -369.1416 422.9453 -367.1025 c422.9453 -363.7085 L424 -363.7085 L424 -366.9224 L424 -368.0259 424.3359 -368.7695 425.2959 -368.7695 c426.0029 -368.7695 426.4951 -368.2778 426.6865 -367.8101 c426.7471 -367.6543 426.7832 -367.4624 426.7832 -367.2705 c426.7832 -363.7085 L427.8379 -363.7085 L427.8379 -367.9302 ls*U*u430.8643 -362.0415 m430.8643 -363.7085 L432.376 -363.7085 L432.376 -364.5117 L430.8643 -364.5117 L430.8643 -367.6421 L430.8643 -368.3618 431.0684 -368.7695 431.6563 -368.7695 c431.9316 -368.7695 432.1357 -368.7334 432.2676 -368.6978 c432.3154 -369.4893 L432.1123 -369.5732 431.7881 -369.6333 431.3799 -369.6333 c430.8887 -369.6333 430.4932 -369.4771 430.2412 -369.1895 c429.9414 -368.8774 429.833 -368.3618 429.833 -367.6782 c429.833 -364.5117 L428.9336 -364.5117 L428.9336 -363.7085 L429.833 -363.7085 L429.833 -362.3169 L430.8643 -362.0415 ls*U*u433.5654 -365.6035 m433.5654 -364.8599 433.541 -364.2603 433.5166 -363.7085 c434.4648 -363.7085 L434.5127 -364.7036 L434.5361 -364.7036 L434.9678 -363.9961 435.6514 -363.5767 436.5996 -363.5767 c438.0029 -363.5767 439.0576 -364.7637 439.0576 -366.5269 c439.0576 -368.6138 437.7871 -369.645 436.4189 -369.645 c435.6514 -369.645 434.9805 -369.3091 434.6328 -368.7334 c434.6084 -368.7334 L434.6084 -371.8877 L433.5654 -371.8877 L433.5654 -365.6035 ls1 D434.6084 -367.1504 m434.6084 -367.3062 434.6328 -367.4502 434.6563 -367.582 c434.8486 -368.314 435.4844 -368.8174 436.2393 -368.8174 c437.3545 -368.8174 438.0029 -367.9063 438.0029 -366.5747 c438.0029 -365.4116 437.3906 -364.416 436.2754 -364.416 c435.5557 -364.416 434.8838 -364.9316 434.6807 -365.7231 c434.6445 -365.855 434.6084 -366.0112 434.6084 -366.1548 C434.6084 -367.1504 ls*U*u0 D445.25 -367.9302 m445.25 -368.5298 445.2627 -369.0576 445.2988 -369.5132 c444.3633 -369.5132 L444.3027 -368.5659 L444.2793 -368.5659 L444.0029 -369.0337 443.3916 -369.645 442.3604 -369.645 c441.4482 -369.645 440.3574 -369.1416 440.3574 -367.1025 c440.3574 -363.7085 L441.4121 -363.7085 L441.4121 -366.9224 L441.4121 -368.0259 441.748 -368.7695 442.708 -368.7695 c443.415 -368.7695 443.9072 -368.2778 444.0986 -367.8101 c444.1592 -367.6543 444.1953 -367.4624 444.1953 -367.2705 c444.1953 -363.7085 L445.25 -363.7085 L445.25 -367.9302 ls*U*u448.2754 -362.0415 m448.2754 -363.7085 L449.7871 -363.7085 L449.7871 -364.5117 L448.2754 -364.5117 L448.2754 -367.6421 L448.2754 -368.3618 448.4795 -368.7695 449.0674 -368.7695 c449.3428 -368.7695 449.5469 -368.7334 449.6787 -368.6978 c449.7266 -369.4893 L449.5234 -369.5732 449.1992 -369.6333 448.791 -369.6333 c448.2998 -369.6333 447.9043 -369.4771 447.6523 -369.1895 c447.3525 -368.8774 447.2441 -368.3618 447.2441 -367.6782 c447.2441 -364.5117 L446.3447 -364.5117 L446.3447 -363.7085 L447.2441 -363.7085 L447.2441 -362.3169 L448.2754 -362.0415 ls*UUu*u466.0625 -365.6035 m466.0625 -364.8599 466.0381 -364.2603 466.0137 -363.7085 c466.9619 -363.7085 L467.0098 -364.7036 L467.0332 -364.7036 L467.4648 -363.9961 468.1484 -363.5767 469.0967 -363.5767 c470.5 -363.5767 471.5547 -364.7637 471.5547 -366.5269 c471.5547 -368.6138 470.2842 -369.645 468.916 -369.645 c468.1484 -369.645 467.4775 -369.3091 467.1299 -368.7334 c467.1055 -368.7334 L467.1055 -371.8877 L466.0625 -371.8877 L466.0625 -365.6035 ls1 D467.1055 -367.1504 m467.1055 -367.3066 467.1299 -367.4502 467.1533 -367.582 c467.3457 -368.314 467.9814 -368.8174 468.7363 -368.8174 c469.8516 -368.8174 470.5 -367.9063 470.5 -366.5747 c470.5 -365.4116 469.8877 -364.416 468.7725 -364.416 c468.0527 -364.416 467.3809 -364.9316 467.1777 -365.7231 c467.1416 -365.855 467.1055 -366.0112 467.1055 -366.1553 C467.1055 -367.1504 ls*U*u0 D472.8906 -360.998 m473.9453 -360.998 L473.9453 -364.6201 L473.9697 -364.6201 L474.1377 -364.3198 474.4014 -364.0562 474.7256 -363.8765 c475.0371 -363.6963 475.4092 -363.5767 475.8047 -363.5767 c476.584 -363.5767 477.8311 -364.0562 477.8311 -366.0591 c477.8311 -369.5132 L476.7764 -369.5132 L476.7764 -366.1792 L476.7764 -365.2437 476.4287 -364.4521 475.4326 -364.4521 c474.749 -364.4521 474.209 -364.9316 474.0176 -365.5073 c473.958 -365.6514 473.9453 -365.8071 473.9453 -366.0112 c473.9453 -369.5132 L472.8906 -369.5132 L472.8906 -360.998 ls*U*u484.8027 -366.563 m484.8027 -368.7095 483.3154 -369.645 481.9121 -369.645 c480.3408 -369.645 479.1299 -368.4937 479.1299 -366.6587 c479.1299 -364.7158 480.4014 -363.5767 482.0078 -363.5767 c483.6748 -363.5767 484.8027 -364.7876 484.8027 -366.563 cs1 D480.1973 -366.6226 m480.1973 -367.894 480.9287 -368.8535 481.96 -368.8535 c482.9678 -368.8535 483.7227 -367.9063 483.7227 -366.5986 c483.7227 -365.6152 483.2314 -364.3682 481.9844 -364.3682 c480.7363 -364.3682 480.1973 -365.5195 480.1973 -366.6226 cs*U*u0 D486.1387 -365.2793 m486.1387 -364.6797 486.126 -364.188 486.0898 -363.7085 c487.0254 -363.7085 L487.0859 -364.668 L487.1094 -364.668 L487.3975 -364.1162 488.0693 -363.5767 489.0283 -363.5767 c489.832 -363.5767 491.0791 -364.0562 491.0791 -366.0469 c491.0791 -369.5132 L490.0244 -369.5132 L490.0244 -366.167 L490.0244 -365.2314 489.6768 -364.4521 488.6807 -364.4521 c487.9854 -364.4521 487.4453 -364.9438 487.2656 -365.5313 c487.2178 -365.6631 487.1934 -365.8433 487.1934 -366.0229 c487.1934 -369.5132 L486.1387 -369.5132 L486.1387 -365.2793 ls*U*u493.3848 -366.8027 m493.4092 -368.23 494.3203 -368.8174 495.376 -368.8174 c496.1318 -368.8174 496.5869 -368.6855 496.9834 -368.5176 c497.1631 -369.2734 L496.791 -369.4414 496.1553 -369.6333 495.2324 -369.6333 c493.4453 -369.6333 492.3779 -368.458 492.3779 -366.7065 c492.3779 -364.9556 493.4092 -363.5767 495.1006 -363.5767 c496.9951 -363.5767 497.499 -365.2437 497.499 -366.311 c497.499 -366.5269 497.4746 -366.6948 497.4629 -366.8027 C493.3848 -366.8027 ls1 D496.4795 -366.0469 m496.4912 -365.3755 496.2031 -364.332 495.0166 -364.332 c493.9492 -364.332 493.4814 -365.3154 493.3975 -366.0469 C496.4795 -366.0469 ls*U*u0 D498.665 -368.4336 m498.9766 -368.6377 499.5283 -368.8535 500.0566 -368.8535 c500.8242 -368.8535 501.1836 -368.4697 501.1836 -367.9902 c501.1836 -367.4863 500.8838 -367.2104 500.1045 -366.9229 c499.0605 -366.5508 498.5693 -365.9751 498.5693 -365.2793 c498.5693 -364.3442 499.3252 -363.5767 500.5723 -363.5767 c501.1602 -363.5767 501.6758 -363.7441 501.999 -363.936 c501.7354 -364.7036 L501.5078 -364.5601 501.0879 -364.3682 500.5479 -364.3682 c499.9248 -364.3682 499.5771 -364.728 499.5771 -365.1597 c499.5771 -365.6392 499.9248 -365.855 500.6797 -366.1431 c501.6875 -366.5269 502.2031 -367.0308 502.2031 -367.894 c502.2031 -368.9136 501.4121 -369.6333 500.0322 -369.6333 c499.3965 -369.6333 498.8096 -369.4771 498.4014 -369.2373 C498.665 -368.4336 ls*UUu*u355.4443 -407.874 m355.8838 -407.7842 356.5137 -407.7344 357.1133 -407.7344 c358.043 -407.7344 358.6426 -407.9043 359.0625 -408.2837 c359.4023 -408.584 359.5918 -409.0435 359.5918 -409.563 c359.5918 -410.4526 359.0322 -411.0425 358.3223 -411.2822 c358.3223 -411.3125 L358.8428 -411.4922 359.1523 -411.9717 359.3125 -412.6714 c359.5322 -413.6108 359.6914 -414.2607 359.832 -414.5205 c358.9326 -414.5205 L358.8223 -414.3306 358.6729 -413.751 358.4824 -412.9116 c358.2822 -411.9819 357.9229 -411.6323 357.1328 -411.6021 c356.3135 -411.6021 L356.3135 -414.5205 L355.4443 -414.5205 L355.4443 -407.874 ls1 D356.3135 -410.9424 m357.2031 -410.9424 L358.1328 -410.9424 358.7227 -410.4326 358.7227 -409.6631 c358.7227 -408.7935 358.0928 -408.4141 357.1729 -408.4038 c356.7539 -408.4038 356.4531 -408.4438 356.3135 -408.4839 C356.3135 -410.9424 ls*U*u0 D387.3818 -407.7842 m388.251 -407.7842 L388.251 -413.791 L391.1299 -413.791 L391.1299 -414.5205 L387.3818 -414.5205 L387.3818 -407.7842 ls*UUu*u417.2783 -407.874 m417.7178 -407.7842 418.3477 -407.7344 418.9473 -407.7344 c419.877 -407.7344 420.4766 -407.9043 420.8965 -408.2837 c421.2363 -408.584 421.4258 -409.0435 421.4258 -409.563 c421.4258 -410.4526 420.8662 -411.0425 420.1563 -411.2822 c420.1563 -411.3125 L420.6768 -411.4922 420.9863 -411.9717 421.1465 -412.6714 c421.3662 -413.6108 421.5254 -414.2607 421.666 -414.5205 c420.7666 -414.5205 L420.6563 -414.3306 420.5068 -413.751 420.3164 -412.9116 c420.1162 -411.9819 419.7568 -411.6323 418.9668 -411.6021 c418.1475 -411.6021 L418.1475 -414.5205 L417.2783 -414.5205 L417.2783 -407.874 ls1 D418.1475 -410.9424 m419.0371 -410.9424 L419.9668 -410.9424 420.5566 -410.4326 420.5566 -409.6631 c420.5566 -408.7935 419.9268 -408.4141 419.0068 -408.4038 c418.5879 -408.4038 418.2871 -408.4438 418.1475 -408.4839 C418.1475 -410.9424 ls*U*u0 D448.2148 -407.7842 m449.084 -407.7842 L449.084 -413.791 L451.9629 -413.791 L451.9629 -414.5205 L448.2148 -414.5205 L448.2148 -407.7842 ls*UUuu1 Ap0.883665 0.769161 0 0 0 0 1 XA814.0752 -354.2993 m814.2236 -354.0415 815.0215 -354.2231 815.8555 -354.7046 C817.7432 -355.7964 L818.5771 -356.2778 819.1328 -356.8755 818.9844 -357.1343 C805.3496 -380.7485 L805.2012 -381.0063 804.4043 -380.8247 803.5703 -380.3433 C801.6816 -379.2534 L800.8477 -378.771 800.292 -378.1714 800.4414 -377.9136 C814.0752 -354.2993 Ls/BBAccumRotation (2.617994) XT831.083 -354.2993 m831.2314 -354.0415 832.0293 -354.2231 832.8633 -354.7046 C834.751 -355.7964 L835.585 -356.2778 836.1406 -356.8755 835.9922 -357.1343 C822.3574 -380.7485 L822.209 -381.0063 821.4121 -380.8247 820.5781 -380.3433 C818.6895 -379.2534 L817.8555 -378.771 817.2998 -378.1714 817.4492 -377.9136 C831.083 -354.2993 Ls/BBAccumRotation (2.617994) XT848.0908 -354.2993 m848.2393 -354.0415 849.0371 -354.2231 849.8711 -354.7046 C851.7588 -355.7964 L852.5928 -356.2778 853.1484 -356.8755 853 -357.1343 C839.3652 -380.7485 L839.2168 -381.0063 838.4199 -380.8247 837.5859 -380.3433 C835.6973 -379.2534 L834.8633 -378.771 834.3076 -378.1714 834.457 -377.9136 C848.0908 -354.2993 Ls/BBAccumRotation (2.617994) XT865.0986 -354.2993 m865.2471 -354.0415 866.0449 -354.2231 866.8789 -354.7046 C868.7666 -355.7964 L869.6006 -356.2778 870.1563 -356.8755 870.0078 -357.1343 C856.373 -380.7485 L856.2246 -381.0063 855.4277 -380.8247 854.5938 -380.3433 C852.7051 -379.2534 L851.8711 -378.771 851.3154 -378.1714 851.4648 -377.9136 C865.0986 -354.2993 Ls/BBAccumRotation (2.617994) XT882.1064 -354.2993 m882.2549 -354.0415 883.0527 -354.2231 883.8867 -354.7046 C885.7744 -355.7964 L886.6084 -356.2778 887.1641 -356.8755 887.0156 -357.1343 C873.3809 -380.7485 L873.2324 -381.0063 872.4355 -380.8247 871.6016 -380.3433 C869.7129 -379.2534 L868.8789 -378.771 868.3232 -378.1714 868.4727 -377.9136 C882.1064 -354.2993 Ls/BBAccumRotation (2.617994) XT899.1143 -354.2993 m899.2627 -354.0415 900.0605 -354.2231 900.8945 -354.7046 C902.7822 -355.7964 L903.6162 -356.2778 904.1719 -356.8755 904.0234 -357.1343 C890.3887 -380.7485 L890.2402 -381.0063 889.4434 -380.8247 888.6094 -380.3433 C886.7207 -379.2534 L885.8867 -378.771 885.3311 -378.1714 885.4805 -377.9136 C899.1143 -354.2993 Ls/BBAccumRotation (2.617994) XT916.1221 -354.2993 m916.2705 -354.0415 917.0684 -354.2231 917.9023 -354.7046 C919.79 -355.7964 L920.624 -356.2778 921.1797 -356.8755 921.0313 -357.1343 C907.3965 -380.7485 L907.248 -381.0063 906.4512 -380.8247 905.6172 -380.3433 C903.7285 -379.2534 L902.8945 -378.771 902.3389 -378.1714 902.4883 -377.9136 C916.1221 -354.2993 Ls/BBAccumRotation (2.617994) XT797.0674 -354.2993 m797.2158 -354.0415 798.0137 -354.2231 798.8477 -354.7046 C800.7354 -355.7964 L801.5693 -356.2778 802.125 -356.8755 801.9766 -357.1343 C788.3418 -380.7485 L788.1934 -381.0063 787.3965 -380.8247 786.5625 -380.3433 C784.6738 -379.2534 L783.8398 -378.771 783.2842 -378.1714 783.4336 -377.9136 C797.0674 -354.2993 Ls/BBAccumRotation (2.617994) XTU0 Ap919.9258 -345.1489 m919.9258 -336.3804 L891.5801 -336.3804 L891.5801 -345.1489 L760.3379 -345.1489 L760.3379 -336.3804 L731.9922 -336.3804 L731.9922 -345.1489 L600.751 -345.1489 L600.751 -336.3804 L572.4043 -336.3804 L572.4043 -345.1489 L549.9199 -345.1489 L549.9199 -421.1538 L572.4043 -421.1538 L572.4043 -429.9233 L600.751 -429.9233 L600.751 -421.1538 L731.9922 -421.1538 L731.9922 -429.9233 L760.3379 -429.9233 L760.3379 -421.1538 L833.4336 -421.1538 L833.3145 -420.6763 833.2393 -420.0532 833.2393 -419.3628 C833.2422 -415.9888 L833.2422 -414.4976 833.5781 -411.228 833.9941 -411.228 C874.5479 -411.228 L874.9639 -411.228 875.2998 -414.5005 875.2998 -415.9917 C875.3027 -419.3628 L875.3018 -420.0532 875.2266 -420.6763 875.1074 -421.1538 C891.5801 -421.1538 L891.5801 -429.9233 L919.9258 -429.9233 L919.9258 -421.1538 L943.7695 -421.1538 L943.7695 -345.1489 L919.9258 -345.1489 Lsu1 J 1 j916.8809 -408.335 m916.8809 -405.9863 914.9746 -404.082 912.627 -404.082 c910.2793 -404.082 908.377 -405.9863 908.377 -408.335 c908.377 -410.6836 910.2793 -412.5879 912.627 -412.5879 c914.9746 -412.5879 916.8809 -410.6836 916.8809 -408.335 C916.8809 -408.335 LsUUu1 Ap0 J 0 j1110.0967 -537.7959 m1110.0967 -544.0581 1115.1729 -549.1343 1121.4355 -549.1343 c1127.6973 -549.1343 1132.7734 -544.0581 1132.7734 -537.7959 c1132.7734 -531.5337 1127.6973 -526.457 1121.4355 -526.457 c1115.1729 -526.457 1110.0967 -531.5337 1110.0967 -537.7959 cs1110.5166 -675.3335 m1110.5166 -677.3979 1112.1855 -679.0718 1114.2441 -679.0718 C1129.4658 -679.0718 L1131.5244 -679.0718 1133.1934 -677.3979 1133.1934 -675.3335 C1133.1934 -563.7549 L1133.1934 -561.6904 1131.5244 -560.0166 1129.4658 -560.0166 C1114.2441 -560.0166 L1112.1855 -560.0166 1110.5166 -561.6904 1110.5166 -563.7549 C1110.5166 -675.3335 Lsu1128.9023 -480.2749 m1129.4189 -480.5718 1129.25 -481.8286 1128.5283 -483.0796 C1126.8916 -485.9126 L1126.1689 -487.1636 1125.167 -487.937 1124.6504 -487.6392 C1077.4209 -460.3706 L1076.9053 -460.0737 1077.0732 -458.8179 1077.7959 -457.5659 C1079.4307 -454.7339 L1080.1533 -453.4819 1081.1572 -452.7085 1081.6729 -453.0063 C1128.9023 -480.2749 Ls/BBAccumRotation (1.047198) XT1128.9023 -497.2817 m1129.4189 -497.5796 1129.25 -498.8354 1128.5283 -500.0874 C1126.8916 -502.9194 L1126.1689 -504.1714 1125.167 -504.9448 1124.6504 -504.646 C1077.4209 -477.3784 L1076.9053 -477.0806 1077.0732 -475.8257 1077.7959 -474.5737 C1079.4307 -471.7407 L1080.1533 -470.4897 1081.1572 -469.7163 1081.6729 -470.0132 C1128.9023 -497.2817 Ls/BBAccumRotation (1.047198) XT1128.9023 -514.2905 m1129.4189 -514.5874 1129.25 -515.8442 1128.5283 -517.0952 C1126.8916 -519.9282 L1126.1689 -521.1792 1125.167 -521.9526 1124.6504 -521.6548 C1077.4209 -494.3862 L1076.9053 -494.0894 1077.0732 -492.8335 1077.7959 -491.5815 C1079.4307 -488.7495 L1080.1533 -487.4976 1081.1572 -486.7241 1081.6729 -487.022 C1128.9023 -514.2905 Ls/BBAccumRotation (1.047198) XTUu1104.4219 -568.5015 m1104.6797 -568.6499 1104.498 -569.4473 1104.0166 -570.2813 C1102.9248 -572.1694 L1102.4434 -573.0034 1101.8457 -573.5591 1101.5869 -573.4106 C1077.9727 -559.7764 L1077.7148 -559.6279 1077.8965 -558.8306 1078.3779 -557.9966 C1079.4678 -556.1084 L1079.9502 -555.2739 1080.5498 -554.7183 1080.8076 -554.8672 C1104.4219 -568.5015 Ls/BBAccumRotation (1.047198) XT1104.4219 -585.5093 m1104.6797 -585.6577 1104.498 -586.4551 1104.0166 -587.2891 C1102.9248 -589.1772 L1102.4434 -590.0112 1101.8457 -590.5669 1101.5869 -590.4185 C1077.9727 -576.7842 L1077.7148 -576.6357 1077.8965 -575.8384 1078.3779 -575.0044 C1079.4678 -573.1162 L1079.9502 -572.2817 1080.5498 -571.7261 1080.8076 -571.875 C1104.4219 -585.5093 Ls/BBAccumRotation (1.047198) XT1104.4219 -602.5171 m1104.6797 -602.6655 1104.498 -603.4629 1104.0166 -604.2969 C1102.9248 -606.1851 L1102.4434 -607.019 1101.8457 -607.5747 1101.5869 -607.4263 C1077.9727 -593.792 L1077.7148 -593.6436 1077.8965 -592.8462 1078.3779 -592.0122 C1079.4678 -590.124 L1079.9502 -589.2896 1080.5498 -588.7339 1080.8076 -588.8828 C1104.4219 -602.5171 Ls/BBAccumRotation (1.047198) XT1104.4219 -619.5249 m1104.6797 -619.6733 1104.498 -620.4702 1104.0166 -621.3042 C1102.9248 -623.1934 L1102.4434 -624.0269 1101.8457 -624.5825 1101.5869 -624.4341 C1077.9727 -610.8003 L1077.7148 -610.6509 1077.8965 -609.854 1078.3779 -609.02 C1079.4678 -607.1323 L1079.9502 -606.2974 1080.5498 -605.7417 1080.8076 -605.8906 C1104.4219 -619.5249 Ls/BBAccumRotation (1.047198) XT1104.4219 -636.5327 m1104.6797 -636.6812 1104.498 -637.4785 1104.0166 -638.3125 C1102.9248 -640.2007 L1102.4434 -641.0347 1101.8457 -641.5903 1101.5869 -641.4419 C1077.9727 -627.8076 L1077.7148 -627.6592 1077.8965 -626.8618 1078.3779 -626.0278 C1079.4678 -624.1396 L1079.9502 -623.3052 1080.5498 -622.7495 1080.8076 -622.8984 C1104.4219 -636.5327 Ls/BBAccumRotation (1.047198) XT1104.4219 -653.5405 m1104.6797 -653.689 1104.498 -654.4863 1104.0166 -655.3203 C1102.9248 -657.2085 L1102.4434 -658.0425 1101.8457 -658.5981 1101.5869 -658.4497 C1077.9727 -644.8154 L1077.7148 -644.667 1077.8965 -643.8696 1078.3779 -643.0356 C1079.4678 -641.1475 L1079.9502 -640.313 1080.5498 -639.7573 1080.8076 -639.9063 C1104.4219 -653.5405 Ls/BBAccumRotation (1.047198) XT1104.4219 -670.5483 m1104.6797 -670.6968 1104.498 -671.4941 1104.0166 -672.3281 C1102.9248 -674.2163 L1102.4434 -675.0503 1101.8457 -675.606 1101.5869 -675.4575 C1077.9727 -661.8232 L1077.7148 -661.6748 1077.8965 -660.8774 1078.3779 -660.0435 C1079.4678 -658.1553 L1079.9502 -657.3208 1080.5498 -656.7651 1080.8076 -656.9141 C1104.4219 -670.5483 Ls/BBAccumRotation (1.047198) XT1104.4219 -551.4937 m1104.6797 -551.6421 1104.498 -552.439 1104.0166 -553.2729 C1102.9248 -555.1616 L1102.4434 -555.9956 1101.8457 -556.5513 1101.5869 -556.4028 C1077.9727 -542.769 L1077.7148 -542.6201 1077.8965 -541.8228 1078.3779 -540.9893 C1079.4678 -539.1006 L1079.9502 -538.2661 1080.5488 -537.7104 1080.8076 -537.8594 C1104.4219 -551.4937 Ls/BBAccumRotation (1.047198) XTUu0 Ap1 J 1 j1070.0439 -565.3921 m1070.0439 -563.043 1071.9492 -561.1387 1074.2969 -561.1387 c1076.6445 -561.1387 1078.5479 -563.043 1078.5479 -565.3921 c1078.5479 -567.7407 1076.6445 -569.6445 1074.2969 -569.6445 c1071.9492 -569.6445 1070.0439 -567.7407 1070.0439 -565.3921 C1070.0439 -565.3921 LsUu1070.0439 -635.7256 m1070.0439 -633.3765 1071.9492 -631.4722 1074.2969 -631.4722 c1076.6445 -631.4722 1078.5479 -633.3765 1078.5479 -635.7256 c1078.5479 -638.0742 1076.6445 -639.978 1074.2969 -639.978 c1071.9492 -639.978 1070.0439 -638.0742 1070.0439 -635.7256 C1070.0439 -635.7256 LsU0 J 0 j1152.1172 -617.7773 m1152.1172 -617.7734 L1152.1123 -617.7734 L1152.1104 -617.7725 1152.1094 -617.772 1152.1084 -617.771 C1143.751 -617.771 L1143.751 -617.7734 L1143.3477 -617.7734 L1143.3477 -519.2393 L1152.1172 -519.2393 L1152.1172 -519.228 L1152.1602 -519.228 L1156.7666 -516.1909 1159.8174 -510.9907 1159.8174 -505.0571 c1159.8174 -499.1021 1156.7441 -493.8853 1152.1084 -490.853 C1143.751 -490.853 L1143.751 -490.8926 L1143.3477 -490.8926 L1143.3477 -448.144 L1067.3438 -448.144 L1067.3438 -490.8926 L1058.5742 -490.8926 L1058.5742 -519.2393 L1067.3438 -519.2393 L1067.3438 -576.2471 L1071.502 -576.2471 L1071.502 -584.751 L1067.3438 -584.751 L1067.3438 -617.7734 L1058.5742 -617.7734 L1058.5742 -646.1191 L1067.3438 -646.1191 L1067.3438 -689.7295 L1143.3477 -689.7295 L1143.3477 -646.1191 L1143.751 -646.1191 L1143.751 -646.146 L1152.1602 -646.146 L1156.7666 -643.1089 1159.8174 -637.9087 1159.8174 -631.9751 c1159.8174 -626.0239 1156.748 -620.8101 1152.1172 -617.7773 CsUuu1 Ap980.9541 -494.2886 m980.4375 -494.5854 980.6064 -495.8423 981.3281 -497.0933 C982.9648 -499.9263 L983.6875 -501.1772 984.6895 -501.9507 985.2061 -501.6528 C1032.4355 -474.3843 L1032.9512 -474.0874 1032.7832 -472.8315 1032.0605 -471.5796 C1030.4258 -468.7476 L1029.7031 -467.4956 1028.6992 -466.7222 1028.1836 -467.02 C980.9541 -494.2886 Ls/BBAccumRotation (1.047198) XT980.9541 -511.2954 m980.4375 -511.5933 980.6064 -512.8491 981.3281 -514.1011 C982.9648 -516.9331 L983.6875 -518.1851 984.6895 -518.9585 985.2061 -518.6597 C1032.4355 -491.3921 L1032.9512 -491.0942 1032.7832 -489.8394 1032.0605 -488.5874 C1030.4258 -485.7544 L1029.7031 -484.5034 1028.6992 -483.73 1028.1836 -484.0269 C980.9541 -511.2954 Ls/BBAccumRotation (1.047198) XT980.9541 -528.3042 m980.4375 -528.6011 980.6064 -529.8579 981.3281 -531.1089 C982.9648 -533.9419 L983.6875 -535.1929 984.6895 -535.9663 985.2061 -535.6685 C1032.4355 -508.3999 L1032.9512 -508.103 1032.7832 -506.8472 1032.0605 -505.5952 C1030.4258 -502.7632 L1029.7031 -501.5112 1028.6992 -500.7378 1028.1836 -501.0356 C980.9541 -528.3042 Ls/BBAccumRotation (1.047198) XT980.9541 -545.311 m980.4375 -545.6089 980.6064 -546.8647 981.3281 -548.1167 C982.9648 -550.9487 L983.6875 -552.2007 984.6895 -552.9741 985.2061 -552.6753 C1032.4355 -525.4077 L1032.9512 -525.1099 1032.7832 -523.855 1032.0605 -522.603 C1030.4258 -519.77 L1029.7031 -518.519 1028.6992 -517.7456 1028.1836 -518.0425 C980.9541 -545.311 Ls/BBAccumRotation (1.047198) XT980.9541 -562.3198 m980.4375 -562.6167 980.6064 -563.8735 981.3281 -565.1245 C982.9648 -567.9575 L983.6875 -569.2085 984.6895 -569.9819 985.2061 -569.6841 C1032.4355 -542.4155 L1032.9512 -542.1187 1032.7832 -540.8628 1032.0605 -539.6108 C1030.4258 -536.7788 L1029.7031 -535.5269 1028.6992 -534.7534 1028.1836 -535.0513 C980.9541 -562.3198 Ls/BBAccumRotation (1.047198) XT980.9541 -579.3267 m980.4375 -579.6245 980.6064 -580.8813 981.3281 -582.1323 C982.9648 -584.9653 L983.6875 -586.2163 984.6895 -586.9897 985.2061 -586.6919 C1032.4355 -559.4233 L1032.9512 -559.1255 1032.7832 -557.8706 1032.0605 -556.6187 C1030.4258 -553.7856 L1029.7031 -552.5347 1028.6992 -551.7612 1028.1836 -552.0581 C980.9541 -579.3267 Ls/BBAccumRotation (1.047198) XT980.9541 -596.3354 m980.4375 -596.6333 980.6064 -597.8892 981.3281 -599.1401 C982.9648 -601.9731 L983.6875 -603.2251 984.6895 -603.9976 985.2061 -603.6997 C1032.4355 -576.4321 L1032.9512 -576.1343 1032.7832 -574.8784 1032.0605 -573.6274 C1030.4258 -570.7944 L1029.7031 -569.5425 1028.6992 -568.769 1028.1836 -569.0669 C980.9541 -596.3354 Ls/BBAccumRotation (1.047198) XT980.9541 -613.3423 m980.4375 -613.6401 980.6064 -614.897 981.3281 -616.1479 C982.9648 -618.981 L983.6875 -620.2319 984.6895 -621.0054 985.2061 -620.7075 C1032.4355 -593.439 L1032.9512 -593.1411 1032.7832 -591.8862 1032.0605 -590.6343 C1030.4258 -587.8013 L1029.7031 -586.5503 1028.6992 -585.7769 1028.1836 -586.0747 C980.9541 -613.3423 Ls/BBAccumRotation (1.047198) XT980.9541 -630.3511 m980.4375 -630.6489 980.6064 -631.9048 981.3281 -633.1558 C982.9648 -635.9888 L983.6875 -637.2407 984.6895 -638.0132 985.2061 -637.7153 C1032.4355 -610.4478 L1032.9512 -610.1499 1032.7832 -608.894 1032.0605 -607.6431 C1030.4258 -604.8101 L1029.7031 -603.5591 1028.6992 -602.7847 1028.1836 -603.0825 C980.9541 -630.3511 Ls/BBAccumRotation (1.047198) XT980.9541 -647.3579 m980.4375 -647.6558 980.6064 -648.9126 981.3281 -650.1636 C982.9648 -652.9966 L983.6875 -654.2476 984.6895 -655.021 985.2061 -654.7231 C1032.4355 -627.4546 L1032.9512 -627.1567 1032.7832 -625.9019 1032.0605 -624.6499 C1030.4258 -621.8169 L1029.7031 -620.5659 1028.6992 -619.7925 1028.1836 -620.0903 C980.9541 -647.3579 Ls/BBAccumRotation (1.047198) XT980.9541 -664.3667 m980.4375 -664.6646 980.6064 -665.9204 981.3281 -667.1714 C982.9648 -670.0044 L983.6875 -671.2563 984.6895 -672.0288 985.2061 -671.731 C1032.4355 -644.4634 L1032.9512 -644.1655 1032.7832 -642.9097 1032.0605 -641.6587 C1030.4258 -638.8257 L1029.7031 -637.5747 1028.6992 -636.8003 1028.1836 -637.0981 C980.9541 -664.3667 Ls/BBAccumRotation (1.047198) XTU0 Ap1055.7344 -519.2393 m1055.7344 -490.8926 L1046.9648 -490.8926 L1046.9648 -448.144 L970.9609 -448.144 L970.9609 -490.8926 L970.5576 -490.8926 L970.5576 -490.853 L962.2002 -490.853 L957.5645 -493.8853 954.4912 -499.1021 954.4912 -505.0571 c954.4912 -510.9907 957.542 -516.1909 962.1484 -519.228 C962.1914 -519.228 L962.1914 -519.2393 L970.9609 -519.2393 L970.9609 -617.7734 L970.5576 -617.7734 L970.5576 -617.771 L962.2002 -617.771 L962.1992 -617.772 962.1982 -617.7725 962.1963 -617.7734 C962.1914 -617.7734 L962.1914 -617.7773 L957.5605 -620.8101 954.4912 -626.0239 954.4912 -631.9751 c954.4912 -637.9087 957.542 -643.1089 962.1484 -646.146 C970.5576 -646.146 L970.5576 -646.1191 L970.9609 -646.1191 L970.9609 -689.7295 L1046.9648 -689.7295 L1046.9648 -646.1191 L1055.7344 -646.1191 L1055.7344 -617.7734 L1046.9648 -617.7734 L1046.9648 -519.2393 L1055.7344 -519.2393 LsUu954.293 -371.0063 m977.9072 -357.3721 L978.165 -357.2231 978.7646 -357.7788 979.2471 -358.6133 C980.3369 -360.5015 L980.8184 -361.3354 981 -362.1328 980.7422 -362.2813 C957.1279 -375.9155 L956.8691 -376.064 956.2715 -375.5083 955.79 -374.6743 C954.6982 -372.7861 L954.2168 -371.9521 954.0352 -371.1548 954.293 -371.0063 Cs954.293 -388.0142 m977.9072 -374.3799 L978.165 -374.231 978.7646 -374.7866 979.2471 -375.6211 C980.3369 -377.5093 L980.8184 -378.3433 981 -379.1406 980.7422 -379.2891 C957.1279 -392.9233 L956.8691 -393.0718 956.2715 -392.5161 955.79 -391.6821 C954.6982 -389.7939 L954.2168 -388.96 954.0352 -388.1626 954.293 -388.0142 Cs954.293 -405.022 m977.9072 -391.3877 L978.165 -391.2388 978.7646 -391.7944 979.2471 -392.6294 C980.3369 -394.5171 L980.8184 -395.3511 981 -396.1479 980.7422 -396.2974 C957.1279 -409.9312 L956.8691 -410.0796 956.2715 -409.5239 955.79 -408.6904 C954.6982 -406.8013 L954.2168 -405.9673 954.0352 -405.1704 954.293 -405.022 Cs957.1279 -426.939 m956.8691 -427.0874 956.2715 -426.5317 955.79 -425.6978 C954.6982 -423.8096 L954.2168 -422.9756 954.0352 -422.1782 954.293 -422.0298 C977.9072 -408.3955 L978.165 -408.2466 978.7646 -408.8022 979.2471 -409.6367 C980.3369 -411.5249 L980.8184 -412.3589 981 -413.1563 980.7422 -413.3047 C957.1279 -426.939 Ls984.418 -425.4751 m982.0703 -425.4751 980.167 -423.5713 980.167 -421.2227 c980.167 -418.8735 982.0703 -416.9692 984.418 -416.9692 c986.7656 -416.9692 988.6709 -418.8735 988.6709 -421.2227 c988.6709 -423.5713 986.7656 -425.4751 984.418 -425.4751 cs984.418 -355.1416 m982.0703 -355.1416 980.167 -353.2378 980.167 -350.8892 c980.167 -348.54 982.0703 -346.6357 984.418 -346.6357 c986.7656 -346.6357 988.6709 -348.54 988.6709 -350.8892 c988.6709 -353.2378 986.7656 -355.1416 984.418 -355.1416 cs987.3242 -343.499 m980.3398 -343.499 L980.8184 -344.3311 980.999 -345.1255 980.7422 -345.2734 C957.1279 -358.9077 L956.8691 -359.0562 956.2715 -358.5005 955.79 -357.6665 C954.6982 -355.7783 L954.2168 -354.9443 954.0352 -354.147 954.293 -353.9985 C972.4785 -343.499 L952.2568 -343.499 L950.043 -343.499 948.249 -345.3115 948.249 -347.5469 C948.249 -424.4512 L948.249 -426.2852 949.4648 -427.8169 951.1211 -428.314 C972.8662 -428.314 L977.9072 -425.4033 L978.165 -425.2544 978.7646 -425.8101 979.2471 -426.6445 C980.2109 -428.314 L987.2344 -428.314 L988.0068 -428.314 988.7217 -428.1685 989.3408 -427.9307 C990.5273 -427.2275 991.332 -425.9404 991.332 -424.4512 C991.332 -370.209 L987.248 -370.209 L987.248 -361.7505 L991.332 -361.7505 L991.332 -347.5469 L991.332 -345.3115 989.5381 -343.499 987.3242 -343.499 CsUuu1 J 1 j921.3721 -457.4292 m921.3721 -455.0806 923.2754 -453.1772 925.624 -453.1772 c927.9727 -453.1772 929.876 -455.0806 929.876 -457.4292 c929.876 -459.7778 927.9727 -461.6812 925.624 -461.6812 c923.2754 -461.6812 921.3721 -459.7778 921.3721 -457.4292 C921.3721 -457.4292 LsUu921.2754 -679.2729 m921.2754 -676.9263 923.1807 -675.021 925.5273 -675.021 c927.875 -675.021 929.7793 -676.9263 929.7793 -679.2729 c929.7793 -681.6216 927.875 -683.5249 925.5273 -683.5249 c923.1807 -683.5249 921.2754 -681.6216 921.2754 -679.2729 C921.2754 -679.2729 LsUu563.9531 -514.8765 m563.9531 -512.5278 565.8594 -510.6235 568.207 -510.6235 c570.5547 -510.6235 572.457 -512.5278 572.457 -514.8765 c572.457 -517.2251 570.5547 -519.1294 568.207 -519.1294 c565.8594 -519.1294 563.9531 -517.2251 563.9531 -514.8765 C563.9531 -514.8765 LsUu563.9531 -679.2661 m563.9531 -676.9165 565.8574 -675.0142 568.2051 -675.0142 c570.5527 -675.0142 572.457 -676.9165 572.457 -679.2661 c572.457 -681.6138 570.5527 -683.5181 568.2051 -683.5181 c565.8574 -683.5181 563.9531 -681.6138 563.9531 -679.2661 C563.9531 -679.2661 LsUu921.6504 -559.064 m921.6504 -556.7173 923.5547 -554.812 925.9023 -554.812 c928.25 -554.812 930.1543 -556.7173 930.1543 -559.064 c930.1543 -561.4126 928.25 -563.3159 925.9023 -563.3159 c923.5547 -563.3159 921.6504 -561.4126 921.6504 -559.064 C921.6504 -559.064 LsUu702.7754 -679.2729 m702.7754 -676.9263 704.6816 -675.021 707.0273 -675.021 c709.375 -675.021 711.2793 -676.9263 711.2793 -679.2729 c711.2793 -681.6216 709.375 -683.5249 707.0273 -683.5249 c704.6816 -683.5249 702.7754 -681.6216 702.7754 -679.2729 C702.7754 -679.2729 LsUu717.3516 -457.2729 m717.3516 -454.9243 719.2539 -453.021 721.6035 -453.021 c723.9512 -453.021 725.8555 -454.9243 725.8555 -457.2729 c725.8555 -459.6216 723.9512 -461.5249 721.6035 -461.5249 c719.2539 -461.5249 717.3516 -459.6216 717.3516 -457.2729 C717.3516 -457.2729 LsUu1 Ap0 J 0 j891.458 -689.7134 m891.458 -698.2173 L919.8047 -698.2173 L919.8047 -689.7134 L891.458 -689.7134 Ls/BBAccumRotation (1.570796) XT731.8711 -689.7134 m731.8711 -698.2173 L760.2168 -698.2173 L760.2168 -689.7134 L731.8711 -689.7134 Ls/BBAccumRotation (1.570796) XT572.2832 -689.7134 m572.2832 -698.2173 L600.6289 -698.2173 L600.6289 -689.7134 L572.2832 -689.7134 Ls/BBAccumRotation (1.570796) XTUu891.458 -439.6245 m891.458 -448.1284 L919.8047 -448.1284 L919.8047 -439.6245 L891.458 -439.6245 Ls/BBAccumRotation (1.570796) XT731.8711 -439.6245 m731.8711 -448.1284 L760.2168 -448.1284 L760.2168 -439.6245 L731.8711 -439.6245 Ls/BBAccumRotation (1.570796) XT572.2832 -439.6245 m572.2832 -448.1284 L600.6289 -448.1284 L600.6289 -439.6245 L572.2832 -439.6245 Ls/BBAccumRotation (1.570796) XTUu943.0635 -491.4478 m934.5596 -491.4478 L934.5586 -519.7935 L943.0625 -519.7935 L943.0635 -491.4478 Ls/BBAccumRotation (3.141593) XT943.0635 -618.3276 m934.5596 -618.3276 L934.5586 -646.6743 L943.0625 -646.6743 L943.0635 -618.3276 Ls/BBAccumRotation (3.141593) XTUu557.4414 -491.4478 m548.9375 -491.4478 L548.9375 -519.7935 L557.4414 -519.7935 L557.4414 -491.4478 Ls/BBAccumRotation (3.141593) XT557.4414 -618.3276 m548.9375 -618.3276 L548.9375 -646.6743 L557.4414 -646.6743 L557.4414 -618.3276 Ls/BBAccumRotation (3.141593) XTUu0 Ap1 J 1 j702.8301 -514.7896 m702.8301 -512.4409 704.7354 -510.5366 707.083 -510.5366 c709.4307 -510.5366 711.334 -512.4409 711.334 -514.7896 c711.334 -517.1382 709.4307 -519.0425 707.083 -519.0425 c704.7354 -519.0425 702.8301 -517.1382 702.8301 -514.7896 C702.8301 -514.7896 LsU1 Ap0 J 0 j580.4502 -664.3032 m580.4502 -666.3872 582.0127 -668.0767 583.9395 -668.0767 C588.3008 -668.0767 L590.2275 -668.0767 591.7891 -666.3872 591.7891 -664.3032 C591.7891 -473.4253 L591.7891 -471.3413 590.2275 -469.6519 588.3008 -469.6519 C583.9395 -469.6519 L582.0127 -469.6519 580.4502 -471.3413 580.4502 -473.4253 C580.4502 -664.3032 Ls605.9619 -664.3032 m605.9619 -666.3872 607.5244 -668.0767 609.4512 -668.0767 C613.8125 -668.0767 L615.7393 -668.0767 617.3008 -666.3872 617.3008 -664.3032 C617.3008 -473.4253 L617.3008 -471.3413 615.7393 -469.6519 613.8125 -469.6519 C609.4512 -469.6519 L607.5244 -469.6519 605.9619 -471.3413 605.9619 -473.4253 C605.9619 -664.3032 Ls631.4736 -664.3032 m631.4736 -666.3872 633.0361 -668.0767 634.9629 -668.0767 C639.3242 -668.0767 L641.251 -668.0767 642.8125 -666.3872 642.8125 -664.3032 C642.8125 -473.4253 L642.8125 -471.3413 641.251 -469.6519 639.3242 -469.6519 C634.9629 -469.6519 L633.0361 -469.6519 631.4736 -471.3413 631.4736 -473.4253 C631.4736 -664.3032 Ls656.9854 -664.3032 m656.9854 -666.3872 658.5479 -668.0767 660.4746 -668.0767 C664.8359 -668.0767 L666.7627 -668.0767 668.3242 -666.3872 668.3242 -664.3032 C668.3242 -473.4253 L668.3242 -471.3413 666.7627 -469.6519 664.8359 -469.6519 C660.4746 -469.6519 L658.5479 -469.6519 656.9854 -471.3413 656.9854 -473.4253 C656.9854 -664.3032 Ls682.4971 -664.3032 m682.4971 -666.3872 684.0596 -668.0767 685.9863 -668.0767 C690.3477 -668.0767 L692.2744 -668.0767 693.8359 -666.3872 693.8359 -664.3032 C693.8359 -473.4253 L693.8359 -471.3413 692.2744 -469.6519 690.3477 -469.6519 C685.9863 -469.6519 L684.0596 -469.6519 682.4971 -471.3413 682.4971 -473.4253 C682.4971 -664.3032 Ls797.5498 -580.8813 m797.5498 -582.0728 799.1123 -583.0376 801.0391 -583.0376 C805.4004 -583.0376 L807.3271 -583.0376 808.8887 -582.0728 808.8887 -580.8813 C808.8887 -471.8081 L808.8887 -470.6167 807.3271 -469.6519 805.4004 -469.6519 C801.0391 -469.6519 L799.1123 -469.6519 797.5498 -470.6167 797.5498 -471.8081 C797.5498 -580.8813 Ls823.0615 -553.0747 m823.0615 -553.9673 824.624 -554.6919 826.5508 -554.6919 C830.9121 -554.6919 L832.8389 -554.6919 834.4004 -553.9673 834.4004 -553.0747 C834.4004 -471.269 L834.4004 -470.3755 832.8389 -469.6519 830.9121 -469.6519 C826.5508 -469.6519 L824.624 -469.6519 823.0615 -470.3755 823.0615 -471.269 C823.0615 -553.0747 Ls848.5732 -525.2661 m848.5732 -525.8618 850.1357 -526.3442 852.0625 -526.3442 C856.4238 -526.3442 L858.3506 -526.3442 859.9121 -525.8618 859.9121 -525.2661 C859.9121 -470.73 L859.9121 -470.1343 858.3506 -469.6519 856.4238 -469.6519 C852.0625 -469.6519 L850.1357 -469.6519 848.5732 -470.1343 848.5732 -470.73 C848.5732 -525.2661 Ls874.085 -497.4595 m874.085 -497.7573 875.6475 -497.9985 877.5742 -497.9985 C881.9355 -497.9985 L883.8623 -497.9985 885.4238 -497.7573 885.4238 -497.4595 C885.4238 -470.1909 L885.4238 -469.8931 883.8623 -469.6519 881.9355 -469.6519 C877.5742 -469.6519 L875.6475 -469.6519 874.085 -469.8931 874.085 -470.1909 C874.085 -497.4595 Ls899.5967 -483.5552 m899.5967 -483.7046 901.1592 -483.8247 903.0859 -483.8247 C907.4473 -483.8247 L909.374 -483.8247 910.9355 -483.7046 910.9355 -483.5552 C910.9355 -469.9214 L910.9355 -469.772 909.374 -469.6519 907.4473 -469.6519 C903.0859 -469.6519 L901.1592 -469.6519 899.5967 -469.772 899.5967 -469.9214 C899.5967 -483.5552 Ls746.5264 -636.4966 m746.5264 -638.2827 748.0889 -639.731 750.0156 -639.731 C754.377 -639.731 L756.3037 -639.731 757.8652 -638.2827 757.8652 -636.4966 C757.8652 -472.8862 L757.8652 -471.1001 756.3037 -469.6519 754.377 -469.6519 C750.0156 -469.6519 L748.0889 -469.6519 746.5264 -471.1001 746.5264 -472.8862 C746.5264 -636.4966 Ls772.0381 -608.688 m772.0381 -610.1772 773.6006 -611.3833 775.5273 -611.3833 C779.8887 -611.3833 L781.8154 -611.3833 783.377 -610.1772 783.377 -608.688 C783.377 -472.3472 L783.377 -470.8579 781.8154 -469.6519 779.8887 -469.6519 C775.5273 -469.6519 L773.6006 -469.6519 772.0381 -470.8579 772.0381 -472.3472 C772.0381 -608.688 Ls721.0146 -664.3032 m721.0146 -666.3872 722.5771 -668.0767 724.5039 -668.0767 C728.8652 -668.0767 L730.792 -668.0767 732.3535 -666.3872 732.3535 -664.3032 C732.3535 -473.4253 L732.3535 -471.3413 730.792 -469.6519 728.8652 -469.6519 C724.5039 -469.6519 L722.5771 -469.6519 721.0146 -471.3413 721.0146 -473.4253 C721.0146 -664.3032 Ls0 Ap544.8154 -432.0923 m947.3945 -432.0923 L949.7256 -432.0923 951.6162 -434.0337 951.6162 -436.4282 C951.6162 -701.2993 L951.6162 -703.6938 949.7256 -705.6353 947.3945 -705.6353 C662.6299 -705.6353 L663.082 -705.6167 L660.873 -705.6167 659.082 -703.8257 659.082 -701.6167 C659.082 -701.6011 L659.0918 -689.2729 L659.0918 -686.7954 657.3008 -684.7856 655.0918 -684.7856 C620.9473 -684.7856 L618.7383 -684.7856 616.9473 -686.7954 616.9473 -689.2729 C616.9473 -701.7417 L616.9307 -701.605 L616.9307 -703.814 615.1396 -705.605 612.9307 -705.605 C612.8887 -705.6353 L544.8154 -705.6353 L542.4824 -705.6353 540.5928 -703.6938 540.5928 -701.2993 C540.5928 -436.4282 L540.5928 -434.0337 542.4824 -432.0923 544.8154 -432.0923 CsU1 Ap534.3643 -701.3149 m534.3643 -703.7104 532.4746 -705.6509 530.1426 -705.6509 C127.5635 -705.6509 L125.2319 -705.6509 123.3408 -703.7104 123.3408 -701.3149 C123.3408 -436.4438 L123.3408 -434.0493 125.2319 -432.1079 127.5635 -432.1079 C530.1426 -432.1079 L532.4746 -432.1079 534.3643 -434.0493 534.3643 -436.4438 C534.3643 -701.3149 Ls177.959 -525.3931 m177.959 -534.3955 170.6621 -541.6924 161.6597 -541.6924 c152.6572 -541.6924 145.3604 -534.3955 145.3604 -525.3931 c145.3604 -516.3906 152.6572 -509.0933 161.6597 -509.0933 c170.6621 -509.0933 177.959 -516.3906 177.959 -525.3931 cs420.959 -657.7681 m420.959 -666.77 413.6631 -674.0679 404.6602 -674.0679 c395.6582 -674.0679 388.3604 -666.77 388.3604 -657.7681 c388.3604 -648.7661 395.6582 -641.4688 404.6602 -641.4688 c413.6631 -641.4688 420.959 -648.7661 420.959 -657.7681 cs488.709 -657.7681 m488.709 -666.77 481.4121 -674.0679 472.4102 -674.0679 c463.4082 -674.0679 456.1104 -666.77 456.1104 -657.7681 c456.1104 -648.7661 463.4082 -641.4688 472.4102 -641.4688 c481.4121 -641.4688 488.709 -648.7661 488.709 -657.7681 cs353.2275 -667.0195 m165.228 -667.0195 L165.228 -573.5195 L353.2275 -573.5195 L353.2275 -667.0195 Ls0 Ap1 J 1 j153.5854 -457.4448 m153.5854 -455.0962 151.6826 -453.1929 149.3335 -453.1929 c146.9854 -453.1929 145.0815 -455.0962 145.0815 -457.4448 c145.0815 -459.7935 146.9854 -461.6968 149.3335 -461.6968 c151.6826 -461.6968 153.5854 -459.7935 153.5854 -457.4448 C153.5854 -457.4448 Lsu153.6816 -679.2886 m153.6816 -676.9414 151.7769 -675.0366 149.4297 -675.0366 c147.0825 -675.0366 145.1777 -676.9414 145.1777 -679.2886 c145.1777 -681.6367 147.0825 -683.5405 149.4297 -683.5405 c151.7769 -683.5405 153.6816 -681.6367 153.6816 -679.2886 C153.6816 -679.2886 LsUu511.0039 -514.8921 m511.0039 -512.543 509.0986 -510.6387 506.751 -510.6387 c504.4033 -510.6387 502.5 -512.543 502.5 -514.8921 c502.5 -517.2407 504.4033 -519.1445 506.751 -519.1445 c509.0986 -519.1445 511.0039 -517.2407 511.0039 -514.8921 C511.0039 -514.8921 LsUu511.0049 -679.2813 m511.0049 -676.9316 509.1006 -675.0293 506.7529 -675.0293 c504.4043 -675.0293 502.501 -676.9316 502.501 -679.2813 c502.501 -681.6294 504.4043 -683.5332 506.7529 -683.5332 c509.1006 -683.5332 511.0049 -681.6294 511.0049 -679.2813 C511.0049 -679.2813 LsUu153.3071 -559.0796 m153.3071 -556.7324 151.4023 -554.8276 149.0552 -554.8276 c146.708 -554.8276 144.8032 -556.7324 144.8032 -559.0796 c144.8032 -561.4277 146.708 -563.3315 149.0552 -563.3315 c151.4023 -563.3315 153.3071 -561.4277 153.3071 -559.0796 C153.3071 -559.0796 LsUu372.1816 -679.2886 m372.1816 -676.9414 370.2764 -675.0366 367.9297 -675.0366 c365.583 -675.0366 363.6777 -676.9414 363.6777 -679.2886 c363.6777 -681.6367 365.583 -683.5405 367.9297 -683.5405 c370.2764 -683.5405 372.1816 -681.6367 372.1816 -679.2886 C372.1816 -679.2886 LsU1 Ap0 J 0 j434.6475 -608.8506 m434.6475 -615.4141 429.3271 -620.7354 422.7637 -620.7354 c416.2002 -620.7354 410.8789 -615.4141 410.8789 -608.8506 c410.8789 -602.2871 416.2002 -596.9658 422.7637 -596.9658 c429.3271 -596.9658 434.6475 -602.2871 434.6475 -608.8506 cs502.96 -608.8506 m502.96 -615.4141 497.6396 -620.7354 491.0762 -620.7354 c484.5127 -620.7354 479.1914 -615.4141 479.1914 -608.8506 c479.1914 -602.2871 484.5127 -596.9658 491.0762 -596.9658 c497.6396 -596.9658 502.96 -602.2871 502.96 -608.8506 cs224.418 -525.1006 m224.418 -531.6641 219.0977 -536.9854 212.5342 -536.9854 c205.9707 -536.9854 200.6494 -531.6641 200.6494 -525.1006 c200.6494 -518.5371 205.9707 -513.2158 212.5342 -513.2158 c219.0977 -513.2158 224.418 -518.5371 224.418 -525.1006 csu0 Ap1 J 1 j357.6064 -457.2886 m357.6064 -454.9399 355.7041 -453.0366 353.3545 -453.0366 c351.0068 -453.0366 349.1025 -454.9399 349.1025 -457.2886 c349.1025 -459.6372 351.0068 -461.5405 353.3545 -461.5405 c355.7041 -461.5405 357.6064 -459.6372 357.6064 -457.2886 C357.6064 -457.2886 LsU1 Ap0 J 0 j502.96 -541.4131 m502.96 -547.9766 497.6396 -553.2979 491.0762 -553.2979 c484.5127 -553.2979 479.1914 -547.9766 479.1914 -541.4131 c479.1914 -534.8496 484.5127 -529.5283 491.0762 -529.5283 c497.6396 -529.5283 502.96 -534.8496 502.96 -541.4131 csu183.4995 -689.7295 m183.4995 -698.2329 L155.1528 -698.2329 L155.1528 -689.7295 L183.4995 -689.7295 Ls/BBAccumRotation (1.570796) XT343.0869 -689.7295 m343.0869 -698.2329 L314.7412 -698.2329 L314.7412 -689.7295 L343.0869 -689.7295 Ls/BBAccumRotation (1.570796) XT502.6748 -689.7295 m502.6748 -698.2329 L474.3291 -698.2329 L474.3291 -689.7295 L502.6748 -689.7295 Ls/BBAccumRotation (1.570796) XTU183.4995 -439.6406 m183.4995 -448.144 L155.1528 -448.144 L155.1528 -439.6406 L183.4995 -439.6406 Ls/BBAccumRotation (1.570796) XT343.0869 -439.6406 m343.0869 -448.144 L314.7412 -448.144 L314.7412 -439.6406 L343.0869 -439.6406 Ls/BBAccumRotation (1.570796) XT502.6748 -439.6406 m502.6748 -448.144 L474.3291 -448.144 L474.3291 -439.6406 L502.6748 -439.6406 Ls/BBAccumRotation (1.570796) XT131.894 -491.4629 m140.3979 -491.4629 L140.3989 -519.8096 L131.895 -519.8096 L131.894 -491.4629 Ls/BBAccumRotation (3.141593) XT131.894 -618.3433 m140.3979 -618.3433 L140.3989 -646.6899 L131.895 -646.6899 L131.894 -618.3433 Ls/BBAccumRotation (3.141593) XTu517.5156 -491.4629 m526.0195 -491.4629 L526.0195 -519.8096 L517.5156 -519.8096 L517.5156 -491.4629 Ls/BBAccumRotation (3.141593) XT517.5156 -618.3433 m526.0195 -618.3433 L526.0195 -646.6899 L517.5156 -646.6899 L517.5156 -618.3433 Ls/BBAccumRotation (3.141593) XTULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF